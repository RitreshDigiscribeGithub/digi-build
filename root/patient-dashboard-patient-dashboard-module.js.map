{"version":3,"sources":["./node_modules/ngx-owl-carousel-o/__ivy_ngcc__/fesm2015/ngx-owl-carousel-o.js","./node_modules/recordrtc/RecordRTC.js","./src/app/interface/payment.ts","./src/app/patient-dashboard/appointment-card/appointment-card.component.ts","./src/app/patient-dashboard/appointment-card/appointment-card.component.html","./src/app/patient-dashboard/page/confirm-appointment/confirm-appointment.component.ts","./src/app/patient-dashboard/page/confirm-appointment/confirm-appointment.component.html","./src/app/patient-dashboard/page/first-time-visitor/first-time-visitor.component.ts","./src/app/patient-dashboard/page/first-time-visitor/first-time-visitor.component.html","./src/app/patient-dashboard/page/health-records/health-records.component.ts","./src/app/patient-dashboard/page/health-records/health-records.component.html","./src/app/patient-dashboard/page/health-update/health-update.component.ts","./src/app/patient-dashboard/page/health-update/health-update.component.html","./src/app/patient-dashboard/page/my-profile/health-info/health-info.component.ts","./src/app/patient-dashboard/page/my-profile/health-info/health-info.component.html","./src/app/patient-dashboard/page/my-profile/my-profile.component.ts","./src/app/patient-dashboard/page/my-profile/my-profile.component.html","./src/app/patient-dashboard/page/my-profile/personal-info/personal-info.component.ts","./src/app/patient-dashboard/page/my-profile/personal-info/personal-info.component.html","./src/app/patient-dashboard/page/select-time/select-time.component.ts","./src/app/patient-dashboard/page/select-time/select-time.component.html","./src/app/patient-dashboard/page/your-appointments/your-appointments.component.ts","./src/app/patient-dashboard/page/your-appointments/your-appointments.component.html","./src/app/patient-dashboard/page/your-heal-cart/cart-root/cart-root.component.ts","./src/app/patient-dashboard/page/your-heal-cart/cart-root/cart-root.component.html","./src/app/patient-dashboard/page/your-heal-cart/confirm-address/confirm-address.component.ts","./src/app/patient-dashboard/page/your-heal-cart/confirm-address/confirm-address.component.html","./src/app/patient-dashboard/page/your-heal-cart/confirm-cart/confirm-cart.component.ts","./src/app/patient-dashboard/page/your-heal-cart/confirm-cart/confirm-cart.component.html","./src/app/patient-dashboard/page/your-heal-cart/confirm-timing/confirm-timing.component.ts","./src/app/patient-dashboard/page/your-heal-cart/confirm-timing/confirm-timing.component.html","./src/app/patient-dashboard/page/your-heal-cart/new-address/new-address.component.ts","./src/app/patient-dashboard/page/your-heal-cart/new-address/new-address.component.html","./src/app/patient-dashboard/page/your-heal-cart/order-summary/order-summary.component.ts","./src/app/patient-dashboard/page/your-heal-cart/order-summary/order-summary.component.html","./src/app/patient-dashboard/page/your-heal-cart/payment-method/payment-method.component.ts","./src/app/patient-dashboard/page/your-heal-cart/payment-method/payment-method.component.html","./src/app/patient-dashboard/page/your-heal-cart/your-heal-cart.component.ts","./src/app/patient-dashboard/page/your-heal-cart/your-heal-cart.component.html","./src/app/patient-dashboard/page/your-messages/your-messages.component.ts","./src/app/patient-dashboard/page/your-messages/your-messages.component.html","./src/app/patient-dashboard/patient-card/patient-card.component.ts","./src/app/patient-dashboard/patient-card/patient-card.component.html","./src/app/patient-dashboard/patient-dashboard-routing.module.ts","./src/app/patient-dashboard/patient-dashboard.component.ts","./src/app/patient-dashboard/patient-dashboard.component.html","./src/app/patient-dashboard/patient-dashboard.module.ts","./src/app/patient-dashboard/patient-root/patient-root.component.ts","./src/app/patient-dashboard/patient-root/patient-root.component.html","./src/app/services/patient-service/audio-recording.service.ts"],"names":[],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oCAAoC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,oCAAoC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,+DAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,6BAA6B,sDAAe,CAAC,0DAAmB,GAAG;AACnH,kBAAkB,gEAAyB,EAAE,4CAA4C;AACzF;AACA,KAAK,OAAO,0DAAY;AACxB;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,OAAO,0DAAmB,EAAE,EAAE,EAAE,QAAQ,EAAE;;AAEzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,CAAC,oBAAoB;AACrB;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sBAAsB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,4CAAO;AAChD;AACA;AACA;AACA,yCAAyC,4CAAO;AAChD;AACA;AACA;AACA,4CAA4C,4CAAO;AACnD;AACA;AACA;AACA,6CAA6C,4CAAO;AACpD;AACA;AACA;AACA,uCAAuC,4CAAO;AAC9C;AACA;AACA;AACA,wCAAwC,4CAAO;AAC/C;AACA;AACA;AACA,oCAAoC,4CAAO;AAC3C;AACA;AACA;AACA,qCAAqC,4CAAO;AAC5C;AACA;AACA;AACA,qCAAqC,4CAAO;AAC5C;AACA;AACA;AACA,uCAAuC,4CAAO;AAC9C;AACA;AACA;AACA,kCAAkC,4CAAO;AACzC;AACA;AACA;AACA,qCAAqC,4CAAO;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA,wDAAwD;AACxD;AACA;AACA;AACA,sCAAsC,oBAAoB,EAAE,SAAS;AACrE;AACA;AACA;AACA,qBAAqB;AACrB;AACA,sCAAsC,oBAAoB,EAAE,SAAS;AACrE;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,6DAA6D,OAAO;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,yBAAyB;AACzsDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,uCAAuC,IAAI,mBAAmB,MAAM,GAAG,IAAI,GAAG,aAAa,wBAAwB,IAAI,GAAG,mBAAmB;AAC7I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA,iCAAiC,YAAY,yCAAyC,EAAE;AACxF,oCAAoC;AACpC,kCAAkC,YAAY,yCAAyC,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,uCAAuC,+JAA+J;AAC1Q;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,YAAY,oCAAoC,EAAE;AACrG;AACA;AACA;AACA;AACA;AACA,sCAAsC,YAAY,yCAAyaAAa;AACbaAAa;AACb;AACA;AACA;AACA,uBAAuB,SAAS;AAChaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,mCAAmC,sDAAe,aAAa;AAC3H,wBAAwB,gEAAyB,EAAE,wDAAwD;AAC3G;AACA,KAAK;AACL;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,kBAAkB,EAAE,EAAE,QAAQ,EAAE;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,0DAAG;AACxF;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,6EAA6E,6DAAM,6CAA6C,0DAAG;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,iFAAiF,0DAAG;AACpF;AACA;AACA;AACA;AACA,SAAS;AACT,0BAA0B,kDAAK;AAC/B,0DAA0D,EAAE;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,WAAW;AACpD;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA,mCAAmC,WAAW;AAC9C;AACA;AACA,qBAAqB;AACrgEAAgE,qCAAqC,sDAAe,mBAAmB;AACvI,0BAA0B,gEAAyB,EAAE,4DAA4D;AACjH;AACA,KAAK;AACL;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,wBAAwB,EAAE,EAAE,QAAQ,EAAE;;AAErE,WAAW,aAAa;AACxB;AACA;AACA;AACA,mBAAmB,4DAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,sCAAsC;AACpG,yBAAyB,gEAAyB,EAAE,0DAA0D;AAC9G;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,yEAAiB;AACzB;AACA;AACA;AACA,qCAAqC,EAAE;AACvC,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yDAAW;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,4DAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,wCAAwC;AAC1G,2BAA2B,gEAAyB,EAAE,8DAA8D;AACpH;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,yEAAiB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yDAAW;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,0DAAG;AACxF;AACA;AACA;AACA,SAAS;AACT,6EAA6E,0DAAG;AAChF;AACA,SAAS;AACT,qEAAqE,0DAAG;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,+BAA+B,kDAAK;AACpC,oEAAoE,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,+CAAE,oBAAoB,gEAAS,qDAAqD,4DAAK,IAAI,6DAAM,2CAA2C,0DAAG,sDAAsD,EAAE;AACjN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,mCAAmC,sDAAe,mBAAmB,sDAAe,UAAU,sDAAe,YAAY;AACrL,wBAAwB,gEAAyB,EAAE,wDAAwD;AAC3G;AACA,KAAK,wBAAwB;AAC7B,KAAK,gCAAgC,OAAO,oDAAM,mBAAmB,GAAG;AACxE,KAAK,gCAAgC,OAAO,oDAAM,qBAAqB;AACvE;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,wBAAwB,GAAG;AAC1D,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,GAAG;AACnB,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,0DAAG;AACxF;AACA;AACA,SAAS;AACT;AACA;AACA,+BAA+B,kDAAK,+DAA+D,0DAAG;AACtG,oEAAoE,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,eAAe;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,mCAAmC,sDAAe,mBAAmB;AACjI,wBAAwB,gEAAyB,EAAE,wDAAwD;AAC3G;AACA,KAAK;AACL;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,wBAAwB,EAAE,EAAE,QAAQ,EAAE;;AAErE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,0DAAG;AAC9E;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,qCAAqC,kDAAK,4DAA4D,0DAAG;AACzG,iFAAiF,0DAAG;AACpF;AACA;AACA;AACA,SAAS;AACT,8BAA8B,kDAAK;AACnC,kEAAkE,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,KAAK;AACzC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,0DAA0D,kCAAkC,sDAAe,mBAAmB;AAC9H,uBAAuB,gEAAyB,EAAE,sDAAsD;AACxG;AACA,KAAK;AACL;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,wBAAwB,EAAE,EAAE,QAAQ,EAAE;;AAErE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,0DAAG;AACxF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,6EAA6E,0DAAG;AAChF;AACA;AACA;AACA,SAAS;AACT,iFAAiF,0DAAG;AACpF;AACA;AACA;AACA,SAAS;AACT,4BAA4B,kDAAK;AACjC,mEAAmE,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gEAAgE,qCAAqC,sDAAe,mBAAmB;AACvI,0BAA0B,gEAAyB,EAAE,4DAA4D;AACjH;AACA,KAAK;AACL;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,wBAAwB,EAAE,EAAE,QAAQ,EAAE;;AAErE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,+CAAE,kBAAkB,2DAAI;AAClD;AACA;AACA;AACA;AACA;AACA,iDAAiD,QAAQ;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,0DAAG;AACxF,6EAA6E,0DAAG;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,mDAAmD;AACjG;AACA,SAAS;AACT,8BAA8B,kDAAK;AACnC,+DAA+D,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,2DAAI;AACrC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,oDAAoD,+BAA+B,sDAAe,mBAAmB,sDAAe,CAAC,8DAAqB,MAAM,sDAAe,CAAC,sDAAa,MAAM;AACnM,oBAAoB,gEAAyB,EAAE,gDAAgD;AAC/F;AACA,KAAK,wBAAwB;AAC7B,KAAK,OAAO,8DAAc,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAC9D,KAAK,OAAO,sDAAM,gBAAgB,OAAO,sDAAQ,EAAE;AACnD;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,wBAAwB,GAAG,OAAO,8DAAqB;AACtF,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,GAAG,OAAO,sDAAa;AACvC,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,0CAA0C,+DAAwB,CAAC,yDAAkB,GAAG;AAClK,8BAA8B,+DAAwB,EAAE,2FAA2F,mGAAmG,EAAE;AACxP;AACA,KAAK,OAAO,yDAAW;AACvB;AACA;AACA,UAAU,OAAO,mDAAK,EAAE;AACxB,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,aAAa,OAAO,mDAAK,EAAE;AAC3B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB,gBAAgB,yCAAyC;AACzD,KAAK,gBAAgB,UAAU,OAAO,yDAAkB,EAAE,EAAE,EAAE,GAAG;AACjE,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C,4BAA4B,0DAAY;AACxC,0BAA0B,0DAAY;AACtC,2BAA2B,0DAAY;AACvC,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,0DAAG;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,oBAAoB,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,0DAAG;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qFAAqF,0DAAG;AACxF;AACA;AACA;AACA,SAAS;AACT,mFAAmF,0DAAG;AACtF;AACA;AACA;AACA,SAAS;AACT,2EAA2E,0DAAG;AAC9E;AACA;AACA;AACA,SAAS;AACT,4EAA4E,gEAAS;AACrF,oCAAoC,+CAAE,aAAa,6DAAM,4CAA4C,gEAAS,OAAO,iDAAI,oBAAoB,2DAAI,wBAAwB,2DAAI,uCAAuC,0DAAG;AACvN;AACA;AACA,qDAAqD,WAAW,yBAAyB;AACzF,aAAa,GAAG,8DAAO,IAAI,0DAAG;AAC9B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,mBAAmB,kDAAK;AACxB,SAAS,GAAG,0DAAG;AACf;AACA;AACA;AACA;AACA,SAAS;AACT,2EAA2E,0DAAG;AAC9E;AACA,gCAAgC,8CAA8C;AAC9E,SAAS,GAAG,gEAAS,mDAAmD,0DAAG,kDAAkD,gEAAS;AACtI;AACA,sEAAsE,4DAAK;AAC3E;AACA;AACA,uBAAuB,+CAAE;AACzB;AACA,SAAS,GAAG,0DAAG;AACf,gCAAgC,+CAA+C;AAC/E,SAAS;AACT,+BAA+B,kDAAK;AACpC,4EAA4E,EAAE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,6DAAM,uGAAuG,4DAAK;AACxI;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,qCAAqC,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,iBAAiB,+DAAwB,mBAAmB,+DAAwB,qBAAqB,+DAAwB,mBAAmB,+DAAwB,mBAAmB,+DAAwB,kBAAkB,+DAAwB,qBAAqB,+DAAwB,eAAe,+DAAwB,aAAa,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,YAAY;AACpmB,yBAAyB,+DAAwB,EAAE,yIAAyI;AAC5L,QAAQ,4DAAqB;AAC7B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,kEAAkE;AACzE,QAAQ,wDAAiB,6FAA6F,uCAAuC,EAAE,SAAS,+DAAwB;AAChM,KAAK,EAAE,WAAW,qBAAqB,YAAY,mHAAmH,aAAa,gEAAyB;AAC5M;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8nBAA8nB;AAC9nB,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB,8EAA8E,2BAA2B,EAAE,iFAAiF,0BAA0B,EAAE,iFAAiF,2BAA2B,EAAE,6EAA6E,0BAA0B,EAAE;AACxc,QAAQ,wDAAiB;AACzB,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,KAAK;AACL,QAAQ,wDAAiB,YAAY,6DAAsB;AAC3D,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,KAAK,EAAE,2BAA2B,SAAS,uDAAc,EAAE,oDAAW,kBAAkB,uDAAc,EAAE,EAAE,2CAA2C,gBAAgB,EAAE,IAAI;AAC3K;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,sBAAsB;AAC3B,KAAK,wBAAwB;AAC7B,KAAK,0BAA0B;AAC/B,KAAK,wBAAwB;AAC7B,KAAK,wBAAwB;AAC7B,KAAK,uBAAuB;AAC5B,KAAK,0BAA0B;AAC/B,KAAK,oBAAoB;AACzB,KAAK,kBAAkB;AACvB,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,gCAAgC,OAAO,oDAAM,qBAAqB;AACvE;AACA;AACA,cAAc,OAAO,6DAAe,mCAAmC;AACvE,kBAAkB,OAAO,oDAAM,EAAE;AACjC,gBAAgB,OAAO,oDAAM,EAAE;AAC/B,cAAc,OAAO,oDAAM,EAAE;AAC7B,eAAe,OAAO,oDAAM,EAAE;AAC9B,mBAAmB,OAAO,oDAAM,EAAE;AAClC,eAAe,OAAO,mDAAK,EAAE;AAC7B,0BAA0B,OAAO,0DAAY,oDAAoD;AACjG;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,+FAA+F;AACnI;AACA;AACA;AACA;AACA,yCAAyC,8BAA8B;AACvE,4CAA4C,oCAAoC;AAChF,4CAA4C,oCAAoC;AAChF;AACA,0CAA0C,+BAA+B;AACzE,8EAA8E,2DAA2D;AACzI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,gBAAgB,EAAE;AACxD,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,sBAAsB,GAAG,wBAAwB,GAAG,0BAA0B,GAAG,wBAAwB,GAAG,wBAAwB,GAAG,uBAAuB,GAAG,0BAA0B,GAAG,oBAAoB,GAAG,kBAAkB,GAAG,OAAO,+DAAwB,EAAE,GAAG;AAC1U,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,EAAE,EAAE,GAAG;AACvB,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,6DAAe;AACjC;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4DAAK;AACvB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F,WAAW;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,kCAAkC,+DAAwB,CAAC,oDAAa,GAAG,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,uDAAgB,GAAG,+DAAwB,mBAAmB,+DAAwB,kBAAkB;AACnT,sBAAsB,+DAAwB,EAAE,gHAAgH;AAChK,QAAQ,wDAAiB,4EAA4E,gCAAgC,EAAE,+EAA+E,iCAAiC,EAAE,iFAAiF,kCAAkC,EAAE,uEAAuE,0BAA0B,EAAE,2EAA2E,4BAA4B,EAAE;AAC1jB,KAAK,EAAE,WAAW,iFAAiF,8PAA8P;AACjW,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB,mFAAmF,8BAA8B,EAAE;AAC5I,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK;AACL,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB,YAAY,6DAAsB;AAC3D,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,KAAK,EAAE,eAAe,uDAAc,EAAE,uDAAc,EAAE,uDAAc,EAAE,oDAAW,EAAE,gEAAuB,4BAA4B;AACtI,YAAY,mEAAO;AACnB,gBAAgB,iEAAK,WAAW,iEAAK,EAAE,YAAY;AACnD,gBAAgB,iEAAK,SAAS,iEAAK,EAAE,cAAc;AACnD,gBAAgB,sEAAU;AAC1B,8BAA8B,YAAY;AAC1C,oBAAoB,mEAAO;AAC3B;AACA,gBAAgB,sEAAU;AAC1B,8BAA8B,UAAU;AACxC,oBAAoB,mEAAO;AAC3B;AACA;AACA,WAAW,EAAE;AACb;AACA,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,wBAAwB;AAC7B,KAAK;AACL;AACA;AACA,oBAAoB,OAAO,mDAAK,EAAE;AAClC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,mBAAmB,OAAO,0DAAY,oCAAoC;AAC1E,oBAAoB,OAAO,0DAAY,qCAAqC;AAC5E,qBAAqB,OAAO,0DAAY,sCAAsC;AAC9E,mBAAmB,OAAO,0DAAY,wBAAwB;AAC9D,qBAAqB,OAAO,0DAAY,0BAA0B;AAClE;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,8GAA8G;AAC9G;AACA,sDAAsD;AACtD;AACA,4CAA4C;AAC5C;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mEAAO;AAC3B,wBAAwB,iEAAK,WAAW,iEAAK,EAAE,YAAY;AAC3D,wBAAwB,iEAAK,SAAS,iEAAK,EAAE,cAAc;AAC3D,wBAAwB,sEAAU;AAClC,sCAAsC,YAAY;AAClD,4BAA4B,mEAAO;AACnC;AACA,wBAAwB,sEAAU;AAClC,sCAAsC,UAAU;AAChD,4BAA4B,mEAAO;AACnC;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,oDAAa,EAAE,GAAG,OAAO,wDAAiB,EAAE,GAAG,OAAO,uDAAgB,EAAE,GAAG,wBAAwB,GAAG,uBAAuB,EAAE,EAAE,GAAG;AAC1K,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,+DAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,0EAA0E,0CAA0C,+DAAwB,CAAC,sDAAa,GAAG,+DAAwB,CAAC,8DAAqB,GAAG,+DAAwB,cAAc,+DAAwB,CAAC,uDAAgB,GAAG,+DAAwB,CAAC,wDAAiB,GAAG;AAC7U,8BAA8B,+DAAwB,EAAE,oJAAoJ;AAC5M,QAAQ,wDAAiB,sEAAsE,sBAAsB,EAAE;AACvH,KAAK,EAAE,WAAW,2SAA2S,EAAE;AAC/T;AACA,KAAK,OAAO,sDAAM,EAAE;AACpB,KAAK,OAAO,8DAAc,EAAE;AAC5B,KAAK,6BAA6B,OAAO,uDAAS,uBAAuB,GAAG;AAC5E,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,OAAO,wDAAU;AACtB;AACA;AACA,mBAAmB,OAAO,mDAAK,EAAE;AACjC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,2BAA2B,OAAO,mDAAK,EAAE;AACzC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,qBAAqB,OAAO,mDAAK,EAAE;AACnC,2BAA2B,OAAO,mDAAK,EAAE;AACzC,eAAe,OAAO,0DAAY,oBAAoB;AACtD;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB,gBAAgB,qCAAqC;AACrD,KAAK,gBAAgB,UAAU,OAAO,sDAAa,EAAE,GAAG,OAAO,8DAAqB,EAAE,GAAG;AACzF,sBAAsB,uDAAS;AAC/B;AACA,aAAa,GAAG,GAAG,OAAO,uDAAgB,EAAE,GAAG,OAAO,wDAAiB,EAAE,EAAE,EAAE,GAAG;AAChF,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,6DAAa;AAC1C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,+DAAS;AACrB;AACA;AACA;AACA;AACA,0BAA0B,+BAA+B;AACzD,mBAAmB,iCAAiC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,0FAA0F,kDAAkD,+DAAwB,CAAC,sDAAa,GAAG,+DAAwB,CAAC,8DAAqB,GAAG,+DAAwB,CAAC,gEAAuB,GAAG;AACzR,sCAAsC,+DAAwB,EAAE,0KAA0K;AAC1O,QAAQ,wDAAiB,oFAAoF,oFAAoF,EAAE;AACnM,KAAK;AACL,QAAQ,4DAAqB,mBAAmB,2DAAoB;AACpE,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,6TAA6T,aAAa,kEAA2B,GAAG;AAC1X;AACA,KAAK,OAAO,sDAAM,EAAE;AACpB,KAAK,OAAO,8DAAc,EAAE;AAC5B,KAAK,OAAO,gEAAgB;AAC5B;AACA;AACA,cAAc,OAAO,yDAAW,0BAA0B,GAAG,OAAO,mDAAK,EAAE;AAC3E,mBAAmB,OAAO,mDAAK,EAAE;AACjC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,2BAA2B,OAAO,mDAAK,EAAE;AACzC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,YAAY,OAAO,yDAAW,EAAE;AAChC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,2BAA2B,OAAO,mDAAK,EAAE;AACzC,eAAe,OAAO,0DAAY,8FAA8F;AAChI;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB,gBAAgB,+BAA+B;AAC/C,KAAK,gBAAgB,UAAU,OAAO,sDAAa,EAAE,GAAG,OAAO,8DAAqB,EAAE,GAAG,OAAO,gEAAuB,EAAE,EAAE,EAAE,GAAG;AAChI,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,yDAAW;AAC7B,SAAS;AACT,kBAAkB,yDAAW;AAC7B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,8DAAuB,EAAE,uBAAuB;AACtE,sBAAsB,8DAAuB,EAAE,8CAA8C,oCAAoC,EAAE;AACnI,YAAY,4DAAY;AACxB,YAAY;AACZ,cAAc,oDAAoD,gEAAyB,kBAAkB,4BAA4B,4HAA4H,EAAE,wBAAwB,SAAS,4DAAY,EAAE,EAAE,wBAAwB,4GAA4G,EAAE,EAAE,EAAE,EAAE;AACpc,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA;AACA,oBAAoB,4DAAY;AAChC;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;;AAEuqB;;;AAGvqB,8C;;;;;;;;;;;;ACtqHA,gIAAa;;AAEb;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI,uDAAuD;AAC3D;AACA,aAAa;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,SAAS;AACT,WAAW,YAAY;AACvB,WAAW,OAAO,WAAW;AAC7B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,8EAA8E;;AAE9E;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uDAAuD,kCAAkC;AACzF;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wBAAwB;;AAExB;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,sCAAsC;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,sCAAsC;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,6CAA6C;AAC7C;AACA,YAAY;AACZ,qBAAqB,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,kBAAkB;AAClB,mBAAmB,MAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;;AAET;AACA;AACA,sBAAsB,KAAK;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,iCAAiC,iCAAiC;AAClE,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,iCAAiC,iCAAiC;AAClE,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY,iCAAiC;AAC7C,sBAAsB,YAAY;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD,wCAAwC;AACxC,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,IAAI,IAA6B;AACjC;AACA;;AAEA,IAAI,IAA0C;AAC9C,IAAI,iCAAoB,EAAE,mCAAE;AAC5B;AACA,KAAK;AAAA,oGAAC;AACN;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,WAAW,OAAO,YAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA,IAAI,6BAA6B,iCAAiC,gBAAgB;AAClF,yDAAyD,gBAAgB;AACzE,aAAa;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,SAAS;AACT,WAAW,YAAY;AACvB,WAAW,OAAO,WAAW;AAC7B;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI,sBAAsB,iCAAiC,gBAAgB;AAC3E;AACA,aAAa;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,WAAW,YAAY;AACvB,WAAW,OAAO,WAAW;AAC7B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,8BAA8B,gBAAgB;AAC9C;AACA,aAAa;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,WAAW,YAAY;AACvB,cAAc;AACd;;AAEA;;AAEA;AACA,mDAAmD,iBAAiB;AACpE,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,OAAO,cAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,oBAAoB;AAC9F,qEAAqE;AACrE,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD,kCAAkC;AACrF;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,eAAe,OAAO,SAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,6BAA6B;AAC7B,6BAA6B;AAC7B,IAAI;AACJ;AACA;;AAEA;AACA;AACA,WAAW,OAAO,YAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,mCAAmC;AACnC,oCAAoC;AACpC,wCAAwC;AACxC;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wFAAwF;AACxF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,gCAAgC;AAChC,+CAA+C;AAC/C,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA,oCAAoC,UAAU,kBAAkB;AAChE;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,WAAW,KAAK;AAChB,WAAW,SAAS;AACpB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2CAA2C,gBAAgB;AAC3D,aAAa;AACb,YAAY;AACZ;AACA;AACA,cAAc,mBAAmB;AACjC,SAAS;AACT;;AAEA;;AAEA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,oDAAoD,qFAAqF,iBAAiB,gBAAgB;AAC1K,2BAA2B,qFAAqF;AAChH,aAAa;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,SAAS;AACT,WAAW,YAAY;AACvB,WAAW,OAAO,WAAW;AAC7B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,qCAAqC;AACrC,8BAA8B,gBAAgB;;AAE9C;AACA;;AAEA;AACA,kCAAkC;AAClC;AACA;;AAEA;AACA,kBAAkB,MAAM;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA,oCAAoC;;AAEpC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,mCAAmC;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,KAAK;AACvB;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC;AACjC,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sDAAsD,gBAAgB;AACtE;AACA,aAAa;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ,SAAS;AACT,WAAW,YAAY;AACvB,WAAW,OAAO,WAAW;AAC7B;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS,mCAAmC;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,+BAA+B,SAAS;AACxC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,mCAAmC,gBAAgB;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,kCAAkC,kCAAkC;AAClF;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,0BAA0B,KAAK;AAC/B;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,aAAa;;AAEb;AACA,0BAA0B,YAAY;AACtC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA,0BAA0B,SAAS;AACnC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA,4CAA4C;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iDAAiD,gBAAgB,iGAAiG,aAAa;AAC/K;AACA,aAAa;AACb,YAAY;AACZ;AACA;AACA;AACA,mDAAmD,6CAA6C;AAChG;AACA;AACA;AACA,IAAI;AACJ,SAAS;AACT,WAAW,YAAY;AACvB,WAAW,OAAO,WAAW;AAC7B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mEAAmE;AACnE,aAAa;AACb;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,KAAK;AAC/B;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iDAAiD,gBAAgB,uDAAuD,aAAa;AACrI;AACA,aAAa;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,SAAS;AACT,WAAW,YAAY;AACvB,WAAW,OAAO,WAAW;AAC7B;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA,iDAAiD;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;;AAGA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,OAAO;AACtB,eAAe,OAAO,2DAA2D;AACjF,eAAe,OAAO,6DAA6D;AACnF,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,yEAAyE;AACzE,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,mBAAmB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,KAAK;AACnC;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yCAAyC,gBAAgB,uDAAuD;AAChH;AACA,aAAa;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wDAAwD,aAAa;AACrE;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA,gCAAgC;AAChC;AACA;;AAEA;AACA;AACA;;AAEA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,+CAA+C,kCAAkC;AACjF;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;;AAEA,2BAA2B,mBAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;;AAEA,yDAAyD;AACzD,mCAAmC,OAAO;AAC1C;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;;AAEA;AACA,+CAA+C,gBAAgB;AAC/D;AACA,aAAa;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,iCAAiC;AACjC,iCAAiC;AACjC,iCAAiC;AACjC,IAAI;AACJ;AACA,6CAA6C;AAC7C,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB,cAAc,OAAO;AACrB,SAAS;AACT;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,qCAAqC;AACrC,qCAAqC;AACrC,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4CAA4C,gBAAgB;AAC5D,aAAa;AACb,YAAY;AACZ;AACA;AACA;AACA,qEAAqE,iHAAiH;AACtL;AACA;AACA;AACA,IAAI;AACJ,SAAS;AACT,WAAW,YAAY;AACvB,WAAW,OAAO,WAAW;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAwB;AACxB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,sBAAsB,KAAK;AAC3B;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,uCAAuC;AACvC,wCAAwC;AACxC,4CAA4C;AAC5C;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,4FAA4F;AAC5F;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,yCAAyC;AACzC;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,QAAQ,IAA6B;AACrC;AACA;;AAEA,QAAQ,IAA0C;AAClD,QAAQ,iCAA4B,EAAE,mCAAE;AACxC;AACA,SAAS;AAAA,oGAAC;AACV;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,SAAS;AACT,WAAW,aAAa;AACxB,WAAW,OAAO,WAAW;AAC7B;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sDAAsD,gBAAgB,SAAS;AAC/E,0BAA0B;AAC1B,aAAa;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,WAAW,YAAY;AACvB,WAAW,OAAO,WAAW;AAC7B;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,kBAAkB,KAAK,iCAAiC,gBAAgB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,O;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,oBAAoB,EAAE;AAChE,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA,kBAAkB,KAAK;AACvB;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,SAAS;AACT,WAAW,YAAY;AACvB,WAAW,OAAO,WAAW;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AA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","file":"patient-dashboard-patient-dashboard-module.js","sourcesContent":["import { Injectable, isDevMode, ErrorHandler, InjectionToken, PLATFORM_ID, Inject, Optional, Directive, TemplateRef, Input, EventEmitter, Component, ElementRef, ChangeDetectorRef, ContentChildren, Output, HostListener, NgZone, Renderer2, Attribute, HostBinding, NgModule } from '@angular/core';\r\nimport { isPlatformBrowser, LocationStrategy, CommonModule } from '@angular/common';\r\nimport { Subject, merge, of, from } from 'rxjs';\r\nimport { EventManager } from '@angular/platform-browser';\r\nimport { tap, filter, switchMap, first, take, skip, map, toArray, delay } from 'rxjs/operators';\r\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\n\r\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\nimport * as ɵngcc2 from '@angular/router';\nimport * as ɵngcc3 from '@angular/common';\n\nconst _c0 = function (a0, a1) { return { \"isMouseDragable\": a0, \"isTouchDragable\": a1 }; };\nfunction CarouselComponent_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4);\n    ɵngcc0.ɵɵelement(1, \"owl-stage\", 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"owlDraggable\", ɵngcc0.ɵɵpureFunction2(3, _c0, ctx_r1.owlDOMData == null ? null : ctx_r1.owlDOMData.isMouseDragable, ctx_r1.owlDOMData == null ? null : ctx_r1.owlDOMData.isTouchDragable))(\"stageData\", ctx_r1.stageData)(\"slidesData\", ctx_r1.slidesData);\n} }\nconst _c1 = function (a0, a1) { return { \"active\": a0, \"owl-dot-text\": a1 }; };\nfunction CarouselComponent_ng_container_3_div_5_Template(rf, ctx) { if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function CarouselComponent_ng_container_3_div_5_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r6); const dot_r4 = ctx.$implicit; const ctx_r5 = ɵngcc0.ɵɵnextContext(2); return ctx_r5.moveByDot(dot_r4.id); });\n    ɵngcc0.ɵɵelement(1, \"span\", 12);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const dot_r4 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(2, _c1, dot_r4.active, dot_r4.showInnerContent));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", dot_r4.innerContent, ɵngcc0.ɵɵsanitizeHtml);\n} }\nconst _c2 = function (a0) { return { \"disabled\": a0 }; };\nfunction CarouselComponent_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 6);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function CarouselComponent_ng_container_3_Template_div_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.prev(); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"div\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function CarouselComponent_ng_container_3_Template_div_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.next(); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"div\", 9);\n    ɵngcc0.ɵɵtemplate(5, CarouselComponent_ng_container_3_div_5_Template, 2, 5, \"div\", 10);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(7, _c2, ctx_r2.navData == null ? null : ctx_r2.navData.disabled));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(9, _c2, ctx_r2.navData == null ? null : ctx_r2.navData.prev == null ? null : ctx_r2.navData.prev.disabled))(\"innerHTML\", ctx_r2.navData == null ? null : ctx_r2.navData.prev == null ? null : ctx_r2.navData.prev.htmlText, ɵngcc0.ɵɵsanitizeHtml);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(11, _c2, ctx_r2.navData == null ? null : ctx_r2.navData.next == null ? null : ctx_r2.navData.next.disabled))(\"innerHTML\", ctx_r2.navData == null ? null : ctx_r2.navData.next == null ? null : ctx_r2.navData.next.htmlText, ɵngcc0.ɵɵsanitizeHtml);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(13, _c2, ctx_r2.dotsData == null ? null : ctx_r2.dotsData.disabled));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r2.dotsData == null ? null : ctx_r2.dotsData.dots);\n} }\nconst _c3 = function (a0, a1, a2, a3, a4) { return { \"owl-rtl\": a0, \"owl-loaded\": a1, \"owl-responsive\": a2, \"owl-drag\": a3, \"owl-grab\": a4 }; };\nfunction StageComponent_ng_container_2_2_ng_template_0_Template(rf, ctx) { }\nfunction StageComponent_ng_container_2_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, StageComponent_ng_container_2_2_ng_template_0_Template, 0, 0, \"ng-template\", 4);\n} if (rf & 2) {\n    const slide_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", slide_r1.tplRef);\n} }\nconst _c4 = function (a0, a1, a2, a3) { return { \"width\": a0, \"margin-left\": a1, \"margin-right\": a2, \"left\": a3 }; };\nfunction StageComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"animationend\", function StageComponent_ng_container_2_Template_div_animationend_1_listener() { ɵngcc0.ɵɵrestoreView(_r7); const slide_r1 = ctx.$implicit; const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.clear(slide_r1.id); });\n    ɵngcc0.ɵɵtemplate(2, StageComponent_ng_container_2_2_Template, 1, 1, undefined, 3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const slide_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", slide_r1.classes)(\"ngStyle\", ɵngcc0.ɵɵpureFunction4(4, _c4, slide_r1.width + \"px\", slide_r1.marginL ? slide_r1.marginL + \"px\" : \"\", slide_r1.marginR ? slide_r1.marginR + \"px\" : \"\", slide_r1.left))(\"@autoHeight\", slide_r1.heightState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", slide_r1.load);\n} }\nconst _c5 = function (a0, a1, a2, a3, a4) { return { \"width\": a0, \"transform\": a1, \"transition\": a2, \"padding-left\": a3, \"padding-right\": a4 }; };\nclass ResizeService {\r\n    constructor(eventManager) {\r\n        this.eventManager = eventManager;\r\n        this.resizeSubject = new Subject();\r\n        this.eventManager.addGlobalEventListener('window', 'resize', this.onResize.bind(this));\r\n        this.eventManager.addGlobalEventListener('window', 'onload', this.onLoaded.bind(this));\r\n    }\r\n    /**\r\n     * Makes resizeSubject become Observable\r\n     * @returns Observable of resizeSubject\r\n     */\r\n    get onResize$() {\r\n        return this.resizeSubject.asObservable();\r\n    }\r\n    /**\r\n     * Handler of 'resize' event. Passes data throw resizeSubject\r\n     * @param event Event Object of 'resize' event\r\n     */\r\n    onResize(event) {\r\n        this.resizeSubject.next(event.target);\r\n    }\r\n    /**\r\n     * Handler of 'onload' event. Defines the width of window\r\n     * @param event Event Object of 'onload' event\r\n     */\r\n    onLoaded(event) {\r\n        this.windowWidth = event.target;\r\n    }\r\n}\nResizeService.ɵfac = function ResizeService_Factory(t) { return new (t || ResizeService)(ɵngcc0.ɵɵinject(ɵngcc1.EventManager)); };\nResizeService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ResizeService, factory: ResizeService.ɵfac });\r\nResizeService.ctorParameters = () => [\r\n    { type: EventManager }\r\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ResizeService, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc1.EventManager }]; }, null); })();\r\n\r\n/**\r\n * Defaults value of options\r\n */\r\nclass OwlCarouselOConfig {\r\n    constructor() {\r\n        this.items = 3;\r\n        this.skip_validateItems = false;\r\n        this.loop = false;\r\n        this.center = false;\r\n        this.rewind = false;\r\n        this.mouseDrag = true;\r\n        this.touchDrag = true;\r\n        this.pullDrag = true;\r\n        this.freeDrag = false;\r\n        this.margin = 0;\r\n        this.stagePadding = 0;\r\n        this.merge = false;\r\n        this.mergeFit = true;\r\n        this.autoWidth = false;\r\n        this.startPosition = 0;\r\n        this.rtl = false;\r\n        this.smartSpeed = 250;\r\n        this.fluidSpeed = false;\r\n        this.dragEndSpeed = false;\r\n        this.responsive = {};\r\n        this.responsiveRefreshRate = 200;\r\n        // defaults to Navigation\r\n        this.nav = false;\r\n        this.navText = ['prev', 'next'];\r\n        this.navSpeed = false;\r\n        this.slideBy = 1; // stage moves on 1 width of slide; if slideBy = 2, stage moves on 2 widths of slide\r\n        this.dots = true;\r\n        this.dotsEach = false;\r\n        this.dotsData = false;\r\n        this.dotsSpeed = false;\r\n        // defaults to Autoplay\r\n        this.autoplay = false;\r\n        this.autoplayTimeout = 5000;\r\n        this.autoplayHoverPause = false;\r\n        this.autoplaySpeed = false;\r\n        this.autoplayMouseleaveTimeout = 1;\r\n        // defaults to LazyLoading\r\n        this.lazyLoad = false;\r\n        this.lazyLoadEager = 0;\r\n        // defaults to Animate\r\n        this.slideTransition = '';\r\n        this.animateOut = false;\r\n        this.animateIn = false;\r\n        // defaults to AutoHeight\r\n        this.autoHeight = false;\r\n        // defaults to Hash\r\n        this.URLhashListener = false;\r\n    }\r\n}\r\n/**\r\n * we can't read types from OwlOptions in javascript because of props have undefined value and types of those props are used for validating inputs\r\n * class below is copy of OwlOptions but its all props have string value showing certain type;\r\n * this is class is being used just in method _validateOptions() of CarouselService;\r\n */\r\nclass OwlOptionsMockedTypes {\r\n    constructor() {\r\n        this.items = 'number';\r\n        this.skip_validateItems = 'boolean';\r\n        this.loop = 'boolean';\r\n        this.center = 'boolean';\r\n        this.rewind = 'boolean';\r\n        this.mouseDrag = 'boolean';\r\n        this.touchDrag = 'boolean';\r\n        this.pullDrag = 'boolean';\r\n        this.freeDrag = 'boolean';\r\n        this.margin = 'number';\r\n        this.stagePadding = 'number';\r\n        this.merge = 'boolean';\r\n        this.mergeFit = 'boolean';\r\n        this.autoWidth = 'boolean';\r\n        this.startPosition = 'number|string';\r\n        this.rtl = 'boolean';\r\n        this.smartSpeed = 'number';\r\n        this.fluidSpeed = 'boolean';\r\n        this.dragEndSpeed = 'number|boolean';\r\n        this.responsive = {};\r\n        this.responsiveRefreshRate = 'number';\r\n        // defaults to Navigation\r\n        this.nav = 'boolean';\r\n        this.navText = 'string[]';\r\n        this.navSpeed = 'number|boolean';\r\n        this.slideBy = 'number|string'; // stage moves on 1 width of slide; if slideBy = 2, stage moves on 2 widths of slide\r\n        this.dots = 'boolean';\r\n        this.dotsEach = 'number|boolean';\r\n        this.dotsData = 'boolean';\r\n        this.dotsSpeed = 'number|boolean';\r\n        // defaults to Autoplay\r\n        this.autoplay = 'boolean';\r\n        this.autoplayTimeout = 'number';\r\n        this.autoplayHoverPause = 'boolean';\r\n        this.autoplaySpeed = 'number|boolean';\r\n        this.autoplayMouseleaveTimeout = 'number';\r\n        // defaults to LazyLoading\r\n        this.lazyLoad = 'boolean';\r\n        this.lazyLoadEager = 'number';\r\n        // defaults to Animate\r\n        this.slideTransition = 'string';\r\n        this.animateOut = 'string|boolean';\r\n        this.animateIn = 'string|boolean';\r\n        // defaults to AutoHeight\r\n        this.autoHeight = 'boolean';\r\n        // defaults to Hash\r\n        this.URLhashListener = \"boolean\";\r\n    }\r\n}\r\n\r\nclass OwlLogger {\r\n    constructor(errorHandler) {\r\n        this.errorHandler = errorHandler;\r\n    }\r\n    log(value, ...rest) {\r\n        if (isDevMode()) {\r\n            console.log(value, ...rest);\r\n        }\r\n    }\r\n    error(error) {\r\n        this.errorHandler.handleError(error);\r\n    }\r\n    warn(value, ...rest) {\r\n        console.warn(value, ...rest);\r\n    }\r\n}\nOwlLogger.ɵfac = function OwlLogger_Factory(t) { return new (t || OwlLogger)(ɵngcc0.ɵɵinject(ɵngcc0.ErrorHandler)); };\nOwlLogger.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: OwlLogger, factory: OwlLogger.ɵfac });\r\nOwlLogger.ctorParameters = () => [\r\n    { type: ErrorHandler }\r\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OwlLogger, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc0.ErrorHandler }]; }, null); })();\r\n\r\n/**\r\n * Current state information and their tags.\r\n */\r\nclass States {\r\n}\r\n/**\r\n * Enumeration for types.\r\n * @enum {String}\r\n */\r\nvar Type;\r\n(function (Type) {\r\n    Type[\"Event\"] = \"event\";\r\n    Type[\"State\"] = \"state\";\r\n})(Type || (Type = {}));\r\n;\r\n/**\r\n * Enumeration for width.\r\n * @enum {String}\r\n */\r\nvar Width;\r\n(function (Width) {\r\n    Width[\"Default\"] = \"default\";\r\n    Width[\"Inner\"] = \"inner\";\r\n    Width[\"Outer\"] = \"outer\";\r\n})(Width || (Width = {}));\r\n;\r\n/**\r\n * Model for coords of .owl-stage\r\n */\r\nclass Coords {\r\n}\r\n/**\r\n * Model for all current data of carousel\r\n */\r\nclass CarouselCurrentData {\r\n}\r\nclass CarouselService {\r\n    constructor(logger) {\r\n        this.logger = logger;\r\n        /**\r\n       * Subject for passing data needed for managing View\r\n       */\r\n        this._viewSettingsShipper$ = new Subject();\r\n        /**\r\n       * Subject for notification when the carousel got initializes\r\n       */\r\n        this._initializedCarousel$ = new Subject();\r\n        /**\r\n       * Subject for notification when the carousel's settings start changinf\r\n       */\r\n        this._changeSettingsCarousel$ = new Subject();\r\n        /**\r\n       * Subject for notification when the carousel's settings have changed\r\n       */\r\n        this._changedSettingsCarousel$ = new Subject();\r\n        /**\r\n       * Subject for notification when the carousel starts translating or moving\r\n       */\r\n        this._translateCarousel$ = new Subject();\r\n        /**\r\n       * Subject for notification when the carousel stopped translating or moving\r\n       */\r\n        this._translatedCarousel$ = new Subject();\r\n        /**\r\n       * Subject for notification when the carousel's rebuilding caused by 'resize' event starts\r\n       */\r\n        this._resizeCarousel$ = new Subject();\r\n        /**\r\n       * Subject for notification  when the carousel's rebuilding caused by 'resize' event is ended\r\n       */\r\n        this._resizedCarousel$ = new Subject();\r\n        /**\r\n       * Subject for notification when the refresh of carousel starts\r\n       */\r\n        this._refreshCarousel$ = new Subject();\r\n        /**\r\n       * Subject for notification when the refresh of carousel is ended\r\n       */\r\n        this._refreshedCarousel$ = new Subject();\r\n        /**\r\n       * Subject for notification when the dragging of carousel starts\r\n       */\r\n        this._dragCarousel$ = new Subject();\r\n        /**\r\n       * Subject for notification when the dragging of carousel is ended\r\n       */\r\n        this._draggedCarousel$ = new Subject();\r\n        /**\r\n         * Current settings for the carousel.\r\n         */\r\n        this.settings = {\r\n            items: 0\r\n        };\r\n        /**\r\n       * Initial data for setting classes to element .owl-carousel\r\n       */\r\n        this.owlDOMData = {\r\n            rtl: false,\r\n            isResponsive: false,\r\n            isRefreshed: false,\r\n            isLoaded: false,\r\n            isLoading: false,\r\n            isMouseDragable: false,\r\n            isGrab: false,\r\n            isTouchDragable: false\r\n        };\r\n        /**\r\n       * Initial data of .owl-stage\r\n       */\r\n        this.stageData = {\r\n            transform: 'translate3d(0px,0px,0px)',\r\n            transition: '0s',\r\n            width: 0,\r\n            paddingL: 0,\r\n            paddingR: 0\r\n        };\r\n        /**\r\n         * All real items.\r\n         */\r\n        this._items = []; // is equal to this.slides\r\n        /**\r\n       * Array with width of every slide.\r\n       */\r\n        this._widths = [];\r\n        /**\r\n       * Currently suppressed events to prevent them from beeing retriggered.\r\n       */\r\n        this._supress = {};\r\n        /**\r\n         * References to the running plugins of this carousel.\r\n         */\r\n        this._plugins = {};\r\n        /**\r\n       * Absolute current position.\r\n       */\r\n        this._current = null;\r\n        /**\r\n       * All cloned items.\r\n       */\r\n        this._clones = [];\r\n        /**\r\n         * Merge values of all items.\r\n         * @todo Maybe this could be part of a plugin.\r\n         */\r\n        this._mergers = [];\r\n        /**\r\n       * Animation speed in milliseconds.\r\n       */\r\n        this._speed = null;\r\n        /**\r\n       * Coordinates of all items in pixel.\r\n       * @todo The name of this member is missleading.\r\n       */\r\n        this._coordinates = [];\r\n        /**\r\n       * Current breakpoint.\r\n       * @todo Real media queries would be nice.\r\n       */\r\n        this._breakpoint = null;\r\n        /**\r\n         * Prefix for id of cloned slides\r\n         */\r\n        this.clonedIdPrefix = 'cloned-';\r\n        /**\r\n         * Current options set by the caller including defaults.\r\n         */\r\n        this._options = {};\r\n        /**\r\n         * Invalidated parts within the update process.\r\n         */\r\n        this._invalidated = {};\r\n        /**\r\n         * Current state information and their tags.\r\n         */\r\n        this._states = {\r\n            current: {},\r\n            tags: {\r\n                initializing: ['busy'],\r\n                animating: ['busy'],\r\n                dragging: ['interacting']\r\n            }\r\n        };\r\n        /**\r\n         * Ordered list of workers for the update process.\r\n       */\r\n        this._pipe = [\r\n            // {\r\n            //   filter: ['width', 'settings'],\r\n            //   run: () => {\r\n            //     this._width = this.carouselWindowWidth;\r\n            //   }\r\n            // },\r\n            {\r\n                filter: ['width', 'items', 'settings'],\r\n                run: cache => {\r\n                    cache.current = this._items && this._items[this.relative(this._current)].id;\r\n                }\r\n            },\r\n            // {\r\n            //   filter: ['items', 'settings'],\r\n            //   run: function() {\r\n            //     // this.$stage.children('.cloned').remove();\r\n            //   }\r\n            // },\r\n            {\r\n                filter: ['width', 'items', 'settings'],\r\n                run: (cache) => {\r\n                    const margin = this.settings.margin || '', grid = !this.settings.autoWidth, rtl = this.settings.rtl, css = {\r\n                        'margin-left': rtl ? margin : '',\r\n                        'margin-right': rtl ? '' : margin\r\n                    };\r\n                    if (!grid) {\r\n                        this.slidesData.forEach(slide => {\r\n                            slide.marginL = css['margin-left'];\r\n                            slide.marginR = css['margin-right'];\r\n                        });\r\n                    }\r\n                    cache.css = css;\r\n                }\r\n            },\r\n            {\r\n                filter: ['width', 'items', 'settings'],\r\n                run: (cache) => {\r\n                    const width = +(this.width() / this.settings.items).toFixed(3) - this.settings.margin, grid = !this.settings.autoWidth, widths = [];\r\n                    let merge = null, iterator = this._items.length;\r\n                    cache.items = {\r\n                        merge: false,\r\n                        width: width\r\n                    };\r\n                    while (iterator--) {\r\n                        merge = this._mergers[iterator];\r\n                        merge = this.settings.mergeFit && Math.min(merge, this.settings.items) || merge;\r\n                        cache.items.merge = merge > 1 || cache.items.merge;\r\n                        widths[iterator] = !grid ? this._items[iterator].width ? this._items[iterator].width : width : width * merge;\r\n                    }\r\n                    this._widths = widths;\r\n                    this.slidesData.forEach((slide, i) => {\r\n                        slide.width = this._widths[i];\r\n                        slide.marginR = cache.css['margin-right'];\r\n                        slide.marginL = cache.css['margin-left'];\r\n                    });\r\n                }\r\n            }, {\r\n                filter: ['items', 'settings'],\r\n                run: () => {\r\n                    const clones = [], items = this._items, settings = this.settings, \r\n                    // TODO: Should be computed from number of min width items in stage\r\n                    view = Math.max(settings.items * 2, 4), size = Math.ceil(items.length / 2) * 2;\r\n                    let append = [], prepend = [], repeat = settings.loop && items.length ? settings.rewind ? view : Math.max(view, size) : 0;\r\n                    repeat /= 2;\r\n                    while (repeat--) {\r\n                        // Switch to only using appended clones\r\n                        clones.push(this.normalize(clones.length / 2, true));\r\n                        append.push(Object.assign({}, this.slidesData[clones[clones.length - 1]]));\r\n                        clones.push(this.normalize(items.length - 1 - (clones.length - 1) / 2, true));\r\n                        prepend.unshift(Object.assign({}, this.slidesData[clones[clones.length - 1]]));\r\n                    }\r\n                    this._clones = clones;\r\n                    append = append.map(slide => {\r\n                        slide.id = `${this.clonedIdPrefix}${slide.id}`;\r\n                        slide.isActive = false;\r\n                        slide.isCloned = true;\r\n                        return slide;\r\n                    });\r\n                    prepend = prepend.map(slide => {\r\n                        slide.id = `${this.clonedIdPrefix}${slide.id}`;\r\n                        slide.isActive = false;\r\n                        slide.isCloned = true;\r\n                        return slide;\r\n                    });\r\n                    this.slidesData = prepend.concat(this.slidesData).concat(append);\r\n                }\r\n            },\r\n            {\r\n                filter: ['width', 'items', 'settings'],\r\n                run: () => {\r\n                    const rtl = this.settings.rtl ? 1 : -1, size = this._clones.length + this._items.length, coordinates = [];\r\n                    let iterator = -1, previous = 0, current = 0;\r\n                    while (++iterator < size) {\r\n                        previous = coordinates[iterator - 1] || 0;\r\n                        current = this._widths[this.relative(iterator)] + this.settings.margin;\r\n                        coordinates.push(previous + current * rtl);\r\n                    }\r\n                    this._coordinates = coordinates;\r\n                }\r\n            }, {\r\n                filter: ['width', 'items', 'settings'],\r\n                run: () => {\r\n                    const padding = this.settings.stagePadding, coordinates = this._coordinates, css = {\r\n                        'width': Math.ceil(Math.abs(coordinates[coordinates.length - 1])) + padding * 2,\r\n                        'padding-left': padding || '',\r\n                        'padding-right': padding || ''\r\n                    };\r\n                    this.stageData.width = css.width; // use this property in *ngIf directive for .owl-stage element\r\n                    this.stageData.paddingL = css['padding-left'];\r\n                    this.stageData.paddingR = css['padding-right'];\r\n                }\r\n            }, {\r\n                //   filter: [ 'width', 'items', 'settings' ],\r\n                //   run: cache => {\r\n                // \t\t// this method sets the width for every slide, but I set it in different way earlier\r\n                // \t\tconst grid = !this.settings.autoWidth,\r\n                // \t\titems = this.$stage.children(); // use this.slidesData\r\n                //     let iterator = this._coordinates.length;\r\n                //     if (grid && cache.items.merge) {\r\n                //       while (iterator--) {\r\n                //         cache.css.width = this._widths[this.relative(iterator)];\r\n                //         items.eq(iterator).css(cache.css);\r\n                //       }\r\n                //     } else if (grid) {\r\n                //       cache.css.width = cache.items.width;\r\n                //       items.css(cache.css);\r\n                //     }\r\n                //   }\r\n                // }, {\r\n                //   filter: [ 'items' ],\r\n                //   run: function() {\r\n                //     this._coordinates.length < 1 && this.$stage.removeAttr('style');\r\n                //   }\r\n                // }, {\r\n                filter: ['width', 'items', 'settings'],\r\n                run: cache => {\r\n                    let current = cache.current ? this.slidesData.findIndex(slide => slide.id === cache.current) : 0;\r\n                    current = Math.max(this.minimum(), Math.min(this.maximum(), current));\r\n                    this.reset(current);\r\n                }\r\n            }, {\r\n                filter: ['position'],\r\n                run: () => {\r\n                    this.animate(this.coordinates(this._current));\r\n                }\r\n            }, {\r\n                filter: ['width', 'position', 'items', 'settings'],\r\n                run: () => {\r\n                    const rtl = this.settings.rtl ? 1 : -1, padding = this.settings.stagePadding * 2, matches = [];\r\n                    let begin, end, inner, outer, i, n;\r\n                    begin = this.coordinates(this.current());\r\n                    if (typeof begin === 'number') {\r\n                        begin += padding;\r\n                    }\r\n                    else {\r\n                        begin = 0;\r\n                    }\r\n                    end = begin + this.width() * rtl;\r\n                    if (rtl === -1 && this.settings.center) {\r\n                        const result = this._coordinates.filter(element => {\r\n                            return this.settings.items % 2 === 1 ? element >= begin : element > begin;\r\n                        });\r\n                        begin = result.length ? result[result.length - 1] : begin;\r\n                    }\r\n                    for (i = 0, n = this._coordinates.length; i < n; i++) {\r\n                        inner = Math.ceil(this._coordinates[i - 1] || 0);\r\n                        outer = Math.ceil(Math.abs(this._coordinates[i]) + padding * rtl);\r\n                        if ((this._op(inner, '<=', begin) && (this._op(inner, '>', end)))\r\n                            || (this._op(outer, '<', begin) && this._op(outer, '>', end))) {\r\n                            matches.push(i);\r\n                        }\r\n                    }\r\n                    this.slidesData.forEach(slide => {\r\n                        slide.isActive = false;\r\n                        return slide;\r\n                    });\r\n                    matches.forEach(item => {\r\n                        this.slidesData[item].isActive = true;\r\n                    });\r\n                    if (this.settings.center) {\r\n                        this.slidesData.forEach(slide => {\r\n                            slide.isCentered = false;\r\n                            return slide;\r\n                        });\r\n                        this.slidesData[this.current()].isCentered = true;\r\n                    }\r\n                }\r\n            }\r\n        ];\r\n    }\r\n    // Is needed for tests\r\n    get invalidated() {\r\n        return this._invalidated;\r\n    }\r\n    // is needed for tests\r\n    get states() {\r\n        return this._states;\r\n    }\r\n    /**\r\n     * Makes _viewSettingsShipper$ Subject become Observable\r\n     * @returns Observable of _viewSettingsShipper$ Subject\r\n     */\r\n    getViewCurSettings() {\r\n        return this._viewSettingsShipper$.asObservable();\r\n    }\r\n    /**\r\n     * Makes _initializedCarousel$ Subject become Observable\r\n     * @returns Observable of _initializedCarousel$ Subject\r\n     */\r\n    getInitializedState() {\r\n        return this._initializedCarousel$.asObservable();\r\n    }\r\n    /**\r\n     * Makes _changeSettingsCarousel$ Subject become Observable\r\n     * @returns Observable of _changeSettingsCarousel$ Subject\r\n     */\r\n    getChangeState() {\r\n        return this._changeSettingsCarousel$.asObservable();\r\n    }\r\n    /**\r\n     * Makes _changedSettingsCarousel$ Subject become Observable\r\n     * @returns Observable of _changedSettingsCarousel$ Subject\r\n     */\r\n    getChangedState() {\r\n        return this._changedSettingsCarousel$.asObservable();\r\n    }\r\n    /**\r\n     * Makes _translateCarousel$ Subject become Observable\r\n     * @returns Observable of _translateCarousel$ Subject\r\n     */\r\n    getTranslateState() {\r\n        return this._translateCarousel$.asObservable();\r\n    }\r\n    /**\r\n     * Makes _translatedCarousel$ Subject become Observable\r\n     * @returns Observable of _translatedCarousel$ Subject\r\n     */\r\n    getTranslatedState() {\r\n        return this._translatedCarousel$.asObservable();\r\n    }\r\n    /**\r\n     * Makes _resizeCarousel$ Subject become Observable\r\n     * @returns Observable of _resizeCarousel$ Subject\r\n     */\r\n    getResizeState() {\r\n        return this._resizeCarousel$.asObservable();\r\n    }\r\n    /**\r\n     * Makes _resizedCarousel$ Subject become Observable\r\n     * @returns Observable of _resizedCarousel$ Subject\r\n     */\r\n    getResizedState() {\r\n        return this._resizedCarousel$.asObservable();\r\n    }\r\n    /**\r\n     * Makes _refreshCarousel$ Subject become Observable\r\n     * @returns Observable of _refreshCarousel$ Subject\r\n     */\r\n    getRefreshState() {\r\n        return this._refreshCarousel$.asObservable();\r\n    }\r\n    /**\r\n     * Makes _refreshedCarousel$ Subject become Observable\r\n     * @returns Observable of _refreshedCarousel$ Subject\r\n     */\r\n    getRefreshedState() {\r\n        return this._refreshedCarousel$.asObservable();\r\n    }\r\n    /**\r\n     * Makes _dragCarousel$ Subject become Observable\r\n     * @returns Observable of _dragCarousel$ Subject\r\n     */\r\n    getDragState() {\r\n        return this._dragCarousel$.asObservable();\r\n    }\r\n    /**\r\n     * Makes _draggedCarousel$ Subject become Observable\r\n     * @returns Observable of _draggedCarousel$ Subject\r\n     */\r\n    getDraggedState() {\r\n        return this._draggedCarousel$.asObservable();\r\n    }\r\n    /**\r\n     * Setups custom options expanding default options\r\n     * @param options custom options\r\n     */\r\n    setOptions(options) {\r\n        const configOptions = new OwlCarouselOConfig();\r\n        const checkedOptions = this._validateOptions(options, configOptions);\r\n        this._options = Object.assign(Object.assign({}, configOptions), checkedOptions);\r\n    }\r\n    /**\r\n     * Checks whether user's option are set properly. Cheking is based on typings;\r\n     * @param options options set by user\r\n     * @param configOptions default options\r\n     * @returns checked and modified (if it's needed) user's options\r\n     *\r\n     * Notes:\r\n     * \t- if user set option with wrong type, it'll be written in console\r\n     */\r\n    _validateOptions(options, configOptions) {\r\n        const checkedOptions = Object.assign({}, options);\r\n        const mockedTypes = new OwlOptionsMockedTypes();\r\n        const setRightOption = (type, key) => {\r\n            this.logger.log(`options.${key} must be type of ${type}; ${key}=${options[key]} skipped to defaults: ${key}=${configOptions[key]}`);\r\n            return configOptions[key];\r\n        };\r\n        for (const key in checkedOptions) {\r\n            if (checkedOptions.hasOwnProperty(key)) {\r\n                // condition could be shortened but it gets harder for understanding\r\n                if (mockedTypes[key] === 'number') {\r\n                    if (this._isNumeric(checkedOptions[key])) {\r\n                        checkedOptions[key] = +checkedOptions[key];\r\n                        checkedOptions[key] = key === 'items' ? this._validateItems(checkedOptions[key], checkedOptions.skip_validateItems) : checkedOptions[key];\r\n                    }\r\n                    else {\r\n                        checkedOptions[key] = setRightOption(mockedTypes[key], key);\r\n                    }\r\n                }\r\n                else if (mockedTypes[key] === 'boolean' && typeof checkedOptions[key] !== 'boolean') {\r\n                    checkedOptions[key] = setRightOption(mockedTypes[key], key);\r\n                }\r\n                else if (mockedTypes[key] === 'number|boolean' && !this._isNumberOrBoolean(checkedOptions[key])) {\r\n                    checkedOptions[key] = setRightOption(mockedTypes[key], key);\r\n                }\r\n                else if (mockedTypes[key] === 'number|string' && !this._isNumberOrString(checkedOptions[key])) {\r\n                    checkedOptions[key] = setRightOption(mockedTypes[key], key);\r\n                }\r\n                else if (mockedTypes[key] === 'string|boolean' && !this._isStringOrBoolean(checkedOptions[key])) {\r\n                    checkedOptions[key] = setRightOption(mockedTypes[key], key);\r\n                }\r\n                else if (mockedTypes[key] === 'string[]') {\r\n                    if (Array.isArray(checkedOptions[key])) {\r\n                        let isString = false;\r\n                        checkedOptions[key].forEach(element => {\r\n                            isString = typeof element === 'string' ? true : false;\r\n                        });\r\n                        if (!isString) {\r\n                            checkedOptions[key] = setRightOption(mockedTypes[key], key);\r\n                        }\r\n                        ;\r\n                    }\r\n                    else {\r\n                        checkedOptions[key] = setRightOption(mockedTypes[key], key);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return checkedOptions;\r\n    }\r\n    /**\r\n     * Checks the option `items` set by user and if it bigger than number of slides, the function returns number of slides\r\n     * @param items option items set by user\r\n     * @param skip_validateItems option `skip_validateItems` set by user\r\n     * @returns right number of items\r\n     */\r\n    _validateItems(items, skip_validateItems) {\r\n        let result = items;\r\n        if (items > this._items.length) {\r\n            if (skip_validateItems) {\r\n                this.logger.log('The option \\'items\\' in your options is bigger than the number of slides. The navigation got disabled');\r\n            }\r\n            else {\r\n                result = this._items.length;\r\n                this.logger.log('The option \\'items\\' in your options is bigger than the number of slides. This option is updated to the current number of slides and the navigation got disabled');\r\n            }\r\n        }\r\n        else {\r\n            if (items === this._items.length && (this.settings.dots || this.settings.nav)) {\r\n                this.logger.log('Option \\'items\\' in your options is equal to the number of slides. So the navigation got disabled');\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Set current width of carousel\r\n     * @param width width of carousel Window\r\n     */\r\n    setCarouselWidth(width) {\r\n        this._width = width;\r\n    }\r\n    /**\r\n       * Setups the current settings.\r\n       * @todo Remove responsive classes. Why should adaptive designs be brought into IE8?\r\n       * @todo Support for media queries by using `matchMedia` would be nice.\r\n       * @param carouselWidth width of carousel\r\n       * @param slides array of slides\r\n       * @param options options set by user\r\n       */\r\n    setup(carouselWidth, slides, options) {\r\n        this.setCarouselWidth(carouselWidth);\r\n        this.setItems(slides);\r\n        this._defineSlidesData();\r\n        this.setOptions(options);\r\n        this.settings = Object.assign({}, this._options);\r\n        this.setOptionsForViewport();\r\n        this._trigger('change', { property: { name: 'settings', value: this.settings } });\r\n        this.invalidate('settings'); // must be call of this function;\r\n        this._trigger('changed', { property: { name: 'settings', value: this.settings } });\r\n    }\r\n    /**\r\n     * Set options for current viewport\r\n     */\r\n    setOptionsForViewport() {\r\n        const viewport = this._width, overwrites = this._options.responsive;\r\n        let match = -1;\r\n        if (!Object.keys(overwrites).length) {\r\n            return;\r\n        }\r\n        if (!viewport) {\r\n            this.settings.items = 1;\r\n            return;\r\n        }\r\n        for (const key in overwrites) {\r\n            if (overwrites.hasOwnProperty(key)) {\r\n                if (+key <= viewport && +key > match) {\r\n                    match = Number(key);\r\n                }\r\n            }\r\n        }\r\n        this.settings = Object.assign(Object.assign(Object.assign({}, this._options), overwrites[match]), { items: (overwrites[match] && overwrites[match].items) ? this._validateItems(overwrites[match].items, this._options.skip_validateItems) : this._options.items });\r\n        // if (typeof this.settings.stagePadding === 'function') {\r\n        // \tthis.settings.stagePadding = this.settings.stagePadding();\r\n        // }\r\n        delete this.settings.responsive;\r\n        this.owlDOMData.isResponsive = true;\r\n        this.owlDOMData.isMouseDragable = this.settings.mouseDrag;\r\n        this.owlDOMData.isTouchDragable = this.settings.touchDrag;\r\n        const mergers = [];\r\n        this._items.forEach(item => {\r\n            const mergeN = this.settings.merge ? item.dataMerge : 1;\r\n            mergers.push(mergeN);\r\n        });\r\n        this._mergers = mergers;\r\n        this._breakpoint = match;\r\n        this.invalidate('settings');\r\n    }\r\n    /**\r\n     * Initializes the carousel.\r\n     * @param slides array of CarouselSlideDirective\r\n     */\r\n    initialize(slides) {\r\n        this.enter('initializing');\r\n        // this.trigger('initialize');\r\n        this.owlDOMData.rtl = this.settings.rtl;\r\n        if (this._mergers.length) {\r\n            this._mergers = [];\r\n        }\r\n        slides.forEach(item => {\r\n            const mergeN = this.settings.merge ? item.dataMerge : 1;\r\n            this._mergers.push(mergeN);\r\n        });\r\n        this._clones = [];\r\n        this.reset(this._isNumeric(this.settings.startPosition) ? +this.settings.startPosition : 0);\r\n        this.invalidate('items');\r\n        this.refresh();\r\n        this.owlDOMData.isLoaded = true;\r\n        this.owlDOMData.isMouseDragable = this.settings.mouseDrag;\r\n        this.owlDOMData.isTouchDragable = this.settings.touchDrag;\r\n        this.sendChanges();\r\n        this.leave('initializing');\r\n        this._trigger('initialized');\r\n    }\r\n    ;\r\n    /**\r\n     * Sends all data needed for View\r\n     */\r\n    sendChanges() {\r\n        this._viewSettingsShipper$.next({\r\n            owlDOMData: this.owlDOMData,\r\n            stageData: this.stageData,\r\n            slidesData: this.slidesData,\r\n            navData: this.navData,\r\n            dotsData: this.dotsData\r\n        });\r\n    }\r\n    /**\r\n       * Updates option logic if necessery\r\n       */\r\n    _optionsLogic() {\r\n        if (this.settings.autoWidth) {\r\n            this.settings.stagePadding = 0;\r\n            this.settings.merge = false;\r\n        }\r\n    }\r\n    /**\r\n     * Updates the view\r\n     */\r\n    update() {\r\n        let i = 0;\r\n        const n = this._pipe.length, filter = item => this._invalidated[item], cache = {};\r\n        while (i < n) {\r\n            const filteredPipe = this._pipe[i].filter.filter(filter);\r\n            if (this._invalidated.all || filteredPipe.length > 0) {\r\n                this._pipe[i].run(cache);\r\n            }\r\n            i++;\r\n        }\r\n        this.slidesData.forEach(slide => slide.classes = this.setCurSlideClasses(slide));\r\n        this.sendChanges();\r\n        this._invalidated = {};\r\n        if (!this.is('valid')) {\r\n            this.enter('valid');\r\n        }\r\n    }\r\n    /**\r\n       * Gets the width of the view.\r\n       * @param [dimension=Width.Default] The dimension to return\r\n       * @returns The width of the view in pixel.\r\n       */\r\n    width(dimension) {\r\n        dimension = dimension || Width.Default;\r\n        switch (dimension) {\r\n            case Width.Inner:\r\n            case Width.Outer:\r\n                return this._width;\r\n            default:\r\n                return this._width - this.settings.stagePadding * 2 + this.settings.margin;\r\n        }\r\n    }\r\n    /**\r\n       * Refreshes the carousel primarily for adaptive purposes.\r\n       */\r\n    refresh() {\r\n        this.enter('refreshing');\r\n        this._trigger('refresh');\r\n        this._defineSlidesData();\r\n        this.setOptionsForViewport();\r\n        this._optionsLogic();\r\n        // this.$element.addClass(this.options.refreshClass);\r\n        this.update();\r\n        // this.$element.removeClass(this.options.refreshClass);\r\n        this.leave('refreshing');\r\n        this._trigger('refreshed');\r\n    }\r\n    /**\r\n       * Checks window `resize` event.\r\n       * @param curWidth width of .owl-carousel\r\n       */\r\n    onResize(curWidth) {\r\n        if (!this._items.length) {\r\n            return false;\r\n        }\r\n        this.setCarouselWidth(curWidth);\r\n        this.enter('resizing');\r\n        // if (this.trigger('resize').isDefaultPrevented()) {\r\n        // \tthis.leave('resizing');\r\n        // \treturn false;\r\n        // }\r\n        this._trigger('resize');\r\n        this.invalidate('width');\r\n        this.refresh();\r\n        this.leave('resizing');\r\n        this._trigger('resized');\r\n    }\r\n    /**\r\n       * Prepares data for dragging carousel. It starts after firing `touchstart` and `mousedown` events.\r\n       * @todo Horizontal swipe threshold as option\r\n       * @todo #261\r\n       * @param event - The event arguments.\r\n       * @returns stage - object with 'x' and 'y' coordinates of .owl-stage\r\n       */\r\n    prepareDragging(event) {\r\n        let stage = null, transformArr;\r\n        // could be 5 commented lines below; However there's stage transform in stageData and in updates after each move of stage\r\n        // stage = getComputedStyle(this.el.nativeElement).transform.replace(/.*\\(|\\)| /g, '').split(',');\r\n        // stage = {\r\n        //   x: stage[stage.length === 16 ? 12 : 4],\r\n        //   y: stage[stage.length === 16 ? 13 : 5]\r\n        // };\r\n        transformArr = this.stageData.transform.replace(/.*\\(|\\)| |[^,-\\d]\\w|\\)/g, '').split(',');\r\n        stage = {\r\n            x: +transformArr[0],\r\n            y: +transformArr[1]\r\n        };\r\n        if (this.is('animating')) {\r\n            this.invalidate('position');\r\n        }\r\n        if (event.type === 'mousedown') {\r\n            this.owlDOMData.isGrab = true;\r\n        }\r\n        this.speed(0);\r\n        return stage;\r\n    }\r\n    /**\r\n     * Enters into a 'dragging' state\r\n     */\r\n    enterDragging() {\r\n        this.enter('dragging');\r\n        this._trigger('drag');\r\n    }\r\n    /**\r\n       * Defines new coords for .owl-stage while dragging it\r\n       * @todo #261\r\n       * @param event the event arguments.\r\n       * @param dragData initial data got after starting dragging\r\n       * @returns coords or false\r\n       */\r\n    defineNewCoordsDrag(event, dragData) {\r\n        let minimum = null, maximum = null, pull = null;\r\n        const delta = this.difference(dragData.pointer, this.pointer(event)), stage = this.difference(dragData.stage.start, delta);\r\n        if (!this.is('dragging')) {\r\n            return false;\r\n        }\r\n        if (this.settings.loop) {\r\n            minimum = this.coordinates(this.minimum());\r\n            maximum = +this.coordinates(this.maximum() + 1) - minimum;\r\n            stage.x = (((stage.x - minimum) % maximum + maximum) % maximum) + minimum;\r\n        }\r\n        else {\r\n            minimum = this.settings.rtl ? this.coordinates(this.maximum()) : this.coordinates(this.minimum());\r\n            maximum = this.settings.rtl ? this.coordinates(this.minimum()) : this.coordinates(this.maximum());\r\n            pull = this.settings.pullDrag ? -1 * delta.x / 5 : 0;\r\n            stage.x = Math.max(Math.min(stage.x, minimum + pull), maximum + pull);\r\n        }\r\n        return stage;\r\n    }\r\n    /**\r\n       * Finishes dragging of carousel when `touchend` and `mouseup` events fire.\r\n       * @todo #261\r\n       * @todo Threshold for click event\r\n       * @param event the event arguments.\r\n       * @param dragObj the object with dragging settings and states\r\n       * @param clickAttacher function which attaches click handler to slide or its children elements in order to prevent event bubling\r\n       */\r\n    finishDragging(event, dragObj, clickAttacher) {\r\n        const directions = ['right', 'left'], delta = this.difference(dragObj.pointer, this.pointer(event)), stage = dragObj.stage.current, direction = directions[+(this.settings.rtl ? delta.x < +this.settings.rtl : delta.x > +this.settings.rtl)];\r\n        let currentSlideI, current, newCurrent;\r\n        if (delta.x !== 0 && this.is('dragging') || !this.is('valid')) {\r\n            this.speed(+this.settings.dragEndSpeed || this.settings.smartSpeed);\r\n            currentSlideI = this.closest(stage.x, delta.x !== 0 ? direction : dragObj.direction);\r\n            current = this.current();\r\n            newCurrent = this.current(currentSlideI === -1 ? undefined : currentSlideI);\r\n            if (current !== newCurrent) {\r\n                this.invalidate('position');\r\n                this.update();\r\n            }\r\n            dragObj.direction = direction;\r\n            if (Math.abs(delta.x) > 3 || new Date().getTime() - dragObj.time > 300) {\r\n                clickAttacher();\r\n            }\r\n        }\r\n        if (!this.is('dragging')) {\r\n            return;\r\n        }\r\n        this.leave('dragging');\r\n        this._trigger('dragged');\r\n    }\r\n    /**\r\n       * Gets absolute position of the closest item for a coordinate.\r\n       * @todo Setting `freeDrag` makes `closest` not reusable. See #165.\r\n       * @param coordinate The coordinate in pixel.\r\n       * @param direction The direction to check for the closest item. Ether `left` or `right`.\r\n       * @returns The absolute position of the closest item.\r\n       */\r\n    closest(coordinate, direction) {\r\n        const pull = 30, width = this.width();\r\n        let coordinates = this.coordinates(), position = -1;\r\n        if (this.settings.center) {\r\n            coordinates = coordinates.map(item => {\r\n                if (item === 0) {\r\n                    item += 0.000001;\r\n                }\r\n                return item;\r\n            });\r\n        }\r\n        // option 'freeDrag' doesn't have realization and using it here creates problem:\r\n        // variable 'position' stays unchanged (it equals -1 at the begging) and thus method returns -1\r\n        // Returning value is consumed by method current(), which taking -1 as argument calculates the index of new current slide\r\n        // In case of having 5 slides ans 'loop=false; calling 'current(-1)' sets props '_current' as 4. Just last slide remains visible instead of 3 last slides.\r\n        // if (!this.settings.freeDrag) {\r\n        // check closest item\r\n        for (let i = 0; i < coordinates.length; i++) {\r\n            if (direction === 'left' && coordinate > coordinates[i] - pull && coordinate < coordinates[i] + pull) {\r\n                position = i;\r\n                // on a right pull, check on previous index\r\n                // to do so, subtract width from value and set position = index + 1\r\n            }\r\n            else if (direction === 'right' && coordinate > coordinates[i] - width - pull && coordinate < coordinates[i] - width + pull) {\r\n                position = i + 1;\r\n            }\r\n            else if (this._op(coordinate, '<', coordinates[i])\r\n                && this._op(coordinate, '>', coordinates[i + 1] || coordinates[i] - width)) {\r\n                position = direction === 'left' ? i + 1 : i;\r\n            }\r\n            else if (direction === null && coordinate > coordinates[i] - pull && coordinate < coordinates[i] + pull) {\r\n                position = i;\r\n            }\r\n            if (position !== -1) {\r\n                break;\r\n            }\r\n            ;\r\n        }\r\n        // }\r\n        if (!this.settings.loop) {\r\n            // non loop boundries\r\n            if (this._op(coordinate, '>', coordinates[this.minimum()])) {\r\n                position = coordinate = this.minimum();\r\n            }\r\n            else if (this._op(coordinate, '<', coordinates[this.maximum()])) {\r\n                position = coordinate = this.maximum();\r\n            }\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n       * Animates the stage.\r\n       * @todo #270\r\n       * @param coordinate The coordinate in pixels.\r\n       */\r\n    animate(coordinate) {\r\n        const animate = this.speed() > 0;\r\n        if (this.is('animating')) {\r\n            this.onTransitionEnd();\r\n        }\r\n        if (animate) {\r\n            this.enter('animating');\r\n            this._trigger('translate');\r\n        }\r\n        this.stageData.transform = 'translate3d(' + coordinate + 'px,0px,0px)';\r\n        this.stageData.transition = (this.speed() / 1000) + 's' + (this.settings.slideTransition ? ' ' + this.settings.slideTransition : '');\r\n        // also there was transition by means of JQuery.animate or css-changing property left\r\n    }\r\n    /**\r\n       * Checks whether the carousel is in a specific state or not.\r\n       * @param state The state to check.\r\n       * @returns The flag which indicates if the carousel is busy.\r\n       */\r\n    is(state) {\r\n        return this._states.current[state] && this._states.current[state] > 0;\r\n    }\r\n    ;\r\n    /**\r\n       * Sets the absolute position of the current item.\r\n       * @param position The new absolute position or nothing to leave it unchanged.\r\n       * @returns The absolute position of the current item.\r\n       */\r\n    current(position) {\r\n        if (position === undefined) {\r\n            return this._current;\r\n        }\r\n        if (this._items.length === 0) {\r\n            return undefined;\r\n        }\r\n        position = this.normalize(position);\r\n        if (this._current !== position) {\r\n            const event = this._trigger('change', { property: { name: 'position', value: position } });\r\n            // if (event.data !== undefined) {\r\n            // \tposition = this.normalize(event.data);\r\n            // }\r\n            this._current = position;\r\n            this.invalidate('position');\r\n            this._trigger('changed', { property: { name: 'position', value: this._current } });\r\n        }\r\n        return this._current;\r\n    }\r\n    /**\r\n       * Invalidates the given part of the update routine.\r\n       * @param part The part to invalidate.\r\n       * @returns The invalidated parts.\r\n       */\r\n    invalidate(part) {\r\n        if (typeof part === 'string') {\r\n            this._invalidated[part] = true;\r\n            if (this.is('valid')) {\r\n                this.leave('valid');\r\n            }\r\n        }\r\n        return Object.keys(this._invalidated);\r\n    }\r\n    ;\r\n    /**\r\n     * Resets the absolute position of the current item.\r\n     * @param position the absolute position of the new item.\r\n     */\r\n    reset(position) {\r\n        position = this.normalize(position);\r\n        if (position === undefined) {\r\n            return;\r\n        }\r\n        this._speed = 0;\r\n        this._current = position;\r\n        this._suppress(['translate', 'translated']);\r\n        this.animate(this.coordinates(position));\r\n        this._release(['translate', 'translated']);\r\n    }\r\n    /**\r\n       * Normalizes an absolute or a relative position of an item.\r\n       * @param position The absolute or relative position to normalize.\r\n       * @param relative Whether the given position is relative or not.\r\n       * @returns The normalized position.\r\n       */\r\n    normalize(position, relative) {\r\n        const n = this._items.length, m = relative ? 0 : this._clones.length;\r\n        if (!this._isNumeric(position) || n < 1) {\r\n            position = undefined;\r\n        }\r\n        else if (position < 0 || position >= n + m) {\r\n            position = ((position - m / 2) % n + n) % n + m / 2;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n       * Converts an absolute position of an item into a relative one.\r\n       * @param position The absolute position to convert.\r\n       * @returns The converted position.\r\n       */\r\n    relative(position) {\r\n        position -= this._clones.length / 2;\r\n        return this.normalize(position, true);\r\n    }\r\n    /**\r\n       * Gets the maximum position for the current item.\r\n       * @param relative Whether to return an absolute position or a relative position.\r\n       * @returns number of maximum position\r\n       */\r\n    maximum(relative = false) {\r\n        const settings = this.settings;\r\n        let maximum = this._coordinates.length, iterator, reciprocalItemsWidth, elementWidth;\r\n        if (settings.loop) {\r\n            maximum = this._clones.length / 2 + this._items.length - 1;\r\n        }\r\n        else if (settings.autoWidth || settings.merge) {\r\n            iterator = this._items.length;\r\n            reciprocalItemsWidth = this.slidesData[--iterator].width;\r\n            elementWidth = this._width;\r\n            while (iterator--) {\r\n                // it could be use this._items instead of this.slidesData;\r\n                reciprocalItemsWidth += +this.slidesData[iterator].width + this.settings.margin;\r\n                if (reciprocalItemsWidth > elementWidth) {\r\n                    break;\r\n                }\r\n            }\r\n            maximum = iterator + 1;\r\n        }\r\n        else if (settings.center) {\r\n            maximum = this._items.length - 1;\r\n        }\r\n        else {\r\n            maximum = this._items.length - settings.items;\r\n        }\r\n        if (relative) {\r\n            maximum -= this._clones.length / 2;\r\n        }\r\n        return Math.max(maximum, 0);\r\n    }\r\n    /**\r\n       * Gets the minimum position for the current item.\r\n       * @param relative Whether to return an absolute position or a relative position.\r\n       * @returns number of minimum position\r\n       */\r\n    minimum(relative = false) {\r\n        return relative ? 0 : this._clones.length / 2;\r\n    }\r\n    /**\r\n       * Gets an item at the specified relative position.\r\n       * @param position The relative position of the item.\r\n       * @returns The item at the given position or all items if no position was given.\r\n       */\r\n    items(position) {\r\n        if (position === undefined) {\r\n            return this._items.slice();\r\n        }\r\n        position = this.normalize(position, true);\r\n        return [this._items[position]];\r\n    }\r\n    /**\r\n       * Gets an item at the specified relative position.\r\n       * @param position The relative position of the item.\r\n       * @returns The item at the given position or all items if no position was given.\r\n       */\r\n    mergers(position) {\r\n        if (position === undefined) {\r\n            return this._mergers.slice();\r\n        }\r\n        position = this.normalize(position, true);\r\n        return this._mergers[position];\r\n    }\r\n    /**\r\n       * Gets the absolute positions of clones for an item.\r\n       * @param position The relative position of the item.\r\n       * @returns The absolute positions of clones for the item or all if no position was given.\r\n       */\r\n    clones(position) {\r\n        const odd = this._clones.length / 2, even = odd + this._items.length, map = index => index % 2 === 0 ? even + index / 2 : odd - (index + 1) / 2;\r\n        if (position === undefined) {\r\n            return this._clones.map((v, i) => map(i));\r\n        }\r\n        return this._clones.map((v, i) => v === position ? map(i) : null).filter(item => item);\r\n    }\r\n    /**\r\n       * Sets the current animation speed.\r\n       * @param speed The animation speed in milliseconds or nothing to leave it unchanged.\r\n       * @returns The current animation speed in milliseconds.\r\n       */\r\n    speed(speed) {\r\n        if (speed !== undefined) {\r\n            this._speed = speed;\r\n        }\r\n        return this._speed;\r\n    }\r\n    /**\r\n       * Gets the coordinate of an item.\r\n       * @todo The name of this method is missleanding.\r\n       * @param position The absolute position of the item within `minimum()` and `maximum()`.\r\n       * @returns The coordinate of the item in pixel or all coordinates.\r\n       */\r\n    coordinates(position) {\r\n        let multiplier = 1, newPosition = position - 1, coordinate, result;\r\n        if (position === undefined) {\r\n            result = this._coordinates.map((item, index) => {\r\n                return this.coordinates(index);\r\n            });\r\n            return result;\r\n        }\r\n        if (this.settings.center) {\r\n            if (this.settings.rtl) {\r\n                multiplier = -1;\r\n                newPosition = position + 1;\r\n            }\r\n            coordinate = this._coordinates[position];\r\n            coordinate += (this.width() - coordinate + (this._coordinates[newPosition] || 0)) / 2 * multiplier;\r\n        }\r\n        else {\r\n            coordinate = this._coordinates[newPosition] || 0;\r\n        }\r\n        coordinate = Math.ceil(coordinate);\r\n        return coordinate;\r\n    }\r\n    /**\r\n       * Calculates the speed for a translation.\r\n       * @param from The absolute position of the start item.\r\n       * @param to The absolute position of the target item.\r\n       * @param factor [factor=undefined] - The time factor in milliseconds.\r\n       * @returns The time in milliseconds for the translation.\r\n       */\r\n    _duration(from, to, factor) {\r\n        if (factor === 0) {\r\n            return 0;\r\n        }\r\n        return Math.min(Math.max(Math.abs(to - from), 1), 6) * Math.abs((+factor || this.settings.smartSpeed));\r\n    }\r\n    /**\r\n       * Slides to the specified item.\r\n       * @param position The position of the item.\r\n       * @param speed The time in milliseconds for the transition.\r\n       */\r\n    to(position, speed) {\r\n        let current = this.current(), revert = null, distance = position - this.relative(current), maximum = this.maximum(), delayForLoop = 0;\r\n        const direction = +(distance > 0) - +(distance < 0), items = this._items.length, minimum = this.minimum();\r\n        if (this.settings.loop) {\r\n            if (!this.settings.rewind && Math.abs(distance) > items / 2) {\r\n                distance += direction * -1 * items;\r\n            }\r\n            position = current + distance;\r\n            revert = ((position - minimum) % items + items) % items + minimum;\r\n            if (revert !== position && revert - distance <= maximum && revert - distance > 0) {\r\n                current = revert - distance;\r\n                position = revert;\r\n                delayForLoop = 30;\r\n                this.reset(current);\r\n                this.sendChanges();\r\n            }\r\n        }\r\n        else if (this.settings.rewind) {\r\n            maximum += 1;\r\n            position = (position % maximum + maximum) % maximum;\r\n        }\r\n        else {\r\n            position = Math.max(minimum, Math.min(maximum, position));\r\n        }\r\n        setTimeout(() => {\r\n            this.speed(this._duration(current, position, speed));\r\n            this.current(position);\r\n            this.update();\r\n        }, delayForLoop);\r\n    }\r\n    /**\r\n       * Slides to the next item.\r\n       * @param speed The time in milliseconds for the transition.\r\n       */\r\n    next(speed) {\r\n        speed = speed || false;\r\n        this.to(this.relative(this.current()) + 1, speed);\r\n    }\r\n    /**\r\n       * Slides to the previous item.\r\n       * @param speed The time in milliseconds for the transition.\r\n       */\r\n    prev(speed) {\r\n        speed = speed || false;\r\n        this.to(this.relative(this.current()) - 1, speed);\r\n    }\r\n    /**\r\n       * Handles the end of an animation.\r\n       * @param event - The event arguments.\r\n       */\r\n    onTransitionEnd(event) {\r\n        // if css2 animation then event object is undefined\r\n        if (event !== undefined) {\r\n            // event.stopPropagation();\r\n            // // Catch only owl-stage transitionEnd event\r\n            // if ((event.target || event.srcElement || event.originalTarget) !== this.$stage.get(0)\t) {\r\n            // \treturn false;\r\n            // }\r\n            return false;\r\n        }\r\n        this.leave('animating');\r\n        this._trigger('translated');\r\n    }\r\n    /**\r\n       * Gets viewport width.\r\n       * @returns - The width in pixel.\r\n       */\r\n    _viewport() {\r\n        let width;\r\n        if (this._width) {\r\n            width = this._width;\r\n        }\r\n        else {\r\n            this.logger.log('Can not detect viewport width.');\r\n        }\r\n        return width;\r\n    }\r\n    /**\r\n       * Sets _items\r\n       * @param content The list of slides put into CarouselSlideDirectives.\r\n       */\r\n    setItems(content) {\r\n        this._items = content;\r\n    }\r\n    /**\r\n     * Sets slidesData using this._items\r\n     */\r\n    _defineSlidesData() {\r\n        // Maybe creating and using loadMap would be better in LazyLoadService.\r\n        // Hovewer in that case when 'resize' event fires, prop 'load' of all slides will get 'false' and such state of prop will be seen by View during its updating. Accordingly the code will remove slides's content from DOM even if it was loaded before.\r\n        // Thus it would be needed to add that content into DOM again.\r\n        // In order to avoid additional removing/adding loaded slides's content we use loadMap here and set restore state of prop 'load' before the View will get it.\r\n        let loadMap;\r\n        if (this.slidesData && this.slidesData.length) {\r\n            loadMap = new Map();\r\n            this.slidesData.forEach(item => {\r\n                if (item.load) {\r\n                    loadMap.set(item.id, item.load);\r\n                }\r\n            });\r\n        }\r\n        this.slidesData = this._items.map(slide => {\r\n            return {\r\n                id: `${slide.id}`,\r\n                isActive: false,\r\n                tplRef: slide.tplRef,\r\n                dataMerge: slide.dataMerge,\r\n                width: 0,\r\n                isCloned: false,\r\n                load: loadMap ? loadMap.get(slide.id) : false,\r\n                hashFragment: slide.dataHash\r\n            };\r\n        });\r\n    }\r\n    /**\r\n     * Sets current classes for slide\r\n     * @param slide Slide of carousel\r\n     * @returns object with names of css-classes which are keys and true/false values\r\n     */\r\n    setCurSlideClasses(slide) {\r\n        // CSS classes: added/removed per current state of component properties\r\n        const currentClasses = {\r\n            'active': slide.isActive,\r\n            'center': slide.isCentered,\r\n            'cloned': slide.isCloned,\r\n            'animated': slide.isAnimated,\r\n            'owl-animated-in': slide.isDefAnimatedIn,\r\n            'owl-animated-out': slide.isDefAnimatedOut\r\n        };\r\n        if (this.settings.animateIn) {\r\n            currentClasses[this.settings.animateIn] = slide.isCustomAnimatedIn;\r\n        }\r\n        if (this.settings.animateOut) {\r\n            currentClasses[this.settings.animateOut] = slide.isCustomAnimatedOut;\r\n        }\r\n        return currentClasses;\r\n    }\r\n    /**\r\n       * Operators to calculate right-to-left and left-to-right.\r\n       * @param a - The left side operand.\r\n       * @param o - The operator.\r\n       * @param b - The right side operand.\r\n       * @returns true/false meaning right-to-left or left-to-right\r\n       */\r\n    _op(a, o, b) {\r\n        const rtl = this.settings.rtl;\r\n        switch (o) {\r\n            case '<':\r\n                return rtl ? a > b : a < b;\r\n            case '>':\r\n                return rtl ? a < b : a > b;\r\n            case '>=':\r\n                return rtl ? a <= b : a >= b;\r\n            case '<=':\r\n                return rtl ? a >= b : a <= b;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    /**\r\n       * Triggers a public event.\r\n       * @todo Remove `status`, `relatedTarget` should be used instead.\r\n       * @param name The event name.\r\n       * @param data The event data.\r\n       * @param namespace The event namespace.\r\n       * @param state The state which is associated with the event.\r\n       * @param enter Indicates if the call enters the specified state or not.\r\n       */\r\n    _trigger(name, data, namespace, state, enter) {\r\n        switch (name) {\r\n            case 'initialized':\r\n                this._initializedCarousel$.next(name);\r\n                break;\r\n            case 'change':\r\n                this._changeSettingsCarousel$.next(data);\r\n                break;\r\n            case 'changed':\r\n                this._changedSettingsCarousel$.next(data);\r\n                break;\r\n            case 'drag':\r\n                this._dragCarousel$.next(name);\r\n                break;\r\n            case 'dragged':\r\n                this._draggedCarousel$.next(name);\r\n                break;\r\n            case 'resize':\r\n                this._resizeCarousel$.next(name);\r\n                break;\r\n            case 'resized':\r\n                this._resizedCarousel$.next(name);\r\n                break;\r\n            case 'refresh':\r\n                this._refreshCarousel$.next(name);\r\n                break;\r\n            case 'refreshed':\r\n                this._refreshedCarousel$.next(name);\r\n                break;\r\n            case 'translate':\r\n                this._translateCarousel$.next(name);\r\n                break;\r\n            case 'translated':\r\n                this._translatedCarousel$.next(name);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    /**\r\n     * Enters a state.\r\n     * @param name - The state name.\r\n     */\r\n    enter(name) {\r\n        [name].concat(this._states.tags[name] || []).forEach((stateName) => {\r\n            if (this._states.current[stateName] === undefined) {\r\n                this._states.current[stateName] = 0;\r\n            }\r\n            this._states.current[stateName]++;\r\n        });\r\n    }\r\n    ;\r\n    /**\r\n       * Leaves a state.\r\n       * @param name - The state name.\r\n       */\r\n    leave(name) {\r\n        [name].concat(this._states.tags[name] || []).forEach((stateName) => {\r\n            if (this._states.current[stateName] === 0 || !!this._states.current[stateName]) {\r\n                this._states.current[stateName]--;\r\n            }\r\n        });\r\n    }\r\n    ;\r\n    /**\r\n       * Registers an event or state.\r\n       * @param object - The event or state to register.\r\n       */\r\n    register(object) {\r\n        if (object.type === Type.State) {\r\n            if (!this._states.tags[object.name]) {\r\n                this._states.tags[object.name] = object.tags;\r\n            }\r\n            else {\r\n                this._states.tags[object.name] = this._states.tags[object.name].concat(object.tags);\r\n            }\r\n            this._states.tags[object.name] = this._states.tags[object.name].filter((tag, i) => {\r\n                return this._states.tags[object.name].indexOf(tag) === i;\r\n            });\r\n        }\r\n    }\r\n    /**\r\n       * Suppresses events.\r\n       * @param events The events to suppress.\r\n       */\r\n    _suppress(events) {\r\n        events.forEach(event => {\r\n            this._supress[event] = true;\r\n        });\r\n    }\r\n    /**\r\n       * Releases suppressed events.\r\n       * @param events The events to release.\r\n       */\r\n    _release(events) {\r\n        events.forEach(event => {\r\n            delete this._supress[event];\r\n        });\r\n    }\r\n    /**\r\n       * Gets unified pointer coordinates from event.\r\n       * @todo #261\r\n       * @param event The `mousedown` or `touchstart` event.\r\n       * @returns Object Coords which contains `x` and `y` coordinates of current pointer position.\r\n       */\r\n    pointer(event) {\r\n        const result = { x: null, y: null };\r\n        event = event.originalEvent || event || window.event;\r\n        event = event.touches && event.touches.length ?\r\n            event.touches[0] : event.changedTouches && event.changedTouches.length ?\r\n            event.changedTouches[0] : event;\r\n        if (event.pageX) {\r\n            result.x = event.pageX;\r\n            result.y = event.pageY;\r\n        }\r\n        else {\r\n            result.x = event.clientX;\r\n            result.y = event.clientY;\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n       * Determines if the input is a Number or something that can be coerced to a Number\r\n       * @param number The input to be tested\r\n       * @returns An indication if the input is a Number or can be coerced to a Number\r\n       */\r\n    _isNumeric(number) {\r\n        return !isNaN(parseFloat(number));\r\n    }\r\n    /**\r\n     * Determines whether value is number or boolean type\r\n     * @param value The input to be tested\r\n     * @returns An indication if the input is a Number or can be coerced to a Number, or Boolean\r\n     */\r\n    _isNumberOrBoolean(value) {\r\n        return this._isNumeric(value) || typeof value === 'boolean';\r\n    }\r\n    /**\r\n     * Determines whether value is number or string type\r\n     * @param value The input to be tested\r\n     * @returns An indication if the input is a Number or can be coerced to a Number, or String\r\n     */\r\n    _isNumberOrString(value) {\r\n        return this._isNumeric(value) || typeof value === 'string';\r\n    }\r\n    /**\r\n     * Determines whether value is number or string type\r\n     * @param value The input to be tested\r\n     * @returns An indication if the input is a Number or can be coerced to a Number, or String\r\n     */\r\n    _isStringOrBoolean(value) {\r\n        return typeof value === 'string' || typeof value === 'boolean';\r\n    }\r\n    /**\r\n       * Gets the difference of two vectors.\r\n       * @todo #261\r\n       * @param first The first vector.\r\n       * @param second- The second vector.\r\n       * @returns The difference.\r\n       */\r\n    difference(first, second) {\r\n        return {\r\n            x: first.x - second.x,\r\n            y: first.y - second.y\r\n        };\r\n    }\r\n}\nCarouselService.ɵfac = function CarouselService_Factory(t) { return new (t || CarouselService)(ɵngcc0.ɵɵinject(OwlLogger)); };\nCarouselService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: CarouselService, factory: CarouselService.ɵfac });\r\nCarouselService.ctorParameters = () => [\r\n    { type: OwlLogger }\r\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CarouselService, [{\n        type: Injectable\n    }], function () { return [{ type: OwlLogger }]; }, null); })();\r\n\r\nclass NavigationService {\r\n    constructor(carouselService) {\r\n        this.carouselService = carouselService;\r\n        /**\r\n         * Indicates whether the plugin is initialized or not.\r\n         */\r\n        this._initialized = false;\r\n        /**\r\n         * The current paging indexes.\r\n         */\r\n        this._pages = [];\r\n        /**\r\n         * Data for navigation elements of the user interface.\r\n         */\r\n        this._navData = {\r\n            disabled: false,\r\n            prev: {\r\n                disabled: false,\r\n                htmlText: ''\r\n            },\r\n            next: {\r\n                disabled: false,\r\n                htmlText: ''\r\n            },\r\n        };\r\n        /**\r\n         * Data for dot elements of the user interface.\r\n         */\r\n        this._dotsData = {\r\n            disabled: false,\r\n            dots: []\r\n        };\r\n        this.spyDataStreams();\r\n    }\r\n    ngOnDestroy() {\r\n        this.navSubscription.unsubscribe();\r\n    }\r\n    /**\r\n     * Defines Observables which service must observe\r\n     */\r\n    spyDataStreams() {\r\n        const initializedCarousel$ = this.carouselService.getInitializedState().pipe(tap(state => {\r\n            this.initialize();\r\n            this._updateNavPages();\r\n            this.draw();\r\n            this.update();\r\n            this.carouselService.sendChanges();\r\n        }));\r\n        // mostly changes in carouselService and carousel at all causes carouselService.to(). It moves stage right-left by its code and calling needed functions\r\n        // Thus this method by calling carouselService.current(position) notifies about changes\r\n        const changedSettings$ = this.carouselService.getChangedState().pipe(filter(data => data.property.name === 'position'), tap(data => {\r\n            this.update();\r\n            // should be the call of the function written at the end of comment\r\n            // but the method carouselServive.to() has setTimeout(f, 0) which contains carouselServive.update() which calls sendChanges() method.\r\n            // carouselService.navData and carouselService.dotsData update earlier than carouselServive.update() gets called\r\n            // updates of carouselService.navData and carouselService.dotsData are being happening withing carouselService.current(position) method which calls next() of _changedSettingsCarousel$\r\n            // carouselService.current(position) is being calling earlier than carouselServive.update();\r\n            // this.carouselService.sendChanges();\r\n        }));\r\n        const refreshedCarousel$ = this.carouselService.getRefreshedState().pipe(tap(() => {\r\n            this._updateNavPages();\r\n            this.draw();\r\n            this.update();\r\n            this.carouselService.sendChanges();\r\n        }));\r\n        const navMerge$ = merge(initializedCarousel$, changedSettings$, refreshedCarousel$);\r\n        this.navSubscription = navMerge$.subscribe(() => { });\r\n    }\r\n    /**\r\n       * Initializes the layout of the plugin and extends the carousel.\r\n       */\r\n    initialize() {\r\n        this._navData.disabled = true;\r\n        this._navData.prev.htmlText = this.carouselService.settings.navText[0];\r\n        this._navData.next.htmlText = this.carouselService.settings.navText[1];\r\n        this._dotsData.disabled = true;\r\n        this.carouselService.navData = this._navData;\r\n        this.carouselService.dotsData = this._dotsData;\r\n    }\r\n    /**\r\n     * Calculates internal states and updates prop _pages\r\n     */\r\n    _updateNavPages() {\r\n        let i, j, k;\r\n        const lower = this.carouselService.clones().length / 2, upper = lower + this.carouselService.items().length, maximum = this.carouselService.maximum(true), pages = [], settings = this.carouselService.settings;\r\n        let size = settings.center || settings.autoWidth || settings.dotsData\r\n            ? 1 : settings.dotsEach || settings.items;\r\n        size = +size;\r\n        if (settings.slideBy !== 'page') {\r\n            settings.slideBy = Math.min(+settings.slideBy, settings.items);\r\n        }\r\n        if (settings.dots || settings.slideBy === 'page') {\r\n            for (i = lower, j = 0, k = 0; i < upper; i++) {\r\n                if (j >= size || j === 0) {\r\n                    pages.push({\r\n                        start: Math.min(maximum, i - lower),\r\n                        end: i - lower + size - 1\r\n                    });\r\n                    if (Math.min(maximum, i - lower) === maximum) {\r\n                        break;\r\n                    }\r\n                    j = 0, ++k;\r\n                }\r\n                j += this.carouselService.mergers(this.carouselService.relative(i));\r\n            }\r\n        }\r\n        this._pages = pages;\r\n    }\r\n    /**\r\n       * Draws the user interface.\r\n       * @todo The option `dotsData` wont work.\r\n       */\r\n    draw() {\r\n        let difference;\r\n        const settings = this.carouselService.settings, items = this.carouselService.items(), disabled = items.length <= settings.items;\r\n        this._navData.disabled = !settings.nav || disabled;\r\n        this._dotsData.disabled = !settings.dots || disabled;\r\n        if (settings.dots) {\r\n            difference = this._pages.length - this._dotsData.dots.length;\r\n            if (settings.dotsData && difference !== 0) {\r\n                this._dotsData.dots = [];\r\n                items.forEach(item => {\r\n                    this._dotsData.dots.push({\r\n                        active: false,\r\n                        id: `dot-${item.id}`,\r\n                        innerContent: item.dotContent,\r\n                        showInnerContent: true\r\n                    });\r\n                });\r\n            }\r\n            else if (difference > 0) {\r\n                const startI = this._dotsData.dots.length > 0 ? this._dotsData.dots.length : 0;\r\n                for (let i = 0; i < difference; i++) {\r\n                    this._dotsData.dots.push({\r\n                        active: false,\r\n                        id: `dot-${i + startI}`,\r\n                        innerContent: '',\r\n                        showInnerContent: false\r\n                    });\r\n                }\r\n            }\r\n            else if (difference < 0) {\r\n                this._dotsData.dots.splice(difference, Math.abs(difference));\r\n            }\r\n        }\r\n        this.carouselService.navData = this._navData;\r\n        this.carouselService.dotsData = this._dotsData;\r\n    }\r\n    ;\r\n    /**\r\n     * Updates navigation buttons's and dots's states\r\n     */\r\n    update() {\r\n        this._updateNavButtons();\r\n        this._updateDots();\r\n    }\r\n    /**\r\n     * Changes state of nav buttons (disabled, enabled)\r\n     */\r\n    _updateNavButtons() {\r\n        const settings = this.carouselService.settings, loop = settings.loop || settings.rewind, index = this.carouselService.relative(this.carouselService.current());\r\n        if (settings.nav) {\r\n            this._navData.prev.disabled = !loop && index <= this.carouselService.minimum(true);\r\n            this._navData.next.disabled = !loop && index >= this.carouselService.maximum(true);\r\n        }\r\n        this.carouselService.navData = this._navData;\r\n    }\r\n    /**\r\n     * Changes active dot if page becomes changed\r\n     */\r\n    _updateDots() {\r\n        let curActiveDotI;\r\n        if (!this.carouselService.settings.dots) {\r\n            return;\r\n        }\r\n        this._dotsData.dots.forEach(item => {\r\n            if (item.active === true) {\r\n                item.active = false;\r\n            }\r\n        });\r\n        curActiveDotI = this._current();\r\n        if (this._dotsData.dots.length) {\r\n            this._dotsData.dots[curActiveDotI].active = true;\r\n        }\r\n        this.carouselService.dotsData = this._dotsData;\r\n    }\r\n    /**\r\n       * Gets the current page position of the carousel.\r\n       * @returns the current page position of the carousel\r\n       */\r\n    _current() {\r\n        const current = this.carouselService.relative(this.carouselService.current());\r\n        let finalCurrent;\r\n        const pages = this._pages.filter((page, index) => {\r\n            return page.start <= current && page.end >= current;\r\n        }).pop();\r\n        finalCurrent = this._pages.findIndex(page => {\r\n            return page.start === pages.start && page.end === pages.end;\r\n        });\r\n        return finalCurrent;\r\n    }\r\n    ;\r\n    /**\r\n       * Gets the current succesor/predecessor position.\r\n     * @param sussessor position of slide\r\n       * @returns the current succesor/predecessor position\r\n       */\r\n    _getPosition(successor) {\r\n        let position, length;\r\n        const settings = this.carouselService.settings;\r\n        if (settings.slideBy === 'page') {\r\n            position = this._current();\r\n            length = this._pages.length;\r\n            successor ? ++position : --position;\r\n            position = this._pages[((position % length) + length) % length].start;\r\n        }\r\n        else {\r\n            position = this.carouselService.relative(this.carouselService.current());\r\n            length = this.carouselService.items().length;\r\n            successor ? position += +settings.slideBy : position -= +settings.slideBy;\r\n        }\r\n        return position;\r\n    }\r\n    ;\r\n    /**\r\n       * Slides to the next item or page.\r\n       * @param speed The time in milliseconds for the transition.\r\n       */\r\n    next(speed) {\r\n        this.carouselService.to(this._getPosition(true), speed);\r\n    }\r\n    ;\r\n    /**\r\n     * Slides to the previous item or page.\r\n     * @param speed The time in milliseconds for the transition.\r\n     */\r\n    prev(speed) {\r\n        this.carouselService.to(this._getPosition(false), speed);\r\n    }\r\n    ;\r\n    /**\r\n     * Slides to the specified item or page.\r\n     * @param position - The position of the item or page.\r\n     * @param speed - The time in milliseconds for the transition.\r\n     * @param standard - Whether to use the standard behaviour or not. Default meaning false\r\n     */\r\n    to(position, speed, standard) {\r\n        let length;\r\n        if (!standard && this._pages.length) {\r\n            length = this._pages.length;\r\n            this.carouselService.to(this._pages[((position % length) + length) % length].start, speed);\r\n        }\r\n        else {\r\n            this.carouselService.to(position, speed);\r\n        }\r\n    }\r\n    ;\r\n    /**\r\n     * Moves carousel after user's clicking on any dots\r\n     */\r\n    moveByDot(dotId) {\r\n        const index = this._dotsData.dots.findIndex(dot => dotId === dot.id);\r\n        this.to(index, this.carouselService.settings.dotsSpeed);\r\n    }\r\n    /**\r\n     * rewinds carousel to slide with needed id\r\n     * @param id id of slide\r\n     */\r\n    toSlideById(id) {\r\n        const position = this.carouselService.slidesData.findIndex(slide => slide.id === id && slide.isCloned === false);\r\n        if (position === -1 || position === this.carouselService.current()) {\r\n            return;\r\n        }\r\n        this.carouselService.to(this.carouselService.relative(position), false);\r\n    }\r\n}\nNavigationService.ɵfac = function NavigationService_Factory(t) { return new (t || NavigationService)(ɵngcc0.ɵɵinject(CarouselService)); };\nNavigationService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NavigationService, factory: NavigationService.ɵfac });\r\nNavigationService.ctorParameters = () => [\r\n    { type: CarouselService }\r\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NavigationService, [{\n        type: Injectable\n    }], function () { return [{ type: CarouselService }]; }, null); })();\r\n\r\n// import { Injectable } from '@angular/core';\r\n/**\r\n * Create a new injection token for injecting the window into a component.\r\n */\r\nconst WINDOW = new InjectionToken('WindowToken');\r\n/**\r\n * Define abstract class for obtaining reference to the global window object.\r\n */\r\nclass WindowRef {\r\n    get nativeWindow() {\r\n        throw new Error('Not implemented.');\r\n    }\r\n}\r\n/**\r\n * Define class that implements the abstract class and returns the native window object.\r\n */\r\nclass BrowserWindowRef extends WindowRef {\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * @returns window object\r\n     */\r\n    get nativeWindow() {\r\n        return window;\r\n    }\r\n}\nBrowserWindowRef.ɵfac = function BrowserWindowRef_Factory(t) { return new (t || BrowserWindowRef)(); };\nBrowserWindowRef.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: BrowserWindowRef, factory: BrowserWindowRef.ɵfac });\r\nBrowserWindowRef.ctorParameters = () => [];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BrowserWindowRef, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\r\n/**\r\n * Create an factory function that returns the native window object.\r\n * @param browserWindowRef Native window object\r\n * @param platformId id of platform\r\n * @returns type of platform of empty object\r\n */\r\nfunction windowFactory(browserWindowRef, platformId) {\r\n    if (isPlatformBrowser(platformId)) {\r\n        return browserWindowRef.nativeWindow;\r\n    }\r\n    const obj = {\r\n        setTimeout: (func, time) => { },\r\n        clearTimeout: (a) => { }\r\n    };\r\n    return obj;\r\n}\r\n/**\r\n * Create a injectable provider for the WindowRef token that uses the BrowserWindowRef class.\r\n */\r\nconst browserWindowProvider = {\r\n    provide: WindowRef,\r\n    useClass: BrowserWindowRef\r\n};\r\n/**\r\n * Create an injectable provider that uses the windowFactory function for returning the native window object.\r\n */\r\nconst windowProvider = {\r\n    provide: WINDOW,\r\n    useFactory: windowFactory,\r\n    deps: [WindowRef, PLATFORM_ID]\r\n};\r\n/**\r\n * Create an array of providers.\r\n */\r\nconst WINDOW_PROVIDERS = [browserWindowProvider, windowProvider];\r\n\r\n/**\r\n * Create a new injection token for injecting the Document into a component.\r\n */\r\nconst DOCUMENT = new InjectionToken('DocumentToken');\r\n/**\r\n * Define abstract class for obtaining reference to the global Document object.\r\n */\r\nclass DocumentRef {\r\n    get nativeDocument() {\r\n        throw new Error('Not implemented.');\r\n    }\r\n}\r\n/**\r\n * Define class that implements the abstract class and returns the native Document object.\r\n */\r\nclass BrowserDocumentRef extends DocumentRef {\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * @returns Document object\r\n     */\r\n    get nativeDocument() {\r\n        return document;\r\n    }\r\n}\nBrowserDocumentRef.ɵfac = function BrowserDocumentRef_Factory(t) { return new (t || BrowserDocumentRef)(); };\nBrowserDocumentRef.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: BrowserDocumentRef, factory: BrowserDocumentRef.ɵfac });\r\nBrowserDocumentRef.ctorParameters = () => [];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BrowserDocumentRef, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\r\n/**\r\n * Create an factory function that returns the native Document object.\r\n * @param browserDocumentRef Native Document object\r\n * @param platformId id of platform\r\n * @returns type of platform of empty object\r\n */\r\nfunction documentFactory(browserDocumentRef, platformId) {\r\n    if (isPlatformBrowser(platformId)) {\r\n        return browserDocumentRef.nativeDocument;\r\n    }\r\n    const doc = {\r\n        hidden: false,\r\n        visibilityState: 'visible'\r\n    };\r\n    return doc;\r\n}\r\n/**\r\n * Create a injectable provider for the DocumentRef token that uses the BrowserDocumentRef class.\r\n */\r\nconst browserDocumentProvider = {\r\n    provide: DocumentRef,\r\n    useClass: BrowserDocumentRef\r\n};\r\n/**\r\n * Create an injectable provider that uses the DocumentFactory function for returning the native Document object.\r\n */\r\nconst documentProvider = {\r\n    provide: DOCUMENT,\r\n    useFactory: documentFactory,\r\n    deps: [DocumentRef, PLATFORM_ID]\r\n};\r\n/**\r\n * Create an array of providers.\r\n */\r\nconst DOCUMENT_PROVIDERS = [browserDocumentProvider, documentProvider];\r\n\r\nclass AutoplayService {\r\n    constructor(carouselService, winRef, docRef) {\r\n        this.carouselService = carouselService;\r\n        /**\r\n         * The autoplay timeout.\r\n         */\r\n        this._timeout = null;\r\n        /**\r\n         * Indicates whenever the autoplay is paused.\r\n         */\r\n        this._paused = false;\r\n        this.winRef = winRef;\r\n        this.docRef = docRef;\r\n        this.spyDataStreams();\r\n    }\r\n    ngOnDestroy() {\r\n        this.autoplaySubscription.unsubscribe();\r\n    }\r\n    /**\r\n     * Defines Observables which service must observe\r\n     */\r\n    spyDataStreams() {\r\n        const initializedCarousel$ = this.carouselService.getInitializedState().pipe(tap(() => {\r\n            if (this.carouselService.settings.autoplay) {\r\n                this.play();\r\n            }\r\n        }));\r\n        const changedSettings$ = this.carouselService.getChangedState().pipe(tap(data => {\r\n            this._handleChangeObservable(data);\r\n        }));\r\n        const resized$ = this.carouselService.getResizedState().pipe(tap(() => {\r\n            if (this.carouselService.settings.autoplay) {\r\n                this.play();\r\n            }\r\n            else {\r\n                this.stop();\r\n            }\r\n        }));\r\n        // original Autoplay Plugin has listeners on play.owl.core and stop.owl.core events.\r\n        // They are triggered by Video Plugin\r\n        const autoplayMerge$ = merge(initializedCarousel$, changedSettings$, resized$);\r\n        this.autoplaySubscription = autoplayMerge$.subscribe(() => { });\r\n    }\r\n    /**\r\n       * Starts the autoplay.\r\n       * @param timeout The interval before the next animation starts.\r\n       * @param speed The animation speed for the animations.\r\n       */\r\n    play(timeout, speed) {\r\n        if (this._paused) {\r\n            this._paused = false;\r\n            this._setAutoPlayInterval(this.carouselService.settings.autoplayMouseleaveTimeout);\r\n        }\r\n        if (this.carouselService.is('rotating')) {\r\n            return;\r\n        }\r\n        this.carouselService.enter('rotating');\r\n        this._setAutoPlayInterval();\r\n    }\r\n    ;\r\n    /**\r\n       * Gets a new timeout\r\n       * @param timeout - The interval before the next animation starts.\r\n       * @param speed - The animation speed for the animations.\r\n       * @return\r\n       */\r\n    _getNextTimeout(timeout, speed) {\r\n        if (this._timeout) {\r\n            this.winRef.clearTimeout(this._timeout);\r\n        }\r\n        this._isArtificialAutoplayTimeout = timeout ? true : false;\r\n        return this.winRef.setTimeout(() => {\r\n            if (this._paused || this.carouselService.is('busy') || this.carouselService.is('interacting') || this.docRef.hidden) {\r\n                return;\r\n            }\r\n            this.carouselService.next(speed || this.carouselService.settings.autoplaySpeed);\r\n        }, timeout || this.carouselService.settings.autoplayTimeout);\r\n    }\r\n    ;\r\n    /**\r\n       * Sets autoplay in motion.\r\n       */\r\n    _setAutoPlayInterval(timeout) {\r\n        this._timeout = this._getNextTimeout(timeout);\r\n    }\r\n    ;\r\n    /**\r\n     * Stops the autoplay.\r\n     */\r\n    stop() {\r\n        if (!this.carouselService.is('rotating')) {\r\n            return;\r\n        }\r\n        this._paused = true;\r\n        this.winRef.clearTimeout(this._timeout);\r\n        this.carouselService.leave('rotating');\r\n    }\r\n    ;\r\n    /**\r\n       * Stops the autoplay.\r\n       */\r\n    pause() {\r\n        if (!this.carouselService.is('rotating')) {\r\n            return;\r\n        }\r\n        this._paused = true;\r\n    }\r\n    ;\r\n    /**\r\n     * Manages by autoplaying according to data passed by _changedSettingsCarousel$ Obsarvable\r\n     * @param data object with current position of carousel and type of change\r\n     */\r\n    _handleChangeObservable(data) {\r\n        if (data.property.name === 'settings') {\r\n            if (this.carouselService.settings.autoplay) {\r\n                this.play();\r\n            }\r\n            else {\r\n                this.stop();\r\n            }\r\n        }\r\n        else if (data.property.name === 'position') {\r\n            //console.log('play?', e);\r\n            if (this.carouselService.settings.autoplay) {\r\n                this._setAutoPlayInterval();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Starts autoplaying of the carousel in the case when user leaves the carousel before it starts translateing (moving)\r\n     */\r\n    _playAfterTranslated() {\r\n        of('translated').pipe(switchMap(data => this.carouselService.getTranslatedState()), first(), filter(() => this._isArtificialAutoplayTimeout), tap(() => this._setAutoPlayInterval())).subscribe(() => { });\r\n    }\r\n    /**\r\n     * Starts pausing\r\n     */\r\n    startPausing() {\r\n        if (this.carouselService.settings.autoplayHoverPause && this.carouselService.is('rotating')) {\r\n            this.pause();\r\n        }\r\n    }\r\n    /**\r\n     * Starts playing after mouse leaves carousel\r\n     */\r\n    startPlayingMouseLeave() {\r\n        if (this.carouselService.settings.autoplayHoverPause && this.carouselService.is('rotating')) {\r\n            this.play();\r\n            this._playAfterTranslated();\r\n        }\r\n    }\r\n    /**\r\n     * Starts playing after touch ends\r\n     */\r\n    startPlayingTouchEnd() {\r\n        if (this.carouselService.settings.autoplayHoverPause && this.carouselService.is('rotating')) {\r\n            this.play();\r\n            this._playAfterTranslated();\r\n        }\r\n    }\r\n}\nAutoplayService.ɵfac = function AutoplayService_Factory(t) { return new (t || AutoplayService)(ɵngcc0.ɵɵinject(CarouselService), ɵngcc0.ɵɵinject(WINDOW), ɵngcc0.ɵɵinject(DOCUMENT)); };\nAutoplayService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: AutoplayService, factory: AutoplayService.ɵfac });\r\nAutoplayService.ctorParameters = () => [\r\n    { type: CarouselService },\r\n    { type: undefined, decorators: [{ type: Inject, args: [WINDOW,] }] },\r\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\r\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutoplayService, [{\n        type: Injectable\n    }], function () { return [{ type: CarouselService }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [WINDOW]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\r\n\r\nclass LazyLoadService {\r\n    constructor(carouselService) {\r\n        this.carouselService = carouselService;\r\n        this.spyDataStreams();\r\n    }\r\n    ngOnDestroy() {\r\n        this.lazyLoadSubscription.unsubscribe();\r\n    }\r\n    /**\r\n     * Defines Observables which service must observe\r\n     */\r\n    spyDataStreams() {\r\n        const initializedCarousel$ = this.carouselService.getInitializedState().pipe(tap(() => {\r\n            const isLazyLoad = this.carouselService.settings && !this.carouselService.settings.lazyLoad;\r\n            this.carouselService.slidesData.forEach(item => item.load = isLazyLoad ? true : false);\r\n        }));\r\n        const changeSettings$ = this.carouselService.getChangeState();\r\n        const resizedCarousel$ = this.carouselService.getResizedState();\r\n        const lazyLoadMerge$ = merge(initializedCarousel$, changeSettings$, resizedCarousel$).pipe(tap(data => this._defineLazyLoadSlides(data)));\r\n        this.lazyLoadSubscription = lazyLoadMerge$.subscribe(() => { });\r\n    }\r\n    _defineLazyLoadSlides(data) {\r\n        if (!this.carouselService.settings || !this.carouselService.settings.lazyLoad) {\r\n            return;\r\n        }\r\n        if ((data.property && data.property.name === 'position') || data === 'initialized' || data === \"resized\") {\r\n            const settings = this.carouselService.settings, clones = this.carouselService.clones().length;\r\n            let n = (settings.center && Math.ceil(settings.items / 2) || settings.items), i = ((settings.center && n * -1) || 0), position = (data.property && data.property.value !== undefined ? data.property.value : this.carouselService.current()) + i;\r\n            // load = $.proxy(function(i, v) { this.load(v) }, this);\r\n            //TODO: Need documentation for this new option\r\n            if (settings.lazyLoadEager > 0) {\r\n                n += settings.lazyLoadEager;\r\n                // If the carousel is looping also preload images that are to the \"left\"\r\n                if (settings.loop) {\r\n                    position -= settings.lazyLoadEager;\r\n                    n++;\r\n                }\r\n            }\r\n            while (i++ < n) {\r\n                this._load(clones / 2 + this.carouselService.relative(position));\r\n                if (clones) {\r\n                    this.carouselService.clones(this.carouselService.relative(position)).forEach(value => this._load(value));\r\n                }\r\n                position++;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n       * Loads all resources of an item at the specified position.\r\n       * @param position - The absolute position of the item.\r\n       */\r\n    _load(position) {\r\n        if (this.carouselService.slidesData[position].load) {\r\n            return;\r\n        }\r\n        this.carouselService.slidesData[position].load = true;\r\n    }\r\n}\nLazyLoadService.ɵfac = function LazyLoadService_Factory(t) { return new (t || LazyLoadService)(ɵngcc0.ɵɵinject(CarouselService)); };\nLazyLoadService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: LazyLoadService, factory: LazyLoadService.ɵfac });\r\nLazyLoadService.ctorParameters = () => [\r\n    { type: CarouselService }\r\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LazyLoadService, [{\n        type: Injectable\n    }], function () { return [{ type: CarouselService }]; }, null); })();\r\n\r\nclass AnimateService {\r\n    constructor(carouselService) {\r\n        this.carouselService = carouselService;\r\n        /**\r\n         * s\r\n         */\r\n        this.swapping = true;\r\n        /**\r\n         * active slide before translating\r\n         */\r\n        this.previous = undefined;\r\n        /**\r\n         * new active slide after translating\r\n         */\r\n        this.next = undefined;\r\n        this.spyDataStreams();\r\n    }\r\n    ngOnDestroy() {\r\n        this.animateSubscription.unsubscribe();\r\n    }\r\n    /**\r\n     * Defines Observables which service must observe\r\n     */\r\n    spyDataStreams() {\r\n        const changeSettings$ = this.carouselService.getChangeState().pipe(tap(data => {\r\n            if (data.property.name === 'position') {\r\n                this.previous = this.carouselService.current();\r\n                this.next = data.property.value;\r\n            }\r\n        }));\r\n        const dragCarousel$ = this.carouselService.getDragState();\r\n        const draggedCarousel$ = this.carouselService.getDraggedState();\r\n        const translatedCarousel$ = this.carouselService.getTranslatedState();\r\n        const dragTranslatedMerge$ = merge(dragCarousel$, draggedCarousel$, translatedCarousel$).pipe(tap(data => this.swapping = data === 'translated'));\r\n        const translateCarousel$ = this.carouselService.getTranslateState().pipe(tap(data => {\r\n            if (this.swapping && (this.carouselService._options.animateOut || this.carouselService._options.animateIn)) {\r\n                this._swap();\r\n            }\r\n        }));\r\n        const animateMerge$ = merge(changeSettings$, translateCarousel$, dragTranslatedMerge$).pipe();\r\n        this.animateSubscription = animateMerge$.subscribe(() => { });\r\n    }\r\n    /**\r\n       * Toggles the animation classes whenever an translations starts.\r\n       * @returns\r\n       */\r\n    _swap() {\r\n        if (this.carouselService.settings.items !== 1) {\r\n            return;\r\n        }\r\n        // if (!$.support.animation || !$.support.transition) {\r\n        // \treturn;\r\n        // }\r\n        this.carouselService.speed(0);\r\n        let left;\r\n        const previous = this.carouselService.slidesData[this.previous], next = this.carouselService.slidesData[this.next], incoming = this.carouselService.settings.animateIn, outgoing = this.carouselService.settings.animateOut;\r\n        if (this.carouselService.current() === this.previous) {\r\n            return;\r\n        }\r\n        if (outgoing) {\r\n            left = +this.carouselService.coordinates(this.previous) - +this.carouselService.coordinates(this.next);\r\n            this.carouselService.slidesData.forEach(slide => {\r\n                if (slide.id === previous.id) {\r\n                    slide.left = `${left}px`;\r\n                    slide.isAnimated = true;\r\n                    slide.isDefAnimatedOut = true;\r\n                    slide.isCustomAnimatedOut = true;\r\n                }\r\n            });\r\n        }\r\n        if (incoming) {\r\n            this.carouselService.slidesData.forEach(slide => {\r\n                if (slide.id === next.id) {\r\n                    slide.isAnimated = true;\r\n                    slide.isDefAnimatedIn = true;\r\n                    slide.isCustomAnimatedIn = true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    ;\r\n    /**\r\n     * Handles the end of 'animationend' event\r\n     * @param id Id of slides\r\n     */\r\n    clear(id) {\r\n        this.carouselService.slidesData.forEach(slide => {\r\n            if (slide.id === id) {\r\n                slide.left = '';\r\n                slide.isAnimated = false;\r\n                slide.isDefAnimatedOut = false;\r\n                slide.isCustomAnimatedOut = false;\r\n                slide.isDefAnimatedIn = false;\r\n                slide.isCustomAnimatedIn = false;\r\n                slide.classes = this.carouselService.setCurSlideClasses(slide);\r\n            }\r\n        });\r\n        this.carouselService.onTransitionEnd();\r\n    }\r\n    ;\r\n}\nAnimateService.ɵfac = function AnimateService_Factory(t) { return new (t || AnimateService)(ɵngcc0.ɵɵinject(CarouselService)); };\nAnimateService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: AnimateService, factory: AnimateService.ɵfac });\r\nAnimateService.ctorParameters = () => [\r\n    { type: CarouselService }\r\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AnimateService, [{\n        type: Injectable\n    }], function () { return [{ type: CarouselService }]; }, null); })();\r\n\r\nclass AutoHeightService {\r\n    constructor(carouselService) {\r\n        this.carouselService = carouselService;\r\n        this.spyDataStreams();\r\n    }\r\n    ngOnDestroy() {\r\n        this.autoHeightSubscription.unsubscribe();\r\n    }\r\n    /**\r\n     * Defines Observables which service must observe\r\n     */\r\n    spyDataStreams() {\r\n        const initializedCarousel$ = this.carouselService.getInitializedState().pipe(tap(data => {\r\n            if (this.carouselService.settings.autoHeight) {\r\n                this.update();\r\n            }\r\n            else {\r\n                this.carouselService.slidesData.forEach(slide => slide.heightState = 'full');\r\n            }\r\n        }));\r\n        const changedSettings$ = this.carouselService.getChangedState().pipe(tap(data => {\r\n            if (this.carouselService.settings.autoHeight && data.property.name === 'position') {\r\n                this.update();\r\n            }\r\n        }));\r\n        const refreshedCarousel$ = this.carouselService.getRefreshedState().pipe(tap(data => {\r\n            if (this.carouselService.settings.autoHeight) {\r\n                this.update();\r\n            }\r\n        }));\r\n        const autoHeight$ = merge(initializedCarousel$, changedSettings$, refreshedCarousel$);\r\n        this.autoHeightSubscription = autoHeight$.subscribe(() => { });\r\n    }\r\n    /**\r\n     * Updates the prop 'heightState' of slides\r\n     */\r\n    update() {\r\n        const items = this.carouselService.settings.items;\r\n        let start = this.carouselService.current(), end = start + items;\r\n        if (this.carouselService.settings.center) {\r\n            start = items % 2 === 1 ? start - (items - 1) / 2 : start - items / 2;\r\n            end = items % 2 === 1 ? start + items : start + items + 1;\r\n        }\r\n        this.carouselService.slidesData.forEach((slide, i) => {\r\n            slide.heightState = (i >= start && i < end) ? 'full' : 'nulled';\r\n        });\r\n    }\r\n}\nAutoHeightService.ɵfac = function AutoHeightService_Factory(t) { return new (t || AutoHeightService)(ɵngcc0.ɵɵinject(CarouselService)); };\nAutoHeightService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: AutoHeightService, factory: AutoHeightService.ɵfac });\r\nAutoHeightService.ctorParameters = () => [\r\n    { type: CarouselService }\r\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutoHeightService, [{\n        type: Injectable\n    }], function () { return [{ type: CarouselService }]; }, null); })();\r\n\r\nclass HashService {\r\n    constructor(carouselService, route, router) {\r\n        this.carouselService = carouselService;\r\n        this.route = route;\r\n        this.router = router;\r\n        this.spyDataStreams();\r\n        if (!this.route) {\r\n            this.route = {\r\n                fragment: of('no route').pipe(take(1))\r\n            };\r\n        }\r\n        ;\r\n        if (!this.router) {\r\n            this.router = {\r\n                navigate: (commands, extras) => { return; }\r\n            };\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.hashSubscription.unsubscribe();\r\n    }\r\n    /**\r\n     * Defines Observables which service must observe\r\n     */\r\n    spyDataStreams() {\r\n        const initializedCarousel$ = this.carouselService.getInitializedState().pipe(tap(() => this.listenToRoute()));\r\n        const changedSettings$ = this.carouselService.getChangedState().pipe(tap(data => {\r\n            if (this.carouselService.settings.URLhashListener && data.property.name === 'position') {\r\n                const newCurSlide = this.carouselService.current();\r\n                const newCurFragment = this.carouselService.slidesData[newCurSlide].hashFragment;\r\n                if (!newCurFragment || newCurFragment === this.currentHashFragment) {\r\n                    return;\r\n                }\r\n                this.router.navigate(['./'], { fragment: newCurFragment, relativeTo: this.route });\r\n            }\r\n        }));\r\n        const hashFragment$ = merge(initializedCarousel$, changedSettings$);\r\n        this.hashSubscription = hashFragment$.subscribe(() => { });\r\n    }\r\n    /**\r\n     * rewinds carousel to slide which has the same hashFragment as fragment of current url\r\n     * @param fragment fragment of url\r\n     */\r\n    rewind(fragment) {\r\n        const position = this.carouselService.slidesData.findIndex(slide => slide.hashFragment === fragment && slide.isCloned === false);\r\n        if (position === -1 || position === this.carouselService.current()) {\r\n            return;\r\n        }\r\n        this.carouselService.to(this.carouselService.relative(position), false);\r\n    }\r\n    /**\r\n     * Initiate listening to ActivatedRoute.fragment\r\n     */\r\n    listenToRoute() {\r\n        const count = this.carouselService.settings.startPosition === 'URLHash' ? 0 : 2;\r\n        this.route.fragment.pipe(skip(count))\r\n            .subscribe(fragment => {\r\n            this.currentHashFragment = fragment;\r\n            this.rewind(fragment);\r\n        });\r\n    }\r\n}\nHashService.ɵfac = function HashService_Factory(t) { return new (t || HashService)(ɵngcc0.ɵɵinject(CarouselService), ɵngcc0.ɵɵinject(ɵngcc2.ActivatedRoute, 8), ɵngcc0.ɵɵinject(ɵngcc2.Router, 8)); };\nHashService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HashService, factory: HashService.ɵfac });\r\nHashService.ctorParameters = () => [\r\n    { type: CarouselService },\r\n    { type: ActivatedRoute, decorators: [{ type: Optional }] },\r\n    { type: Router, decorators: [{ type: Optional }] }\r\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HashService, [{\n        type: Injectable\n    }], function () { return [{ type: CarouselService }, { type: ɵngcc2.ActivatedRoute, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.Router, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\r\n\r\nlet nextId = 0;\r\nclass CarouselSlideDirective {\r\n    constructor(tplRef) {\r\n        this.tplRef = tplRef;\r\n        /**\r\n         * Unique slide identifier. Must be unique for the entire document for proper accessibility support.\r\n         * Will be auto-generated if not provided.\r\n         */\r\n        this.id = `owl-slide-${nextId++}`;\r\n        /**\r\n         * Defines how much widths of common slide will current slide have\r\n         * e.g. if _mergeData=2, the slide will twice wider then slides with _mergeData=1\r\n         */\r\n        this._dataMerge = 1;\r\n        /**\r\n         * Width of slide\r\n         */\r\n        this.width = 0;\r\n        /**\r\n         * Inner content of dot for certain slide; can be html-markup\r\n         */\r\n        this.dotContent = '';\r\n        /**\r\n         * Hash (fragment) of url which corresponds to certain slide\r\n         */\r\n        this.dataHash = '';\r\n    }\r\n    set dataMerge(data) {\r\n        this._dataMerge = this.isNumeric(data) ? data : 1;\r\n    }\r\n    ;\r\n    get dataMerge() { return this._dataMerge; }\r\n    /**\r\n       * Determines if the input is a Number or something that can be coerced to a Number\r\n       * @param - The input to be tested\r\n       * @returns - An indication if the input is a Number or can be coerced to a Number\r\n       */\r\n    isNumeric(number) {\r\n        return !isNaN(parseFloat(number));\r\n    }\r\n}\nCarouselSlideDirective.ɵfac = function CarouselSlideDirective_Factory(t) { return new (t || CarouselSlideDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCarouselSlideDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CarouselSlideDirective, selectors: [[\"ng-template\", \"carouselSlide\", \"\"]], inputs: { id: \"id\", width: \"width\", dotContent: \"dotContent\", dataHash: \"dataHash\", dataMerge: \"dataMerge\" } });\r\nCarouselSlideDirective.ctorParameters = () => [\r\n    { type: TemplateRef }\r\n];\r\nCarouselSlideDirective.propDecorators = {\r\n    id: [{ type: Input }],\r\n    dataMerge: [{ type: Input }],\r\n    width: [{ type: Input }],\r\n    dotContent: [{ type: Input }],\r\n    dataHash: [{ type: Input }]\r\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CarouselSlideDirective, [{\n        type: Directive,\n        args: [{ selector: 'ng-template[carouselSlide]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { id: [{\n            type: Input\n        }], width: [{\n            type: Input\n        }], dotContent: [{\n            type: Input\n        }], dataHash: [{\n            type: Input\n        }], dataMerge: [{\n            type: Input\n        }] }); })();\r\n/**\r\n * Data which will be passed out after ending of transition of carousel\r\n */\r\nclass SlidesOutputData {\r\n}\r\n;\r\nclass CarouselComponent {\r\n    constructor(el, resizeService, carouselService, navigationService, autoplayService, lazyLoadService, animateService, autoHeightService, hashService, logger, changeDetectorRef, docRef) {\r\n        this.el = el;\r\n        this.resizeService = resizeService;\r\n        this.carouselService = carouselService;\r\n        this.navigationService = navigationService;\r\n        this.autoplayService = autoplayService;\r\n        this.lazyLoadService = lazyLoadService;\r\n        this.animateService = animateService;\r\n        this.autoHeightService = autoHeightService;\r\n        this.hashService = hashService;\r\n        this.logger = logger;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.translated = new EventEmitter();\r\n        this.dragging = new EventEmitter();\r\n        this.change = new EventEmitter();\r\n        this.changed = new EventEmitter();\r\n        this.initialized = new EventEmitter();\r\n        /**\r\n           *  Data of every slide\r\n           */\r\n        this.slidesData = [];\r\n        /**\r\n         * Shows whether carousel is loaded of not.\r\n         */\r\n        this.carouselLoaded = false;\r\n        this.docRef = docRef;\r\n    }\r\n    onVisibilityChange(ev) {\r\n        if (!this.carouselService.settings.autoplay)\r\n            return;\r\n        switch (this.docRef.visibilityState) {\r\n            case 'visible':\r\n                this.autoplayService.play();\r\n                break;\r\n            case 'hidden':\r\n                this.autoplayService.stop();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    ;\r\n    ngOnInit() {\r\n        this.spyDataStreams();\r\n        this.carouselWindowWidth = this.el.nativeElement.querySelector('.owl-carousel').clientWidth;\r\n    }\r\n    ngAfterContentChecked() {\r\n    }\r\n    // ngAfterContentChecked() END\r\n    ngAfterContentInit() {\r\n        if (this.slides.toArray().length) {\r\n            this.carouselService.setup(this.carouselWindowWidth, this.slides.toArray(), this.options);\r\n            this.carouselService.initialize(this.slides.toArray());\r\n            this._winResizeWatcher();\r\n        }\r\n        else {\r\n            this.logger.log(`There are no slides to show. So the carousel won't be rendered`);\r\n        }\r\n        this._slidesChangesSubscription = this.slides.changes.pipe(tap((slides) => {\r\n            if (slides.toArray().length) {\r\n                // this.carouselService.setItems(slides.toArray());\r\n                this.carouselService.setup(this.carouselWindowWidth, slides.toArray(), this.options);\r\n                this.carouselService.initialize(slides.toArray());\r\n            }\r\n            else {\r\n                this.carouselLoaded = false;\r\n                this.logger.log(`There are no slides to show. So the carousel won't be re-rendered`);\r\n            }\r\n        })).subscribe(() => { });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.resizeSubscription) {\r\n            this.resizeSubscription.unsubscribe();\r\n        }\r\n        if (this._slidesChangesSubscription) {\r\n            this._slidesChangesSubscription.unsubscribe();\r\n        }\r\n        if (this._allObservSubscription) {\r\n            this._allObservSubscription.unsubscribe();\r\n        }\r\n    }\r\n    /**\r\n     * Joins the observable login in one place: sets values to some observables, merges this observables and\r\n     * subcribes to merge func\r\n     */\r\n    spyDataStreams() {\r\n        this._viewCurSettings$ = this.carouselService.getViewCurSettings().pipe(tap(data => {\r\n            this.owlDOMData = data.owlDOMData;\r\n            this.stageData = data.stageData;\r\n            this.slidesData = data.slidesData;\r\n            if (!this.carouselLoaded) {\r\n                this.carouselLoaded = true;\r\n            }\r\n            this.navData = data.navData;\r\n            this.dotsData = data.dotsData;\r\n            this.changeDetectorRef.markForCheck();\r\n        }));\r\n        this._initializedCarousel$ = this.carouselService.getInitializedState().pipe(tap(() => {\r\n            this.gatherTranslatedData();\r\n            this.initialized.emit(this.slidesOutputData);\r\n            // this.slidesOutputData = {};\r\n        }));\r\n        this._translatedCarousel$ = this.carouselService.getTranslatedState().pipe(tap(() => {\r\n            this.gatherTranslatedData();\r\n            this.translated.emit(this.slidesOutputData);\r\n            // this.slidesOutputData = {};\r\n        }));\r\n        this._changeCarousel$ = this.carouselService.getChangeState().pipe(tap(() => {\r\n            this.gatherTranslatedData();\r\n            this.change.emit(this.slidesOutputData);\r\n            // this.slidesOutputData = {};\r\n        }));\r\n        this._changedCarousel$ = this.carouselService.getChangeState().pipe(switchMap(value => {\r\n            const changedPosition = of(value).pipe(filter(() => value.property.name === 'position'), switchMap(() => from(this.slidesData)), skip(value.property.value), take(this.carouselService.settings.items), map(slide => {\r\n                const clonedIdPrefix = this.carouselService.clonedIdPrefix;\r\n                const id = slide.id.indexOf(clonedIdPrefix) >= 0 ? slide.id.slice(clonedIdPrefix.length) : slide.id;\r\n                return Object.assign(Object.assign({}, slide), { id: id, isActive: true });\r\n            }), toArray(), map(slides => {\r\n                return {\r\n                    slides: slides,\r\n                    startPosition: this.carouselService.relative(value.property.value)\r\n                };\r\n            }));\r\n            // const changedSetting: Observable<SlidesOutputData> = of(value).pipe(\r\n            //   filter(() => value.property.name === 'settings'),\r\n            //   map(() => {\r\n            //     return {\r\n            //       slides: [],\r\n            //       startPosition: this.carouselService.relative(value.property.value)\r\n            //     }\r\n            //   })\r\n            // )\r\n            return merge(changedPosition);\r\n        }), tap(slidesData => {\r\n            this.gatherTranslatedData();\r\n            this.changed.emit(slidesData.slides.length ? slidesData : this.slidesOutputData);\r\n            // console.log(this.slidesOutputData);\r\n            // this.slidesOutputData = {};\r\n        }));\r\n        this._draggingCarousel$ = this.carouselService.getDragState().pipe(tap(() => {\r\n            this.gatherTranslatedData();\r\n            this.dragging.emit({ dragging: true, data: this.slidesOutputData });\r\n        }), switchMap(() => this.carouselService.getDraggedState().pipe(map(() => !!this.carouselService.is('animating')))), switchMap(anim => {\r\n            if (anim) {\r\n                return this.carouselService.getTranslatedState().pipe(first());\r\n            }\r\n            else {\r\n                return of('not animating');\r\n            }\r\n        }), tap(() => {\r\n            this.dragging.emit({ dragging: false, data: this.slidesOutputData });\r\n        }));\r\n        this._carouselMerge$ = merge(this._viewCurSettings$, this._translatedCarousel$, this._draggingCarousel$, this._changeCarousel$, this._changedCarousel$, this._initializedCarousel$);\r\n        this._allObservSubscription = this._carouselMerge$.subscribe(() => { });\r\n    }\r\n    /**\r\n     * Init subscription to resize event and attaches handler for this event\r\n     */\r\n    _winResizeWatcher() {\r\n        if (Object.keys(this.carouselService._options.responsive).length) {\r\n            this.resizeSubscription = this.resizeService.onResize$\r\n                .pipe(filter(() => this.carouselWindowWidth !== this.el.nativeElement.querySelector('.owl-carousel').clientWidth), delay(this.carouselService.settings.responsiveRefreshRate))\r\n                .subscribe(() => {\r\n                this.carouselService.onResize(this.el.nativeElement.querySelector('.owl-carousel').clientWidth);\r\n                this.carouselWindowWidth = this.el.nativeElement.querySelector('.owl-carousel').clientWidth;\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Handler for transitioend event\r\n     */\r\n    onTransitionEnd() {\r\n        this.carouselService.onTransitionEnd();\r\n    }\r\n    /**\r\n     * Handler for click event, attached to next button\r\n     */\r\n    next() {\r\n        if (!this.carouselLoaded)\r\n            return;\r\n        this.navigationService.next(this.carouselService.settings.navSpeed);\r\n    }\r\n    /**\r\n     * Handler for click event, attached to prev button\r\n     */\r\n    prev() {\r\n        if (!this.carouselLoaded)\r\n            return;\r\n        this.navigationService.prev(this.carouselService.settings.navSpeed);\r\n    }\r\n    /**\r\n     * Handler for click event, attached to dots\r\n     */\r\n    moveByDot(dotId) {\r\n        if (!this.carouselLoaded)\r\n            return;\r\n        this.navigationService.moveByDot(dotId);\r\n    }\r\n    /**\r\n     * rewinds carousel to slide with needed id\r\n     * @param id fragment of url\r\n     */\r\n    to(id) {\r\n        // if (!this.carouselLoaded || ((this.navData && this.navData.disabled) && (this.dotsData && this.dotsData.disabled))) return;\r\n        if (!this.carouselLoaded)\r\n            return;\r\n        this.navigationService.toSlideById(id);\r\n    }\r\n    /**\r\n     * Gathers and prepares data intended for passing to the user by means of firing event translatedCarousel\r\n     */\r\n    gatherTranslatedData() {\r\n        let startPosition;\r\n        const clonedIdPrefix = this.carouselService.clonedIdPrefix;\r\n        const activeSlides = this.slidesData\r\n            .filter(slide => slide.isActive === true)\r\n            .map(slide => {\r\n            const id = slide.id.indexOf(clonedIdPrefix) >= 0 ? slide.id.slice(clonedIdPrefix.length) : slide.id;\r\n            return {\r\n                id: id,\r\n                width: slide.width,\r\n                marginL: slide.marginL,\r\n                marginR: slide.marginR,\r\n                center: slide.isCentered\r\n            };\r\n        });\r\n        startPosition = this.carouselService.relative(this.carouselService.current());\r\n        this.slidesOutputData = {\r\n            startPosition: startPosition,\r\n            slides: activeSlides\r\n        };\r\n    }\r\n    /**\r\n     * Starts pausing\r\n     */\r\n    startPausing() {\r\n        this.autoplayService.startPausing();\r\n    }\r\n    /**\r\n     * Starts playing after mouse leaves carousel\r\n     */\r\n    startPlayML() {\r\n        this.autoplayService.startPlayingMouseLeave();\r\n    }\r\n    /**\r\n     * Starts playing after touch ends\r\n     */\r\n    startPlayTE() {\r\n        this.autoplayService.startPlayingTouchEnd();\r\n    }\r\n}\nCarouselComponent.ɵfac = function CarouselComponent_Factory(t) { return new (t || CarouselComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ResizeService), ɵngcc0.ɵɵdirectiveInject(CarouselService), ɵngcc0.ɵɵdirectiveInject(NavigationService), ɵngcc0.ɵɵdirectiveInject(AutoplayService), ɵngcc0.ɵɵdirectiveInject(LazyLoadService), ɵngcc0.ɵɵdirectiveInject(AnimateService), ɵngcc0.ɵɵdirectiveInject(AutoHeightService), ɵngcc0.ɵɵdirectiveInject(HashService), ɵngcc0.ɵɵdirectiveInject(OwlLogger), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCarouselComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CarouselComponent, selectors: [[\"owl-carousel-o\"]], contentQueries: function CarouselComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CarouselSlideDirective, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.slides = _t);\n    } }, hostBindings: function CarouselComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"visibilitychange\", function CarouselComponent_visibilitychange_HostBindingHandler($event) { return ctx.onVisibilityChange($event); }, false, ɵngcc0.ɵɵresolveDocument);\n    } }, inputs: { options: \"options\" }, outputs: { translated: \"translated\", dragging: \"dragging\", change: \"change\", changed: \"changed\", initialized: \"initialized\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            NavigationService,\n            AutoplayService,\n            CarouselService,\n            LazyLoadService,\n            AnimateService,\n            AutoHeightService,\n            HashService\n        ])], decls: 4, vars: 9, consts: [[1, \"owl-carousel\", \"owl-theme\", 3, \"ngClass\", \"mouseover\", \"mouseleave\", \"touchstart\", \"touchend\"], [\"owlCarousel\", \"\"], [\"class\", \"owl-stage-outer\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"owl-stage-outer\"], [3, \"owlDraggable\", \"stageData\", \"slidesData\"], [1, \"owl-nav\", 3, \"ngClass\"], [1, \"owl-prev\", 3, \"ngClass\", \"innerHTML\", \"click\"], [1, \"owl-next\", 3, \"ngClass\", \"innerHTML\", \"click\"], [1, \"owl-dots\", 3, \"ngClass\"], [\"class\", \"owl-dot\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"owl-dot\", 3, \"ngClass\", \"click\"], [3, \"innerHTML\"]], template: function CarouselComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"mouseover\", function CarouselComponent_Template_div_mouseover_0_listener() { return ctx.startPausing(); })(\"mouseleave\", function CarouselComponent_Template_div_mouseleave_0_listener() { return ctx.startPlayML(); })(\"touchstart\", function CarouselComponent_Template_div_touchstart_0_listener() { return ctx.startPausing(); })(\"touchend\", function CarouselComponent_Template_div_touchend_0_listener() { return ctx.startPlayTE(); });\n        ɵngcc0.ɵɵtemplate(2, CarouselComponent_div_2_Template, 2, 6, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(3, CarouselComponent_ng_container_3_Template, 6, 15, \"ng-container\", 3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction5(3, _c3, ctx.owlDOMData == null ? null : ctx.owlDOMData.rtl, ctx.owlDOMData == null ? null : ctx.owlDOMData.isLoaded, ctx.owlDOMData == null ? null : ctx.owlDOMData.isResponsive, ctx.owlDOMData == null ? null : ctx.owlDOMData.isMouseDragable, ctx.owlDOMData == null ? null : ctx.owlDOMData.isGrab));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.carouselLoaded);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.slides.toArray().length);\n    } }, directives: function () { return [ɵngcc3.NgClass, ɵngcc3.NgIf, StageComponent, ɵngcc3.NgForOf]; }, styles: [\".owl-theme[_ngcontent-%COMP%] { display: block; }\"] });\r\nCarouselComponent.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: ResizeService },\r\n    { type: CarouselService },\r\n    { type: NavigationService },\r\n    { type: AutoplayService },\r\n    { type: LazyLoadService },\r\n    { type: AnimateService },\r\n    { type: AutoHeightService },\r\n    { type: HashService },\r\n    { type: OwlLogger },\r\n    { type: ChangeDetectorRef },\r\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\r\n];\r\nCarouselComponent.propDecorators = {\r\n    slides: [{ type: ContentChildren, args: [CarouselSlideDirective,] }],\r\n    translated: [{ type: Output }],\r\n    dragging: [{ type: Output }],\r\n    change: [{ type: Output }],\r\n    changed: [{ type: Output }],\r\n    initialized: [{ type: Output }],\r\n    options: [{ type: Input }],\r\n    onVisibilityChange: [{ type: HostListener, args: ['document:visibilitychange', ['$event'],] }]\r\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CarouselComponent, [{\n        type: Component,\n        args: [{\n                selector: 'owl-carousel-o',\n                template: `\r\n    <div class=\"owl-carousel owl-theme\" #owlCarousel\r\n      [ngClass]=\"{'owl-rtl': owlDOMData?.rtl,\r\n                  'owl-loaded': owlDOMData?.isLoaded,\r\n                  'owl-responsive': owlDOMData?.isResponsive,\r\n                  'owl-drag': owlDOMData?.isMouseDragable,\r\n                  'owl-grab': owlDOMData?.isGrab}\"\r\n      (mouseover)=\"startPausing()\"\r\n      (mouseleave)=\"startPlayML()\"\r\n      (touchstart)=\"startPausing()\"\r\n      (touchend)=\"startPlayTE()\">\r\n\r\n      <div *ngIf=\"carouselLoaded\" class=\"owl-stage-outer\">\r\n        <owl-stage [owlDraggable]=\"{'isMouseDragable': owlDOMData?.isMouseDragable, 'isTouchDragable': owlDOMData?.isTouchDragable}\"\r\n                    [stageData]=\"stageData\"\r\n                    [slidesData]=\"slidesData\"></owl-stage>\r\n      </div> <!-- /.owl-stage-outer -->\r\n      <ng-container *ngIf=\"slides.toArray().length\">\r\n        <div class=\"owl-nav\" [ngClass]=\"{'disabled': navData?.disabled}\">\r\n          <div class=\"owl-prev\" [ngClass]=\"{'disabled': navData?.prev?.disabled}\" (click)=\"prev()\" [innerHTML]=\"navData?.prev?.htmlText\"></div>\r\n          <div class=\"owl-next\" [ngClass]=\"{'disabled': navData?.next?.disabled}\" (click)=\"next()\" [innerHTML]=\"navData?.next?.htmlText\"></div>\r\n        </div> <!-- /.owl-nav -->\r\n        <div class=\"owl-dots\" [ngClass]=\"{'disabled': dotsData?.disabled}\">\r\n          <div *ngFor=\"let dot of dotsData?.dots\" class=\"owl-dot\" [ngClass]=\"{'active': dot.active, 'owl-dot-text': dot.showInnerContent}\" (click)=\"moveByDot(dot.id)\">\r\n            <span [innerHTML]=\"dot.innerContent\"></span>\r\n          </div>\r\n        </div> <!-- /.owl-dots -->\r\n      </ng-container>\r\n    </div> <!-- /.owl-carousel owl-loaded -->\r\n  `,\n                providers: [\n                    NavigationService,\n                    AutoplayService,\n                    CarouselService,\n                    LazyLoadService,\n                    AnimateService,\n                    AutoHeightService,\n                    HashService\n                ],\n                styles: [`.owl-theme { display: block; }`]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ResizeService }, { type: CarouselService }, { type: NavigationService }, { type: AutoplayService }, { type: LazyLoadService }, { type: AnimateService }, { type: AutoHeightService }, { type: HashService }, { type: OwlLogger }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { translated: [{\n            type: Output\n        }], dragging: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], changed: [{\n            type: Output\n        }], initialized: [{\n            type: Output\n        }], onVisibilityChange: [{\n            type: HostListener,\n            args: ['document:visibilitychange', ['$event']]\n        }], slides: [{\n            type: ContentChildren,\n            args: [CarouselSlideDirective]\n        }], options: [{\n            type: Input\n        }] }); })();\r\n\r\nclass StageComponent {\r\n    constructor(zone, el, renderer, carouselService, animateService) {\r\n        this.zone = zone;\r\n        this.el = el;\r\n        this.renderer = renderer;\r\n        this.carouselService = carouselService;\r\n        this.animateService = animateService;\r\n        /**\r\n         * Object with data needed for dragging\r\n         */\r\n        this._drag = {\r\n            time: null,\r\n            target: null,\r\n            pointer: null,\r\n            stage: {\r\n                start: null,\r\n                current: null\r\n            },\r\n            direction: null,\r\n            active: false,\r\n            moving: false\r\n        };\r\n        /**\r\n         * Subject for notification when the carousel's rebuilding caused by resize event starts\r\n         */\r\n        this._oneDragMove$ = new Subject();\r\n        /**\r\n         * Passes this to _oneMouseTouchMove();\r\n         */\r\n        this.bindOneMouseTouchMove = (ev) => {\r\n            this._oneMouseTouchMove(ev);\r\n        };\r\n        /**\r\n         * Passes this to _onDragMove();\r\n         */\r\n        this.bindOnDragMove = (ev) => {\r\n            this._onDragMove(ev);\r\n        };\r\n        /**\r\n         * Passes this to _onDragMove();\r\n         */\r\n        this.bindOnDragEnd = (ev) => {\r\n            // this.zone.run(() => {\r\n            this._onDragEnd(ev);\r\n            // });\r\n        };\r\n        /**\r\n         * Attaches handler for 'click' event on any element in .owl-stage in order to prevent dragging when moving of cursor is less than 3px\r\n         */\r\n        this._oneClickHandler = () => {\r\n            this.listenerOneClick = this.renderer.listen(this._drag.target, 'click', () => false);\r\n            this.listenerOneClick();\r\n        };\r\n    }\r\n    onMouseDown(event) {\r\n        if (this.owlDraggable.isMouseDragable) {\r\n            this._onDragStart(event);\r\n        }\r\n    }\r\n    onTouchStart(event) {\r\n        if (this.owlDraggable.isTouchDragable) {\r\n            this._onDragStart(event);\r\n        }\r\n    }\r\n    onTouchCancel(event) {\r\n        this._onDragEnd(event);\r\n    }\r\n    onDragStart() {\r\n        if (this.owlDraggable.isMouseDragable) {\r\n            return false;\r\n        }\r\n    }\r\n    onSelectStart() {\r\n        if (this.owlDraggable.isMouseDragable) {\r\n            return false;\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this._oneMoveSubsription = this._oneDragMove$\r\n            .pipe(first())\r\n            .subscribe(() => {\r\n            this._sendChanges();\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this._oneMoveSubsription.unsubscribe();\r\n    }\r\n    /**\r\n       * Handles `touchstart` and `mousedown` events.\r\n       * @todo Horizontal swipe threshold as option\r\n       * @todo #261\r\n       * @param event - The event arguments.\r\n       */\r\n    _onDragStart(event) {\r\n        let stage = null;\r\n        if (event.which === 3) {\r\n            return;\r\n        }\r\n        stage = this._prepareDragging(event);\r\n        this._drag.time = new Date().getTime();\r\n        this._drag.target = event.target;\r\n        this._drag.stage.start = stage;\r\n        this._drag.stage.current = stage;\r\n        this._drag.pointer = this._pointer(event);\r\n        this.listenerMouseUp = this.renderer.listen(document, 'mouseup', this.bindOnDragEnd);\r\n        this.listenerTouchEnd = this.renderer.listen(document, 'touchend', this.bindOnDragEnd);\r\n        this.zone.runOutsideAngular(() => {\r\n            this.listenerOneMouseMove = this.renderer.listen(document, 'mousemove', this.bindOneMouseTouchMove);\r\n            this.listenerOneTouchMove = this.renderer.listen(document, 'touchmove', this.bindOneMouseTouchMove);\r\n        });\r\n    }\r\n    /**\r\n     * Attaches listeners to `touchmove` and `mousemove` events; initiates updating carousel after starting dragging\r\n     * @param event event objech of mouse or touch event\r\n     */\r\n    _oneMouseTouchMove(event) {\r\n        const delta = this._difference(this._drag.pointer, this._pointer(event));\r\n        if (this.listenerATag) {\r\n            this.listenerATag();\r\n        }\r\n        if (Math.abs(delta.x) < 3 && Math.abs(delta.y) < 3 && this._is('valid')) {\r\n            return;\r\n        }\r\n        if ((Math.abs(delta.x) < 3 && Math.abs(delta.x) < Math.abs(delta.y)) && this._is('valid')) {\r\n            return;\r\n        }\r\n        this.listenerOneMouseMove();\r\n        this.listenerOneTouchMove();\r\n        this._drag.moving = true;\r\n        this.blockClickAnchorInDragging(event);\r\n        this.listenerMouseMove = this.renderer.listen(document, 'mousemove', this.bindOnDragMove);\r\n        this.listenerTouchMove = this.renderer.listen(document, 'touchmove', this.bindOnDragMove);\r\n        event.preventDefault();\r\n        this._enterDragging();\r\n        this._oneDragMove$.next(event);\r\n        // this._sendChanges();\r\n    }\r\n    /**\r\n     * Attaches handler to HTMLAnchorElement for preventing click while carousel is being dragged\r\n     * @param event event object\r\n     */\r\n    blockClickAnchorInDragging(event) {\r\n        let target = event.target;\r\n        while (target && !(target instanceof HTMLAnchorElement)) {\r\n            target = target.parentElement;\r\n        }\r\n        if (target instanceof HTMLAnchorElement) {\r\n            this.listenerATag = this.renderer.listen(target, 'click', () => false);\r\n        }\r\n    }\r\n    /**\r\n     * Handles the `touchmove` and `mousemove` events.\r\n     * @todo #261\r\n     * @param event - The event arguments.\r\n     */\r\n    _onDragMove(event) {\r\n        let stage;\r\n        const stageOrExit = this.carouselService.defineNewCoordsDrag(event, this._drag);\r\n        if (stageOrExit === false) {\r\n            return;\r\n        }\r\n        stage = stageOrExit;\r\n        event.preventDefault();\r\n        this._drag.stage.current = stage;\r\n        this._animate(stage.x - this._drag.stage.start.x);\r\n    }\r\n    ;\r\n    /**\r\n     * Moves .owl-stage left-right\r\n     * @param coordinate coordinate to be set to .owl-stage\r\n     */\r\n    _animate(coordinate) {\r\n        this.renderer.setStyle(this.el.nativeElement.children[0], 'transform', `translate3d(${coordinate}px,0px,0px`);\r\n        this.renderer.setStyle(this.el.nativeElement.children[0], 'transition', '0s');\r\n    }\r\n    /**\r\n       * Handles the `touchend` and `mouseup` events.\r\n       * @todo #261\r\n       * @todo Threshold for click event\r\n       * @param event - The event arguments.\r\n       */\r\n    _onDragEnd(event) {\r\n        this.carouselService.owlDOMData.isGrab = false;\r\n        this.listenerOneMouseMove();\r\n        this.listenerOneTouchMove();\r\n        if (this._drag.moving) {\r\n            this.renderer.setStyle(this.el.nativeElement.children[0], 'transform', ``);\r\n            this.renderer.setStyle(this.el.nativeElement.children[0], 'transition', this.carouselService.speed(+this.carouselService.settings.dragEndSpeed || this.carouselService.settings.smartSpeed) / 1000 + 's');\r\n            this._finishDragging(event);\r\n            this.listenerMouseMove();\r\n            this.listenerTouchMove();\r\n        }\r\n        this._drag = {\r\n            time: null,\r\n            target: null,\r\n            pointer: null,\r\n            stage: {\r\n                start: null,\r\n                current: null\r\n            },\r\n            direction: null,\r\n            active: false,\r\n            moving: false\r\n        };\r\n        // this.carouselService.trigger('dragged');\r\n        this.listenerMouseUp();\r\n        this.listenerTouchEnd();\r\n    }\r\n    ;\r\n    /**\r\n       * Prepares data for dragging carousel. It starts after firing `touchstart` and `mousedown` events.\r\n       * @param event - The event arguments.\r\n       * @returns stage - object with 'x' and 'y' coordinates of .owl-stage\r\n       */\r\n    _prepareDragging(event) {\r\n        return this.carouselService.prepareDragging(event);\r\n    }\r\n    /**\r\n     * Finishes dragging\r\n     * @param event object event of 'mouseUp' of 'touchend' events\r\n     */\r\n    _finishDragging(event) {\r\n        this.carouselService.finishDragging(event, this._drag, this._oneClickHandler);\r\n    }\r\n    /**\r\n       * Gets unified pointer coordinates from event.\r\n       * @param event The `mousedown` or `touchstart` event.\r\n       * @returns Contains `x` and `y` coordinates of current pointer position.\r\n       */\r\n    _pointer(event) {\r\n        return this.carouselService.pointer(event);\r\n    }\r\n    /**\r\n       * Gets the difference of two vectors.\r\n       * @param first The first vector.\r\n       * @param second- The second vector.\r\n       * @returns The difference.\r\n       */\r\n    _difference(firstC, second) {\r\n        return this.carouselService.difference(firstC, second);\r\n    }\r\n    /**\r\n       * Checks whether the carousel is in a specific state or not.\r\n       * @param specificState The state to check.\r\n       * @returns The flag which indicates if the carousel is busy.\r\n       */\r\n    _is(specificState) {\r\n        return this.carouselService.is(specificState);\r\n    }\r\n    /**\r\n    * Enters a state.\r\n    * @param name The state name.\r\n    */\r\n    _enter(name) {\r\n        this.carouselService.enter(name);\r\n    }\r\n    /**\r\n       * Sends all data needed for View.\r\n       */\r\n    _sendChanges() {\r\n        this.carouselService.sendChanges();\r\n    }\r\n    /**\r\n     * Handler for transitioend event\r\n     */\r\n    onTransitionEnd() {\r\n        this.carouselService.onTransitionEnd();\r\n    }\r\n    /**\r\n       * Enters into a 'dragging' state\r\n       */\r\n    _enterDragging() {\r\n        this.carouselService.enterDragging();\r\n    }\r\n    /**\r\n     * Handles the end of 'animationend' event\r\n     * @param id Id of slides\r\n     */\r\n    clear(id) {\r\n        this.animateService.clear(id);\r\n    }\r\n}\nStageComponent.ɵfac = function StageComponent_Factory(t) { return new (t || StageComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(CarouselService), ɵngcc0.ɵɵdirectiveInject(AnimateService)); };\nStageComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: StageComponent, selectors: [[\"owl-stage\"]], hostBindings: function StageComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function StageComponent_mousedown_HostBindingHandler($event) { return ctx.onMouseDown($event); })(\"touchstart\", function StageComponent_touchstart_HostBindingHandler($event) { return ctx.onTouchStart($event); })(\"touchcancel\", function StageComponent_touchcancel_HostBindingHandler($event) { return ctx.onTouchCancel($event); })(\"dragstart\", function StageComponent_dragstart_HostBindingHandler() { return ctx.onDragStart(); })(\"selectstart\", function StageComponent_selectstart_HostBindingHandler() { return ctx.onSelectStart(); });\n    } }, inputs: { owlDraggable: \"owlDraggable\", stageData: \"stageData\", slidesData: \"slidesData\" }, decls: 3, vars: 8, consts: [[1, \"owl-stage\", 3, \"ngStyle\", \"transitionend\"], [4, \"ngFor\", \"ngForOf\"], [1, \"owl-item\", 3, \"ngClass\", \"ngStyle\", \"animationend\"], [4, \"ngIf\"], [3, \"ngTemplateOutlet\"]], template: function StageComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"transitionend\", function StageComponent_Template_div_transitionend_1_listener() { return ctx.onTransitionEnd(); });\n        ɵngcc0.ɵɵtemplate(2, StageComponent_ng_container_2_Template, 3, 9, \"ng-container\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ɵngcc0.ɵɵpureFunction5(2, _c5, ctx.stageData.width + \"px\", ctx.stageData.transform, ctx.stageData.transition, ctx.stageData.paddingL ? ctx.stageData.paddingL + \"px\" : \"\", ctx.stageData.paddingR ? ctx.stageData.paddingR + \"px\" : \"\"));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.slidesData);\n    } }, directives: [ɵngcc3.NgStyle, ɵngcc3.NgForOf, ɵngcc3.NgClass, ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet], encapsulation: 2, data: { animation: [\n            trigger('autoHeight', [\n                state('nulled', style({ height: 0 })),\n                state('full', style({ height: '*' })),\n                transition('full => nulled', [\n                    // style({height: '*'}),\n                    animate('700ms 350ms')\n                ]),\n                transition('nulled => full', [\n                    // style({height: 0}),\n                    animate(350)\n                ]),\n            ])\n        ] } });\r\nStageComponent.ctorParameters = () => [\r\n    { type: NgZone },\r\n    { type: ElementRef },\r\n    { type: Renderer2 },\r\n    { type: CarouselService },\r\n    { type: AnimateService }\r\n];\r\nStageComponent.propDecorators = {\r\n    owlDraggable: [{ type: Input }],\r\n    stageData: [{ type: Input }],\r\n    slidesData: [{ type: Input }],\r\n    onMouseDown: [{ type: HostListener, args: ['mousedown', ['$event'],] }],\r\n    onTouchStart: [{ type: HostListener, args: ['touchstart', ['$event'],] }],\r\n    onTouchCancel: [{ type: HostListener, args: ['touchcancel', ['$event'],] }],\r\n    onDragStart: [{ type: HostListener, args: ['dragstart',] }],\r\n    onSelectStart: [{ type: HostListener, args: ['selectstart',] }]\r\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(StageComponent, [{\n        type: Component,\n        args: [{\n                selector: 'owl-stage',\n                template: `\r\n    <div>\r\n      <div class=\"owl-stage\" [ngStyle]=\"{'width': stageData.width + 'px',\r\n                                        'transform': stageData.transform,\r\n                                        'transition': stageData.transition,\r\n                                        'padding-left': stageData.paddingL ? stageData.paddingL + 'px' : '',\r\n                                        'padding-right': stageData.paddingR ? stageData.paddingR + 'px' : '' }\"\r\n          (transitionend)=\"onTransitionEnd()\">\r\n        <ng-container *ngFor=\"let slide of slidesData; let i = index\">\r\n          <div class=\"owl-item\" [ngClass]=\"slide.classes\"\r\n                                [ngStyle]=\"{'width': slide.width + 'px',\r\n                                            'margin-left': slide.marginL ? slide.marginL + 'px' : '',\r\n                                            'margin-right': slide.marginR ? slide.marginR + 'px' : '',\r\n                                            'left': slide.left}\"\r\n                                (animationend)=\"clear(slide.id)\"\r\n                                [@autoHeight]=\"slide.heightState\">\r\n            <ng-template *ngIf=\"slide.load\" [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\r\n          </div><!-- /.owl-item -->\r\n        </ng-container>\r\n      </div><!-- /.owl-stage -->\r\n    </div>\r\n  `,\n                animations: [\n                    trigger('autoHeight', [\n                        state('nulled', style({ height: 0 })),\n                        state('full', style({ height: '*' })),\n                        transition('full => nulled', [\n                            // style({height: '*'}),\n                            animate('700ms 350ms')\n                        ]),\n                        transition('nulled => full', [\n                            // style({height: 0}),\n                            animate(350)\n                        ]),\n                    ])\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: CarouselService }, { type: AnimateService }]; }, { onMouseDown: [{\n            type: HostListener,\n            args: ['mousedown', ['$event']]\n        }], onTouchStart: [{\n            type: HostListener,\n            args: ['touchstart', ['$event']]\n        }], onTouchCancel: [{\n            type: HostListener,\n            args: ['touchcancel', ['$event']]\n        }], onDragStart: [{\n            type: HostListener,\n            args: ['dragstart']\n        }], onSelectStart: [{\n            type: HostListener,\n            args: ['selectstart']\n        }], owlDraggable: [{\n            type: Input\n        }], stageData: [{\n            type: Input\n        }], slidesData: [{\n            type: Input\n        }] }); })();\r\n\r\nclass OwlRouterLinkDirective {\r\n    constructor(router, route, tabIndex, renderer, el) {\r\n        this.router = router;\r\n        this.route = route;\r\n        this.stopLink = false;\r\n        this.commands = [];\r\n        if (tabIndex == null) {\r\n            renderer.setAttribute(el.nativeElement, 'tabindex', '0');\r\n        }\r\n    }\r\n    set owlRouterLink(commands) {\r\n        if (commands != null) {\r\n            this.commands = Array.isArray(commands) ? commands : [commands];\r\n        }\r\n        else {\r\n            this.commands = [];\r\n        }\r\n    }\r\n    /**\r\n     * @deprecated 4.0.0 use `queryParamsHandling` instead.\r\n     */\r\n    set preserveQueryParams(value) {\r\n        if (isDevMode() && console && console.warn) {\r\n            console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\r\n        }\r\n        this.preserve = value;\r\n    }\r\n    onClick() {\r\n        const extras = {\r\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\r\n            replaceUrl: attrBoolValue(this.replaceUrl),\r\n        };\r\n        if (this.stopLink) {\r\n            return false;\r\n        }\r\n        this.router.navigateByUrl(this.urlTree, extras);\r\n        return true;\r\n    }\r\n    get urlTree() {\r\n        return this.router.createUrlTree(this.commands, {\r\n            relativeTo: this.route,\r\n            queryParams: this.queryParams,\r\n            fragment: this.fragment,\r\n            preserveQueryParams: attrBoolValue(this.preserve),\r\n            queryParamsHandling: this.queryParamsHandling,\r\n            preserveFragment: attrBoolValue(this.preserveFragment),\r\n        });\r\n    }\r\n}\nOwlRouterLinkDirective.ɵfac = function OwlRouterLinkDirective_Factory(t) { return new (t || OwlRouterLinkDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ActivatedRoute), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nOwlRouterLinkDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: OwlRouterLinkDirective, selectors: [[\"\", \"owlRouterLink\", \"\", 5, \"a\"]], hostBindings: function OwlRouterLinkDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function OwlRouterLinkDirective_click_HostBindingHandler() { return ctx.onClick(); });\n    } }, inputs: { stopLink: \"stopLink\", owlRouterLink: \"owlRouterLink\", preserveQueryParams: \"preserveQueryParams\", queryParams: \"queryParams\", fragment: \"fragment\", queryParamsHandling: \"queryParamsHandling\", preserveFragment: \"preserveFragment\", skipLocationChange: \"skipLocationChange\", replaceUrl: \"replaceUrl\" } });\r\nOwlRouterLinkDirective.ctorParameters = () => [\r\n    { type: Router },\r\n    { type: ActivatedRoute },\r\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\r\n    { type: Renderer2 },\r\n    { type: ElementRef }\r\n];\r\nOwlRouterLinkDirective.propDecorators = {\r\n    queryParams: [{ type: Input }],\r\n    fragment: [{ type: Input }],\r\n    queryParamsHandling: [{ type: Input }],\r\n    preserveFragment: [{ type: Input }],\r\n    skipLocationChange: [{ type: Input }],\r\n    replaceUrl: [{ type: Input }],\r\n    stopLink: [{ type: Input }],\r\n    owlRouterLink: [{ type: Input }],\r\n    preserveQueryParams: [{ type: Input }],\r\n    onClick: [{ type: HostListener, args: ['click',] }]\r\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OwlRouterLinkDirective, [{\n        type: Directive,\n        args: [{ selector: ':not(a)[owlRouterLink]' }]\n    }], function () { return [{ type: ɵngcc2.Router }, { type: ɵngcc2.ActivatedRoute }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { stopLink: [{\n            type: Input\n        }], owlRouterLink: [{\n            type: Input\n        }], preserveQueryParams: [{\n            type: Input\n        }], onClick: [{\n            type: HostListener,\n            args: ['click']\n        }], queryParams: [{\n            type: Input\n        }], fragment: [{\n            type: Input\n        }], queryParamsHandling: [{\n            type: Input\n        }], preserveFragment: [{\n            type: Input\n        }], skipLocationChange: [{\n            type: Input\n        }], replaceUrl: [{\n            type: Input\n        }] }); })();\r\n/**\r\n * @description\r\n *\r\n * Lets you link to specific routes in your app.\r\n *\r\n * See `RouterLink` for more information.\r\n *\r\n * @ngModule RouterModule\r\n *\r\n * @publicApi\r\n */\r\nclass OwlRouterLinkWithHrefDirective {\r\n    constructor(router, route, locationStrategy) {\r\n        this.router = router;\r\n        this.route = route;\r\n        this.locationStrategy = locationStrategy;\r\n        this.stopLink = false;\r\n        this.commands = [];\r\n        this.subscription = router.events.subscribe((s) => {\r\n            if (s instanceof NavigationEnd) {\r\n                this.updateTargetUrlAndHref();\r\n            }\r\n        });\r\n    }\r\n    set owlRouterLink(commands) {\r\n        if (commands != null) {\r\n            this.commands = Array.isArray(commands) ? commands : [commands];\r\n        }\r\n        else {\r\n            this.commands = [];\r\n        }\r\n    }\r\n    set preserveQueryParams(value) {\r\n        if (isDevMode() && console && console.warn) {\r\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\r\n        }\r\n        this.preserve = value;\r\n    }\r\n    ngOnChanges(changes) { this.updateTargetUrlAndHref(); }\r\n    ngOnDestroy() { this.subscription.unsubscribe(); }\r\n    onClick(button, ctrlKey, metaKey, shiftKey) {\r\n        if (button !== 0 || ctrlKey || metaKey || shiftKey) {\r\n            return true;\r\n        }\r\n        if (typeof this.target === 'string' && this.target !== '_self') {\r\n            return true;\r\n        }\r\n        if (this.stopLink) {\r\n            return false;\r\n        }\r\n        const extras = {\r\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\r\n            replaceUrl: attrBoolValue(this.replaceUrl),\r\n        };\r\n        this.router.navigateByUrl(this.urlTree, extras);\r\n        return false;\r\n    }\r\n    updateTargetUrlAndHref() {\r\n        this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\r\n    }\r\n    get urlTree() {\r\n        return this.router.createUrlTree(this.commands, {\r\n            relativeTo: this.route,\r\n            queryParams: this.queryParams,\r\n            fragment: this.fragment,\r\n            preserveQueryParams: attrBoolValue(this.preserve),\r\n            queryParamsHandling: this.queryParamsHandling,\r\n            preserveFragment: attrBoolValue(this.preserveFragment),\r\n        });\r\n    }\r\n}\nOwlRouterLinkWithHrefDirective.ɵfac = function OwlRouterLinkWithHrefDirective_Factory(t) { return new (t || OwlRouterLinkWithHrefDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.LocationStrategy)); };\nOwlRouterLinkWithHrefDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: OwlRouterLinkWithHrefDirective, selectors: [[\"a\", \"owlRouterLink\", \"\"]], hostVars: 2, hostBindings: function OwlRouterLinkWithHrefDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function OwlRouterLinkWithHrefDirective_click_HostBindingHandler($event) { return ctx.onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"href\", ctx.href, ɵngcc0.ɵɵsanitizeUrl);\n        ɵngcc0.ɵɵattribute(\"target\", ctx.target);\n    } }, inputs: { stopLink: \"stopLink\", owlRouterLink: \"owlRouterLink\", preserveQueryParams: \"preserveQueryParams\", target: \"target\", queryParams: \"queryParams\", fragment: \"fragment\", queryParamsHandling: \"queryParamsHandling\", preserveFragment: \"preserveFragment\", skipLocationChange: \"skipLocationChange\", replaceUrl: \"replaceUrl\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\r\nOwlRouterLinkWithHrefDirective.ctorParameters = () => [\r\n    { type: Router },\r\n    { type: ActivatedRoute },\r\n    { type: LocationStrategy }\r\n];\r\nOwlRouterLinkWithHrefDirective.propDecorators = {\r\n    target: [{ type: HostBinding, args: ['attr.target',] }, { type: Input }],\r\n    queryParams: [{ type: Input }],\r\n    fragment: [{ type: Input }],\r\n    queryParamsHandling: [{ type: Input }],\r\n    preserveFragment: [{ type: Input }],\r\n    skipLocationChange: [{ type: Input }],\r\n    replaceUrl: [{ type: Input }],\r\n    stopLink: [{ type: Input }],\r\n    href: [{ type: HostBinding }],\r\n    owlRouterLink: [{ type: Input }],\r\n    preserveQueryParams: [{ type: Input }],\r\n    onClick: [{ type: HostListener, args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey'],] }]\r\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OwlRouterLinkWithHrefDirective, [{\n        type: Directive,\n        args: [{ selector: 'a[owlRouterLink]' }]\n    }], function () { return [{ type: ɵngcc2.Router }, { type: ɵngcc2.ActivatedRoute }, { type: ɵngcc3.LocationStrategy }]; }, { stopLink: [{\n            type: Input\n        }], owlRouterLink: [{\n            type: Input\n        }], preserveQueryParams: [{\n            type: Input\n        }], onClick: [{\n            type: HostListener,\n            args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey']]\n        }], href: [{\n            type: HostBinding\n        }], target: [{\n            type: HostBinding,\n            args: ['attr.target']\n        }, {\n            type: Input\n        }], queryParams: [{\n            type: Input\n        }], fragment: [{\n            type: Input\n        }], queryParamsHandling: [{\n            type: Input\n        }], preserveFragment: [{\n            type: Input\n        }], skipLocationChange: [{\n            type: Input\n        }], replaceUrl: [{\n            type: Input\n        }] }); })();\r\nfunction attrBoolValue(s) {\r\n    return s === '' || !!s;\r\n}\r\n\r\nconst routes = [];\r\nclass CarouselModule {\r\n}\nCarouselModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CarouselModule });\nCarouselModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CarouselModule_Factory(t) { return new (t || CarouselModule)(); }, providers: [WINDOW_PROVIDERS, ResizeService, DOCUMENT_PROVIDERS, OwlLogger], imports: [[\n            CommonModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CarouselModule, { declarations: function () { return [CarouselComponent, CarouselSlideDirective, StageComponent, OwlRouterLinkDirective, OwlRouterLinkWithHrefDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [CarouselComponent, CarouselSlideDirective, OwlRouterLinkDirective, OwlRouterLinkWithHrefDirective]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CarouselModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                ],\n                declarations: [CarouselComponent, CarouselSlideDirective, StageComponent, OwlRouterLinkDirective, OwlRouterLinkWithHrefDirective],\n                exports: [CarouselComponent, CarouselSlideDirective, OwlRouterLinkDirective, OwlRouterLinkWithHrefDirective],\n                providers: [WINDOW_PROVIDERS, ResizeService, DOCUMENT_PROVIDERS, OwlLogger]\n            }]\n    }], null, null); })();\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { CarouselComponent, CarouselModule, CarouselSlideDirective, OwlRouterLinkDirective, OwlRouterLinkWithHrefDirective, SlidesOutputData, NavigationService as ɵa, CarouselService as ɵb, OwlLogger as ɵc, AutoplayService as ɵd, WINDOW as ɵe, WindowRef as ɵf, BrowserWindowRef as ɵg, windowFactory as ɵh, browserWindowProvider as ɵi, windowProvider as ɵj, WINDOW_PROVIDERS as ɵk, DOCUMENT as ɵl, DocumentRef as ɵm, BrowserDocumentRef as ɵn, documentFactory as ɵo, browserDocumentProvider as ɵp, documentProvider as ɵq, DOCUMENT_PROVIDERS as ɵr, LazyLoadService as ɵs, AnimateService as ɵt, AutoHeightService as ɵu, HashService as ɵv, ResizeService as ɵw, StageComponent as ɵx };\r\n\r\n\n//# sourceMappingURL=ngx-owl-carousel-o.js.map","'use strict';\r\n\r\n// Last time updated: 2021-03-09 3:20:22 AM UTC\r\n\r\n// ________________\r\n// RecordRTC v5.6.2\r\n\r\n// Open-Sourced: https://github.com/muaz-khan/RecordRTC\r\n\r\n// --------------------------------------------------\r\n// Muaz Khan     - www.MuazKhan.com\r\n// MIT License   - www.WebRTC-Experiment.com/licence\r\n// --------------------------------------------------\r\n\r\n// ____________\r\n// RecordRTC.js\r\n\r\n/**\r\n * {@link https://github.com/muaz-khan/RecordRTC|RecordRTC} is a WebRTC JavaScript library for audio/video as well as screen activity recording. It supports Chrome, Firefox, Opera, Android, and Microsoft Edge. Platforms: Linux, Mac and Windows. \r\n * @summary Record audio, video or screen inside the browser.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef RecordRTC\r\n * @class\r\n * @example\r\n * var recorder = RecordRTC(mediaStream or [arrayOfMediaStream], {\r\n *     type: 'video', // audio or video or gif or canvas\r\n *     recorderType: MediaStreamRecorder || CanvasRecorder || StereoAudioRecorder || Etc\r\n * });\r\n * recorder.startRecording();\r\n * @see For further information:\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.\r\n * @param {object} config - {type:\"video\", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, desiredSampRate: 16000, video: HTMLVideoElement, etc.}\r\n */\r\n\r\nfunction RecordRTC(mediaStream, config) {\r\n    if (!mediaStream) {\r\n        throw 'First parameter is required.';\r\n    }\r\n\r\n    config = config || {\r\n        type: 'video'\r\n    };\r\n\r\n    config = new RecordRTCConfiguration(mediaStream, config);\r\n\r\n    // a reference to user's recordRTC object\r\n    var self = this;\r\n\r\n    function startRecording(config2) {\r\n        if (!config.disableLogs) {\r\n            console.log('RecordRTC version: ', self.version);\r\n        }\r\n\r\n        if (!!config2) {\r\n            // allow users to set options using startRecording method\r\n            // config2 is similar to main \"config\" object (second parameter over RecordRTC constructor)\r\n            config = new RecordRTCConfiguration(mediaStream, config2);\r\n        }\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('started recording ' + config.type + ' stream.');\r\n        }\r\n\r\n        if (mediaRecorder) {\r\n            mediaRecorder.clearRecordedData();\r\n            mediaRecorder.record();\r\n\r\n            setState('recording');\r\n\r\n            if (self.recordingDuration) {\r\n                handleRecordingDuration();\r\n            }\r\n            return self;\r\n        }\r\n\r\n        initRecorder(function() {\r\n            if (self.recordingDuration) {\r\n                handleRecordingDuration();\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    function initRecorder(initCallback) {\r\n        if (initCallback) {\r\n            config.initCallback = function() {\r\n                initCallback();\r\n                initCallback = config.initCallback = null; // recorder.initRecorder should be call-backed once.\r\n            };\r\n        }\r\n\r\n        var Recorder = new GetRecorderType(mediaStream, config);\r\n\r\n        mediaRecorder = new Recorder(mediaStream, config);\r\n        mediaRecorder.record();\r\n\r\n        setState('recording');\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Initialized recorderType:', mediaRecorder.constructor.name, 'for output-type:', config.type);\r\n        }\r\n    }\r\n\r\n    function stopRecording(callback) {\r\n        callback = callback || function() {};\r\n\r\n        if (!mediaRecorder) {\r\n            warningLog();\r\n            return;\r\n        }\r\n\r\n        if (self.state === 'paused') {\r\n            self.resumeRecording();\r\n\r\n            setTimeout(function() {\r\n                stopRecording(callback);\r\n            }, 1);\r\n            return;\r\n        }\r\n\r\n        if (self.state !== 'recording' && !config.disableLogs) {\r\n            console.warn('Recording state should be: \"recording\", however current state is: ', self.state);\r\n        }\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Stopped recording ' + config.type + ' stream.');\r\n        }\r\n\r\n        if (config.type !== 'gif') {\r\n            mediaRecorder.stop(_callback);\r\n        } else {\r\n            mediaRecorder.stop();\r\n            _callback();\r\n        }\r\n\r\n        setState('stopped');\r\n\r\n        function _callback(__blob) {\r\n            if (!mediaRecorder) {\r\n                if (typeof callback.call === 'function') {\r\n                    callback.call(self, '');\r\n                } else {\r\n                    callback('');\r\n                }\r\n                return;\r\n            }\r\n\r\n            Object.keys(mediaRecorder).forEach(function(key) {\r\n                if (typeof mediaRecorder[key] === 'function') {\r\n                    return;\r\n                }\r\n\r\n                self[key] = mediaRecorder[key];\r\n            });\r\n\r\n            var blob = mediaRecorder.blob;\r\n\r\n            if (!blob) {\r\n                if (__blob) {\r\n                    mediaRecorder.blob = blob = __blob;\r\n                } else {\r\n                    throw 'Recording failed.';\r\n                }\r\n            }\r\n\r\n            if (blob && !config.disableLogs) {\r\n                console.log(blob.type, '->', bytesToSize(blob.size));\r\n            }\r\n\r\n            if (callback) {\r\n                var url;\r\n\r\n                try {\r\n                    url = URL.createObjectURL(blob);\r\n                } catch (e) {}\r\n\r\n                if (typeof callback.call === 'function') {\r\n                    callback.call(self, url);\r\n                } else {\r\n                    callback(url);\r\n                }\r\n            }\r\n\r\n            if (!config.autoWriteToDisk) {\r\n                return;\r\n            }\r\n\r\n            getDataURL(function(dataURL) {\r\n                var parameter = {};\r\n                parameter[config.type + 'Blob'] = dataURL;\r\n                DiskStorage.Store(parameter);\r\n            });\r\n        }\r\n    }\r\n\r\n    function pauseRecording() {\r\n        if (!mediaRecorder) {\r\n            warningLog();\r\n            return;\r\n        }\r\n\r\n        if (self.state !== 'recording') {\r\n            if (!config.disableLogs) {\r\n                console.warn('Unable to pause the recording. Recording state: ', self.state);\r\n            }\r\n            return;\r\n        }\r\n\r\n        setState('paused');\r\n\r\n        mediaRecorder.pause();\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Paused recording.');\r\n        }\r\n    }\r\n\r\n    function resumeRecording() {\r\n        if (!mediaRecorder) {\r\n            warningLog();\r\n            return;\r\n        }\r\n\r\n        if (self.state !== 'paused') {\r\n            if (!config.disableLogs) {\r\n                console.warn('Unable to resume the recording. Recording state: ', self.state);\r\n            }\r\n            return;\r\n        }\r\n\r\n        setState('recording');\r\n\r\n        // not all libs have this method yet\r\n        mediaRecorder.resume();\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Resumed recording.');\r\n        }\r\n    }\r\n\r\n    function readFile(_blob) {\r\n        postMessage(new FileReaderSync().readAsDataURL(_blob));\r\n    }\r\n\r\n    function getDataURL(callback, _mediaRecorder) {\r\n        if (!callback) {\r\n            throw 'Pass a callback function over getDataURL.';\r\n        }\r\n\r\n        var blob = _mediaRecorder ? _mediaRecorder.blob : (mediaRecorder || {}).blob;\r\n\r\n        if (!blob) {\r\n            if (!config.disableLogs) {\r\n                console.warn('Blob encoder did not finish its job yet.');\r\n            }\r\n\r\n            setTimeout(function() {\r\n                getDataURL(callback, _mediaRecorder);\r\n            }, 1000);\r\n            return;\r\n        }\r\n\r\n        if (typeof Worker !== 'undefined' && !navigator.mozGetUserMedia) {\r\n            var webWorker = processInWebWorker(readFile);\r\n\r\n            webWorker.onmessage = function(event) {\r\n                callback(event.data);\r\n            };\r\n\r\n            webWorker.postMessage(blob);\r\n        } else {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(blob);\r\n            reader.onload = function(event) {\r\n                callback(event.target.result);\r\n            };\r\n        }\r\n\r\n        function processInWebWorker(_function) {\r\n            try {\r\n                var blob = URL.createObjectURL(new Blob([_function.toString(),\r\n                    'this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n                ], {\r\n                    type: 'application/javascript'\r\n                }));\r\n\r\n                var worker = new Worker(blob);\r\n                URL.revokeObjectURL(blob);\r\n                return worker;\r\n            } catch (e) {}\r\n        }\r\n    }\r\n\r\n    function handleRecordingDuration(counter) {\r\n        counter = counter || 0;\r\n\r\n        if (self.state === 'paused') {\r\n            setTimeout(function() {\r\n                handleRecordingDuration(counter);\r\n            }, 1000);\r\n            return;\r\n        }\r\n\r\n        if (self.state === 'stopped') {\r\n            return;\r\n        }\r\n\r\n        if (counter >= self.recordingDuration) {\r\n            stopRecording(self.onRecordingStopped);\r\n            return;\r\n        }\r\n\r\n        counter += 1000; // 1-second\r\n\r\n        setTimeout(function() {\r\n            handleRecordingDuration(counter);\r\n        }, 1000);\r\n    }\r\n\r\n    function setState(state) {\r\n        if (!self) {\r\n            return;\r\n        }\r\n\r\n        self.state = state;\r\n\r\n        if (typeof self.onStateChanged.call === 'function') {\r\n            self.onStateChanged.call(self, state);\r\n        } else {\r\n            self.onStateChanged(state);\r\n        }\r\n    }\r\n\r\n    var WARNING = 'It seems that recorder is destroyed or \"startRecording\" is not invoked for ' + config.type + ' recorder.';\r\n\r\n    function warningLog() {\r\n        if (config.disableLogs === true) {\r\n            return;\r\n        }\r\n\r\n        console.warn(WARNING);\r\n    }\r\n\r\n    var mediaRecorder;\r\n\r\n    var returnObject = {\r\n        /**\r\n         * This method starts the recording.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * var recorder = RecordRTC(mediaStream, {\r\n         *     type: 'video'\r\n         * });\r\n         * recorder.startRecording();\r\n         */\r\n        startRecording: startRecording,\r\n\r\n        /**\r\n         * This method stops the recording. It is strongly recommended to get \"blob\" or \"URI\" inside the callback to make sure all recorders finished their job.\r\n         * @param {function} callback - Callback to get the recorded blob.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     // use either \"this\" or \"recorder\" object; both are identical\r\n         *     video.src = this.toURL();\r\n         *     var blob = this.getBlob();\r\n         * });\r\n         */\r\n        stopRecording: stopRecording,\r\n\r\n        /**\r\n         * This method pauses the recording. You can resume recording using \"resumeRecording\" method.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo Firefox is unable to pause the recording. Fix it.\r\n         * @example\r\n         * recorder.pauseRecording();  // pause the recording\r\n         * recorder.resumeRecording(); // resume again\r\n         */\r\n        pauseRecording: pauseRecording,\r\n\r\n        /**\r\n         * This method resumes the recording.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.pauseRecording();  // first of all, pause the recording\r\n         * recorder.resumeRecording(); // now resume it\r\n         */\r\n        resumeRecording: resumeRecording,\r\n\r\n        /**\r\n         * This method initializes the recording.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo This method should be deprecated.\r\n         * @example\r\n         * recorder.initRecorder();\r\n         */\r\n        initRecorder: initRecorder,\r\n\r\n        /**\r\n         * Ask RecordRTC to auto-stop the recording after 5 minutes.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * var fiveMinutes = 5 * 1000 * 60;\r\n         * recorder.setRecordingDuration(fiveMinutes, function() {\r\n         *    var blob = this.getBlob();\r\n         *    video.src = this.toURL();\r\n         * });\r\n         * \r\n         * // or otherwise\r\n         * recorder.setRecordingDuration(fiveMinutes).onRecordingStopped(function() {\r\n         *    var blob = this.getBlob();\r\n         *    video.src = this.toURL();\r\n         * });\r\n         */\r\n        setRecordingDuration: function(recordingDuration, callback) {\r\n            if (typeof recordingDuration === 'undefined') {\r\n                throw 'recordingDuration is required.';\r\n            }\r\n\r\n            if (typeof recordingDuration !== 'number') {\r\n                throw 'recordingDuration must be a number.';\r\n            }\r\n\r\n            self.recordingDuration = recordingDuration;\r\n            self.onRecordingStopped = callback || function() {};\r\n\r\n            return {\r\n                onRecordingStopped: function(callback) {\r\n                    self.onRecordingStopped = callback;\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * This method can be used to clear/reset all the recorded data.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo Figure out the difference between \"reset\" and \"clearRecordedData\" methods.\r\n         * @example\r\n         * recorder.clearRecordedData();\r\n         */\r\n        clearRecordedData: function() {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            mediaRecorder.clearRecordedData();\r\n\r\n            if (!config.disableLogs) {\r\n                console.log('Cleared old recorded data.');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get the recorded blob. Use this method inside the \"stopRecording\" callback.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     var blob = this.getBlob();\r\n         *\r\n         *     var file = new File([blob], 'filename.webm', {\r\n         *         type: 'video/webm'\r\n         *     });\r\n         *\r\n         *     var formData = new FormData();\r\n         *     formData.append('file', file); // upload \"File\" object rather than a \"Blob\"\r\n         *     uploadToServer(formData);\r\n         * });\r\n         * @returns {Blob} Returns recorded data as \"Blob\" object.\r\n         */\r\n        getBlob: function() {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            return mediaRecorder.blob;\r\n        },\r\n\r\n        /**\r\n         * Get data-URI instead of Blob.\r\n         * @param {function} callback - Callback to get the Data-URI.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     recorder.getDataURL(function(dataURI) {\r\n         *         video.src = dataURI;\r\n         *     });\r\n         * });\r\n         */\r\n        getDataURL: getDataURL,\r\n\r\n        /**\r\n         * Get virtual/temporary URL. Usage of this URL is limited to current tab.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     video.src = this.toURL();\r\n         * });\r\n         * @returns {String} Returns a virtual/temporary URL for the recorded \"Blob\".\r\n         */\r\n        toURL: function() {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            return URL.createObjectURL(mediaRecorder.blob);\r\n        },\r\n\r\n        /**\r\n         * Get internal recording object (i.e. internal module) e.g. MutliStreamRecorder, MediaStreamRecorder, StereoAudioRecorder or WhammyRecorder etc.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * var internalRecorder = recorder.getInternalRecorder();\r\n         * if(internalRecorder instanceof MultiStreamRecorder) {\r\n         *     internalRecorder.addStreams([newAudioStream]);\r\n         *     internalRecorder.resetVideoStreams([screenStream]);\r\n         * }\r\n         * @returns {Object} Returns internal recording object.\r\n         */\r\n        getInternalRecorder: function() {\r\n            return mediaRecorder;\r\n        },\r\n\r\n        /**\r\n         * Invoke save-as dialog to save the recorded blob into your disk.\r\n         * @param {string} fileName - Set your own file name.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     this.save('file-name');\r\n         *\r\n         *     // or manually:\r\n         *     invokeSaveAsDialog(this.getBlob(), 'filename.webm');\r\n         * });\r\n         */\r\n        save: function(fileName) {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            invokeSaveAsDialog(mediaRecorder.blob, fileName);\r\n        },\r\n\r\n        /**\r\n         * This method gets a blob from indexed-DB storage.\r\n         * @param {function} callback - Callback to get the recorded blob.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.getFromDisk(function(dataURL) {\r\n         *     video.src = dataURL;\r\n         * });\r\n         */\r\n        getFromDisk: function(callback) {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            RecordRTC.getFromDisk(config.type, callback);\r\n        },\r\n\r\n        /**\r\n         * This method appends an array of webp images to the recorded video-blob. It takes an \"array\" object.\r\n         * @type {Array.<Array>}\r\n         * @param {Array} arrayOfWebPImages - Array of webp images.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo This method should be deprecated.\r\n         * @example\r\n         * var arrayOfWebPImages = [];\r\n         * arrayOfWebPImages.push({\r\n         *     duration: index,\r\n         *     image: 'data:image/webp;base64,...'\r\n         * });\r\n         * recorder.setAdvertisementArray(arrayOfWebPImages);\r\n         */\r\n        setAdvertisementArray: function(arrayOfWebPImages) {\r\n            config.advertisement = [];\r\n\r\n            var length = arrayOfWebPImages.length;\r\n            for (var i = 0; i < length; i++) {\r\n                config.advertisement.push({\r\n                    duration: i,\r\n                    image: arrayOfWebPImages[i]\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * It is equivalent to <code class=\"str\">\"recorder.getBlob()\"</code> method. Usage of \"getBlob\" is recommended, though.\r\n         * @property {Blob} blob - Recorded Blob can be accessed using this property.\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     var blob = this.blob;\r\n         *\r\n         *     // below one is recommended\r\n         *     var blob = this.getBlob();\r\n         * });\r\n         */\r\n        blob: null,\r\n\r\n        /**\r\n         * This works only with {recorderType:StereoAudioRecorder}. Use this property on \"stopRecording\" to verify the encoder's sample-rates.\r\n         * @property {number} bufferSize - Buffer-size used to encode the WAV container\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     alert('Recorder used this buffer-size: ' + this.bufferSize);\r\n         * });\r\n         */\r\n        bufferSize: 0,\r\n\r\n        /**\r\n         * This works only with {recorderType:StereoAudioRecorder}. Use this property on \"stopRecording\" to verify the encoder's sample-rates.\r\n         * @property {number} sampleRate - Sample-rates used to encode the WAV container\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     alert('Recorder used these sample-rates: ' + this.sampleRate);\r\n         * });\r\n         */\r\n        sampleRate: 0,\r\n\r\n        /**\r\n         * {recorderType:StereoAudioRecorder} returns ArrayBuffer object.\r\n         * @property {ArrayBuffer} buffer - Audio ArrayBuffer, supported only in Chrome.\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     var arrayBuffer = this.buffer;\r\n         *     alert(arrayBuffer.byteLength);\r\n         * });\r\n         */\r\n        buffer: null,\r\n\r\n        /**\r\n         * This method resets the recorder. So that you can reuse single recorder instance many times.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.reset();\r\n         * recorder.startRecording();\r\n         */\r\n        reset: function() {\r\n            if (self.state === 'recording' && !config.disableLogs) {\r\n                console.warn('Stop an active recorder.');\r\n            }\r\n\r\n            if (mediaRecorder && typeof mediaRecorder.clearRecordedData === 'function') {\r\n                mediaRecorder.clearRecordedData();\r\n            }\r\n            mediaRecorder = null;\r\n            setState('inactive');\r\n            self.blob = null;\r\n        },\r\n\r\n        /**\r\n         * This method is called whenever recorder's state changes. Use this as an \"event\".\r\n         * @property {String} state - A recorder's state can be: recording, paused, stopped or inactive.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.onStateChanged = function(state) {\r\n         *     console.log('Recorder state: ', state);\r\n         * };\r\n         */\r\n        onStateChanged: function(state) {\r\n            if (!config.disableLogs) {\r\n                console.log('Recorder state changed:', state);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * A recorder can have inactive, recording, paused or stopped states.\r\n         * @property {String} state - A recorder's state can be: recording, paused, stopped or inactive.\r\n         * @memberof RecordRTC\r\n         * @static\r\n         * @readonly\r\n         * @example\r\n         * // this looper function will keep you updated about the recorder's states.\r\n         * (function looper() {\r\n         *     document.querySelector('h1').innerHTML = 'Recorder\\'s state is: ' + recorder.state;\r\n         *     if(recorder.state === 'stopped') return; // ignore+stop\r\n         *     setTimeout(looper, 1000); // update after every 3-seconds\r\n         * })();\r\n         * recorder.startRecording();\r\n         */\r\n        state: 'inactive',\r\n\r\n        /**\r\n         * Get recorder's readonly state.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @example\r\n         * var state = recorder.getState();\r\n         * @returns {String} Returns recording state.\r\n         */\r\n        getState: function() {\r\n            return self.state;\r\n        },\r\n\r\n        /**\r\n         * Destroy RecordRTC instance. Clear all recorders and objects.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @example\r\n         * recorder.destroy();\r\n         */\r\n        destroy: function() {\r\n            var disableLogsCache = config.disableLogs;\r\n\r\n            config = {\r\n                disableLogs: true\r\n            };\r\n            self.reset();\r\n            setState('destroyed');\r\n            returnObject = self = null;\r\n\r\n            if (Storage.AudioContextConstructor) {\r\n                Storage.AudioContextConstructor.close();\r\n                Storage.AudioContextConstructor = null;\r\n            }\r\n\r\n            config.disableLogs = disableLogsCache;\r\n\r\n            if (!config.disableLogs) {\r\n                console.log('RecordRTC is destroyed.');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * RecordRTC version number\r\n         * @property {String} version - Release version number.\r\n         * @memberof RecordRTC\r\n         * @static\r\n         * @readonly\r\n         * @example\r\n         * alert(recorder.version);\r\n         */\r\n        version: '5.6.2'\r\n    };\r\n\r\n    if (!this) {\r\n        self = returnObject;\r\n        return returnObject;\r\n    }\r\n\r\n    // if someone wants to use RecordRTC with the \"new\" keyword.\r\n    for (var prop in returnObject) {\r\n        this[prop] = returnObject[prop];\r\n    }\r\n\r\n    self = this;\r\n\r\n    return returnObject;\r\n}\r\n\r\nRecordRTC.version = '5.6.2';\r\n\r\nif (typeof module !== 'undefined' /* && !!module.exports*/ ) {\r\n    module.exports = RecordRTC;\r\n}\r\n\r\nif (typeof define === 'function' && define.amd) {\r\n    define('RecordRTC', [], function() {\r\n        return RecordRTC;\r\n    });\r\n}\n\r\nRecordRTC.getFromDisk = function(type, callback) {\r\n    if (!callback) {\r\n        throw 'callback is mandatory.';\r\n    }\r\n\r\n    console.log('Getting recorded ' + (type === 'all' ? 'blobs' : type + ' blob ') + ' from disk!');\r\n    DiskStorage.Fetch(function(dataURL, _type) {\r\n        if (type !== 'all' && _type === type + 'Blob' && callback) {\r\n            callback(dataURL);\r\n        }\r\n\r\n        if (type === 'all' && callback) {\r\n            callback(dataURL, _type.replace('Blob', ''));\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * This method can be used to store recorded blobs into IndexedDB storage.\r\n * @param {object} options - {audio: Blob, video: Blob, gif: Blob}\r\n * @method\r\n * @memberof RecordRTC\r\n * @example\r\n * RecordRTC.writeToDisk({\r\n *     audio: audioBlob,\r\n *     video: videoBlob,\r\n *     gif  : gifBlob\r\n * });\r\n */\r\nRecordRTC.writeToDisk = function(options) {\r\n    console.log('Writing recorded blob(s) to disk!');\r\n    options = options || {};\r\n    if (options.audio && options.video && options.gif) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            options.video.getDataURL(function(videoDataURL) {\r\n                options.gif.getDataURL(function(gifDataURL) {\r\n                    DiskStorage.Store({\r\n                        audioBlob: audioDataURL,\r\n                        videoBlob: videoDataURL,\r\n                        gifBlob: gifDataURL\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    } else if (options.audio && options.video) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            options.video.getDataURL(function(videoDataURL) {\r\n                DiskStorage.Store({\r\n                    audioBlob: audioDataURL,\r\n                    videoBlob: videoDataURL\r\n                });\r\n            });\r\n        });\r\n    } else if (options.audio && options.gif) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            options.gif.getDataURL(function(gifDataURL) {\r\n                DiskStorage.Store({\r\n                    audioBlob: audioDataURL,\r\n                    gifBlob: gifDataURL\r\n                });\r\n            });\r\n        });\r\n    } else if (options.video && options.gif) {\r\n        options.video.getDataURL(function(videoDataURL) {\r\n            options.gif.getDataURL(function(gifDataURL) {\r\n                DiskStorage.Store({\r\n                    videoBlob: videoDataURL,\r\n                    gifBlob: gifDataURL\r\n                });\r\n            });\r\n        });\r\n    } else if (options.audio) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            DiskStorage.Store({\r\n                audioBlob: audioDataURL\r\n            });\r\n        });\r\n    } else if (options.video) {\r\n        options.video.getDataURL(function(videoDataURL) {\r\n            DiskStorage.Store({\r\n                videoBlob: videoDataURL\r\n            });\r\n        });\r\n    } else if (options.gif) {\r\n        options.gif.getDataURL(function(gifDataURL) {\r\n            DiskStorage.Store({\r\n                gifBlob: gifDataURL\r\n            });\r\n        });\r\n    }\r\n};\n\r\n// __________________________\r\n// RecordRTC-Configuration.js\r\n\r\n/**\r\n * {@link RecordRTCConfiguration} is an inner/private helper for {@link RecordRTC}.\r\n * @summary It configures the 2nd parameter passed over {@link RecordRTC} and returns a valid \"config\" object.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef RecordRTCConfiguration\r\n * @class\r\n * @example\r\n * var options = RecordRTCConfiguration(mediaStream, options);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {type:\"video\", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, getNativeBlob:true, etc.}\r\n */\r\n\r\nfunction RecordRTCConfiguration(mediaStream, config) {\r\n    if (!config.recorderType && !config.type) {\r\n        if (!!config.audio && !!config.video) {\r\n            config.type = 'video';\r\n        } else if (!!config.audio && !config.video) {\r\n            config.type = 'audio';\r\n        }\r\n    }\r\n\r\n    if (config.recorderType && !config.type) {\r\n        if (config.recorderType === WhammyRecorder || config.recorderType === CanvasRecorder || (typeof WebAssemblyRecorder !== 'undefined' && config.recorderType === WebAssemblyRecorder)) {\r\n            config.type = 'video';\r\n        } else if (config.recorderType === GifRecorder) {\r\n            config.type = 'gif';\r\n        } else if (config.recorderType === StereoAudioRecorder) {\r\n            config.type = 'audio';\r\n        } else if (config.recorderType === MediaStreamRecorder) {\r\n            if (getTracks(mediaStream, 'audio').length && getTracks(mediaStream, 'video').length) {\r\n                config.type = 'video';\r\n            } else if (!getTracks(mediaStream, 'audio').length && getTracks(mediaStream, 'video').length) {\r\n                config.type = 'video';\r\n            } else if (getTracks(mediaStream, 'audio').length && !getTracks(mediaStream, 'video').length) {\r\n                config.type = 'audio';\r\n            } else {\r\n                // config.type = 'UnKnown';\r\n            }\r\n        }\r\n    }\r\n\r\n    if (typeof MediaStreamRecorder !== 'undefined' && typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype) {\r\n        if (!config.mimeType) {\r\n            config.mimeType = 'video/webm';\r\n        }\r\n\r\n        if (!config.type) {\r\n            config.type = config.mimeType.split('/')[0];\r\n        }\r\n\r\n        if (!config.bitsPerSecond) {\r\n            // config.bitsPerSecond = 128000;\r\n        }\r\n    }\r\n\r\n    // consider default type=audio\r\n    if (!config.type) {\r\n        if (config.mimeType) {\r\n            config.type = config.mimeType.split('/')[0];\r\n        }\r\n        if (!config.type) {\r\n            config.type = 'audio';\r\n        }\r\n    }\r\n\r\n    return config;\r\n}\n\r\n// __________________\r\n// GetRecorderType.js\r\n\r\n/**\r\n * {@link GetRecorderType} is an inner/private helper for {@link RecordRTC}.\r\n * @summary It returns best recorder-type available for your browser.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef GetRecorderType\r\n * @class\r\n * @example\r\n * var RecorderType = GetRecorderType(options);\r\n * var recorder = new RecorderType(options);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {type:\"video\", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}\r\n */\r\n\r\nfunction GetRecorderType(mediaStream, config) {\r\n    var recorder;\r\n\r\n    // StereoAudioRecorder can work with all three: Edge, Firefox and Chrome\r\n    // todo: detect if it is Edge, then auto use: StereoAudioRecorder\r\n    if (isChrome || isEdge || isOpera) {\r\n        // Media Stream Recording API has not been implemented in chrome yet;\r\n        // That's why using WebAudio API to record stereo audio in WAV format\r\n        recorder = StereoAudioRecorder;\r\n    }\r\n\r\n    if (typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype && !isChrome) {\r\n        recorder = MediaStreamRecorder;\r\n    }\r\n\r\n    // video recorder (in WebM format)\r\n    if (config.type === 'video' && (isChrome || isOpera)) {\r\n        recorder = WhammyRecorder;\r\n\r\n        if (typeof WebAssemblyRecorder !== 'undefined' && typeof ReadableStream !== 'undefined') {\r\n            recorder = WebAssemblyRecorder;\r\n        }\r\n    }\r\n\r\n    // video recorder (in Gif format)\r\n    if (config.type === 'gif') {\r\n        recorder = GifRecorder;\r\n    }\r\n\r\n    // html2canvas recording!\r\n    if (config.type === 'canvas') {\r\n        recorder = CanvasRecorder;\r\n    }\r\n\r\n    if (isMediaRecorderCompatible() && recorder !== CanvasRecorder && recorder !== GifRecorder && typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype) {\r\n        if (getTracks(mediaStream, 'video').length || getTracks(mediaStream, 'audio').length) {\r\n            // audio-only recording\r\n            if (config.type === 'audio') {\r\n                if (typeof MediaRecorder.isTypeSupported === 'function' && MediaRecorder.isTypeSupported('audio/webm')) {\r\n                    recorder = MediaStreamRecorder;\r\n                }\r\n                // else recorder = StereoAudioRecorder;\r\n            } else {\r\n                // video or screen tracks\r\n                if (typeof MediaRecorder.isTypeSupported === 'function' && MediaRecorder.isTypeSupported('video/webm')) {\r\n                    recorder = MediaStreamRecorder;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (mediaStream instanceof Array && mediaStream.length) {\r\n        recorder = MultiStreamRecorder;\r\n    }\r\n\r\n    if (config.recorderType) {\r\n        recorder = config.recorderType;\r\n    }\r\n\r\n    if (!config.disableLogs && !!recorder && !!recorder.name) {\r\n        console.log('Using recorderType:', recorder.name || recorder.constructor.name);\r\n    }\r\n\r\n    if (!recorder && isSafari) {\r\n        recorder = MediaStreamRecorder;\r\n    }\r\n\r\n    return recorder;\r\n}\n\r\n// _____________\r\n// MRecordRTC.js\r\n\r\n/**\r\n * MRecordRTC runs on top of {@link RecordRTC} to bring multiple recordings in a single place, by providing simple API.\r\n * @summary MRecordRTC stands for \"Multiple-RecordRTC\".\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef MRecordRTC\r\n * @class\r\n * @example\r\n * var recorder = new MRecordRTC();\r\n * recorder.addStream(MediaStream);\r\n * recorder.mediaType = {\r\n *     audio: true, // or StereoAudioRecorder or MediaStreamRecorder\r\n *     video: true, // or WhammyRecorder or MediaStreamRecorder or WebAssemblyRecorder or CanvasRecorder\r\n *     gif: true    // or GifRecorder\r\n * };\r\n * // mimeType is optional and should be set only in advance cases.\r\n * recorder.mimeType = {\r\n *     audio: 'audio/wav',\r\n *     video: 'video/webm',\r\n *     gif:   'image/gif'\r\n * };\r\n * recorder.startRecording();\r\n * @see For further information:\r\n * @see {@link https://github.com/muaz-khan/RecordRTC/tree/master/MRecordRTC|MRecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @requires {@link RecordRTC}\r\n */\r\n\r\nfunction MRecordRTC(mediaStream) {\r\n\r\n    /**\r\n     * This method attaches MediaStream object to {@link MRecordRTC}.\r\n     * @param {MediaStream} mediaStream - A MediaStream object, either fetched using getUserMedia API, or generated using captureStreamUntilEnded or WebAudio API.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.addStream(MediaStream);\r\n     */\r\n    this.addStream = function(_mediaStream) {\r\n        if (_mediaStream) {\r\n            mediaStream = _mediaStream;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This property can be used to set the recording type e.g. audio, or video, or gif, or canvas.\r\n     * @property {object} mediaType - {audio: true, video: true, gif: true}\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * var recorder = new MRecordRTC();\r\n     * recorder.mediaType = {\r\n     *     audio: true, // TRUE or StereoAudioRecorder or MediaStreamRecorder\r\n     *     video: true, // TRUE or WhammyRecorder or MediaStreamRecorder or WebAssemblyRecorder or CanvasRecorder\r\n     *     gif  : true  // TRUE or GifRecorder\r\n     * };\r\n     */\r\n    this.mediaType = {\r\n        audio: true,\r\n        video: true\r\n    };\r\n\r\n    /**\r\n     * This method starts recording.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.startRecording();\r\n     */\r\n    this.startRecording = function() {\r\n        var mediaType = this.mediaType;\r\n        var recorderType;\r\n        var mimeType = this.mimeType || {\r\n            audio: null,\r\n            video: null,\r\n            gif: null\r\n        };\r\n\r\n        if (typeof mediaType.audio !== 'function' && isMediaRecorderCompatible() && !getTracks(mediaStream, 'audio').length) {\r\n            mediaType.audio = false;\r\n        }\r\n\r\n        if (typeof mediaType.video !== 'function' && isMediaRecorderCompatible() && !getTracks(mediaStream, 'video').length) {\r\n            mediaType.video = false;\r\n        }\r\n\r\n        if (typeof mediaType.gif !== 'function' && isMediaRecorderCompatible() && !getTracks(mediaStream, 'video').length) {\r\n            mediaType.gif = false;\r\n        }\r\n\r\n        if (!mediaType.audio && !mediaType.video && !mediaType.gif) {\r\n            throw 'MediaStream must have either audio or video tracks.';\r\n        }\r\n\r\n        if (!!mediaType.audio) {\r\n            recorderType = null;\r\n            if (typeof mediaType.audio === 'function') {\r\n                recorderType = mediaType.audio;\r\n            }\r\n\r\n            this.audioRecorder = new RecordRTC(mediaStream, {\r\n                type: 'audio',\r\n                bufferSize: this.bufferSize,\r\n                sampleRate: this.sampleRate,\r\n                numberOfAudioChannels: this.numberOfAudioChannels || 2,\r\n                disableLogs: this.disableLogs,\r\n                recorderType: recorderType,\r\n                mimeType: mimeType.audio,\r\n                timeSlice: this.timeSlice,\r\n                onTimeStamp: this.onTimeStamp\r\n            });\r\n\r\n            if (!mediaType.video) {\r\n                this.audioRecorder.startRecording();\r\n            }\r\n        }\r\n\r\n        if (!!mediaType.video) {\r\n            recorderType = null;\r\n            if (typeof mediaType.video === 'function') {\r\n                recorderType = mediaType.video;\r\n            }\r\n\r\n            var newStream = mediaStream;\r\n\r\n            if (isMediaRecorderCompatible() && !!mediaType.audio && typeof mediaType.audio === 'function') {\r\n                var videoTrack = getTracks(mediaStream, 'video')[0];\r\n\r\n                if (isFirefox) {\r\n                    newStream = new MediaStream();\r\n                    newStream.addTrack(videoTrack);\r\n\r\n                    if (recorderType && recorderType === WhammyRecorder) {\r\n                        // Firefox does NOT supports webp-encoding yet\r\n                        // But Firefox do supports WebAssemblyRecorder\r\n                        recorderType = MediaStreamRecorder;\r\n                    }\r\n                } else {\r\n                    newStream = new MediaStream();\r\n                    newStream.addTrack(videoTrack);\r\n                }\r\n            }\r\n\r\n            this.videoRecorder = new RecordRTC(newStream, {\r\n                type: 'video',\r\n                video: this.video,\r\n                canvas: this.canvas,\r\n                frameInterval: this.frameInterval || 10,\r\n                disableLogs: this.disableLogs,\r\n                recorderType: recorderType,\r\n                mimeType: mimeType.video,\r\n                timeSlice: this.timeSlice,\r\n                onTimeStamp: this.onTimeStamp,\r\n                workerPath: this.workerPath,\r\n                webAssemblyPath: this.webAssemblyPath,\r\n                frameRate: this.frameRate, // used by WebAssemblyRecorder; values: usually 30; accepts any.\r\n                bitrate: this.bitrate // used by WebAssemblyRecorder; values: 0 to 1000+\r\n            });\r\n\r\n            if (!mediaType.audio) {\r\n                this.videoRecorder.startRecording();\r\n            }\r\n        }\r\n\r\n        if (!!mediaType.audio && !!mediaType.video) {\r\n            var self = this;\r\n\r\n            var isSingleRecorder = isMediaRecorderCompatible() === true;\r\n\r\n            if (mediaType.audio instanceof StereoAudioRecorder && !!mediaType.video) {\r\n                isSingleRecorder = false;\r\n            } else if (mediaType.audio !== true && mediaType.video !== true && mediaType.audio !== mediaType.video) {\r\n                isSingleRecorder = false;\r\n            }\r\n\r\n            if (isSingleRecorder === true) {\r\n                self.audioRecorder = null;\r\n                self.videoRecorder.startRecording();\r\n            } else {\r\n                self.videoRecorder.initRecorder(function() {\r\n                    self.audioRecorder.initRecorder(function() {\r\n                        // Both recorders are ready to record things accurately\r\n                        self.videoRecorder.startRecording();\r\n                        self.audioRecorder.startRecording();\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n        if (!!mediaType.gif) {\r\n            recorderType = null;\r\n            if (typeof mediaType.gif === 'function') {\r\n                recorderType = mediaType.gif;\r\n            }\r\n            this.gifRecorder = new RecordRTC(mediaStream, {\r\n                type: 'gif',\r\n                frameRate: this.frameRate || 200,\r\n                quality: this.quality || 10,\r\n                disableLogs: this.disableLogs,\r\n                recorderType: recorderType,\r\n                mimeType: mimeType.gif\r\n            });\r\n            this.gifRecorder.startRecording();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method stops recording.\r\n     * @param {function} callback - Callback function is invoked when all encoders finished their jobs.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.stopRecording(function(recording){\r\n     *     var audioBlob = recording.audio;\r\n     *     var videoBlob = recording.video;\r\n     *     var gifBlob   = recording.gif;\r\n     * });\r\n     */\r\n    this.stopRecording = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.stopRecording(function(blobURL) {\r\n                callback(blobURL, 'audio');\r\n            });\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.stopRecording(function(blobURL) {\r\n                callback(blobURL, 'video');\r\n            });\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.stopRecording(function(blobURL) {\r\n                callback(blobURL, 'gif');\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method pauses recording.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.pauseRecording();\r\n     */\r\n    this.pauseRecording = function() {\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.pauseRecording();\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.pauseRecording();\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.pauseRecording();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes recording.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.resumeRecording();\r\n     */\r\n    this.resumeRecording = function() {\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.resumeRecording();\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.resumeRecording();\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.resumeRecording();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method can be used to manually get all recorded blobs.\r\n     * @param {function} callback - All recorded blobs are passed back to the \"callback\" function.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.getBlob(function(recording){\r\n     *     var audioBlob = recording.audio;\r\n     *     var videoBlob = recording.video;\r\n     *     var gifBlob   = recording.gif;\r\n     * });\r\n     * // or\r\n     * var audioBlob = recorder.getBlob().audio;\r\n     * var videoBlob = recorder.getBlob().video;\r\n     */\r\n    this.getBlob = function(callback) {\r\n        var output = {};\r\n\r\n        if (this.audioRecorder) {\r\n            output.audio = this.audioRecorder.getBlob();\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            output.video = this.videoRecorder.getBlob();\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            output.gif = this.gifRecorder.getBlob();\r\n        }\r\n\r\n        if (callback) {\r\n            callback(output);\r\n        }\r\n\r\n        return output;\r\n    };\r\n\r\n    /**\r\n     * Destroy all recorder instances.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.destroy();\r\n     */\r\n    this.destroy = function() {\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.destroy();\r\n            this.audioRecorder = null;\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.destroy();\r\n            this.videoRecorder = null;\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.destroy();\r\n            this.gifRecorder = null;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method can be used to manually get all recorded blobs' DataURLs.\r\n     * @param {function} callback - All recorded blobs' DataURLs are passed back to the \"callback\" function.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.getDataURL(function(recording){\r\n     *     var audioDataURL = recording.audio;\r\n     *     var videoDataURL = recording.video;\r\n     *     var gifDataURL   = recording.gif;\r\n     * });\r\n     */\r\n    this.getDataURL = function(callback) {\r\n        this.getBlob(function(blob) {\r\n            if (blob.audio && blob.video) {\r\n                getDataURL(blob.audio, function(_audioDataURL) {\r\n                    getDataURL(blob.video, function(_videoDataURL) {\r\n                        callback({\r\n                            audio: _audioDataURL,\r\n                            video: _videoDataURL\r\n                        });\r\n                    });\r\n                });\r\n            } else if (blob.audio) {\r\n                getDataURL(blob.audio, function(_audioDataURL) {\r\n                    callback({\r\n                        audio: _audioDataURL\r\n                    });\r\n                });\r\n            } else if (blob.video) {\r\n                getDataURL(blob.video, function(_videoDataURL) {\r\n                    callback({\r\n                        video: _videoDataURL\r\n                    });\r\n                });\r\n            }\r\n        });\r\n\r\n        function getDataURL(blob, callback00) {\r\n            if (typeof Worker !== 'undefined') {\r\n                var webWorker = processInWebWorker(function readFile(_blob) {\r\n                    postMessage(new FileReaderSync().readAsDataURL(_blob));\r\n                });\r\n\r\n                webWorker.onmessage = function(event) {\r\n                    callback00(event.data);\r\n                };\r\n\r\n                webWorker.postMessage(blob);\r\n            } else {\r\n                var reader = new FileReader();\r\n                reader.readAsDataURL(blob);\r\n                reader.onload = function(event) {\r\n                    callback00(event.target.result);\r\n                };\r\n            }\r\n        }\r\n\r\n        function processInWebWorker(_function) {\r\n            var blob = URL.createObjectURL(new Blob([_function.toString(),\r\n                'this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n            ], {\r\n                type: 'application/javascript'\r\n            }));\r\n\r\n            var worker = new Worker(blob);\r\n            var url;\r\n            if (typeof URL !== 'undefined') {\r\n                url = URL;\r\n            } else if (typeof webkitURL !== 'undefined') {\r\n                url = webkitURL;\r\n            } else {\r\n                throw 'Neither URL nor webkitURL detected.';\r\n            }\r\n            url.revokeObjectURL(blob);\r\n            return worker;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method can be used to ask {@link MRecordRTC} to write all recorded blobs into IndexedDB storage.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.writeToDisk();\r\n     */\r\n    this.writeToDisk = function() {\r\n        RecordRTC.writeToDisk({\r\n            audio: this.audioRecorder,\r\n            video: this.videoRecorder,\r\n            gif: this.gifRecorder\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method can be used to invoke a save-as dialog for all recorded blobs.\r\n     * @param {object} args - {audio: 'audio-name', video: 'video-name', gif: 'gif-name'}\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.save({\r\n     *     audio: 'audio-file-name',\r\n     *     video: 'video-file-name',\r\n     *     gif  : 'gif-file-name'\r\n     * });\r\n     */\r\n    this.save = function(args) {\r\n        args = args || {\r\n            audio: true,\r\n            video: true,\r\n            gif: true\r\n        };\r\n\r\n        if (!!args.audio && this.audioRecorder) {\r\n            this.audioRecorder.save(typeof args.audio === 'string' ? args.audio : '');\r\n        }\r\n\r\n        if (!!args.video && this.videoRecorder) {\r\n            this.videoRecorder.save(typeof args.video === 'string' ? args.video : '');\r\n        }\r\n        if (!!args.gif && this.gifRecorder) {\r\n            this.gifRecorder.save(typeof args.gif === 'string' ? args.gif : '');\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * This method can be used to get all recorded blobs from IndexedDB storage.\r\n * @param {string} type - 'all' or 'audio' or 'video' or 'gif'\r\n * @param {function} callback - Callback function to get all stored blobs.\r\n * @method\r\n * @memberof MRecordRTC\r\n * @example\r\n * MRecordRTC.getFromDisk('all', function(dataURL, type){\r\n *     if(type === 'audio') { }\r\n *     if(type === 'video') { }\r\n *     if(type === 'gif')   { }\r\n * });\r\n */\r\nMRecordRTC.getFromDisk = RecordRTC.getFromDisk;\r\n\r\n/**\r\n * This method can be used to store recorded blobs into IndexedDB storage.\r\n * @param {object} options - {audio: Blob, video: Blob, gif: Blob}\r\n * @method\r\n * @memberof MRecordRTC\r\n * @example\r\n * MRecordRTC.writeToDisk({\r\n *     audio: audioBlob,\r\n *     video: videoBlob,\r\n *     gif  : gifBlob\r\n * });\r\n */\r\nMRecordRTC.writeToDisk = RecordRTC.writeToDisk;\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.MRecordRTC = MRecordRTC;\r\n}\n\r\nvar browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\r\n\r\n(function(that) {\r\n    if (!that) {\r\n        return;\r\n    }\r\n\r\n    if (typeof window !== 'undefined') {\r\n        return;\r\n    }\r\n\r\n    if (typeof global === 'undefined') {\r\n        return;\r\n    }\r\n\r\n    global.navigator = {\r\n        userAgent: browserFakeUserAgent,\r\n        getUserMedia: function() {}\r\n    };\r\n\r\n    if (!global.console) {\r\n        global.console = {};\r\n    }\r\n\r\n    if (typeof global.console.log === 'undefined' || typeof global.console.error === 'undefined') {\r\n        global.console.error = global.console.log = global.console.log || function() {\r\n            console.log(arguments);\r\n        };\r\n    }\r\n\r\n    if (typeof document === 'undefined') {\r\n        /*global document:true */\r\n        that.document = {\r\n            documentElement: {\r\n                appendChild: function() {\r\n                    return '';\r\n                }\r\n            }\r\n        };\r\n\r\n        document.createElement = document.captureStream = document.mozCaptureStream = function() {\r\n            var obj = {\r\n                getContext: function() {\r\n                    return obj;\r\n                },\r\n                play: function() {},\r\n                pause: function() {},\r\n                drawImage: function() {},\r\n                toDataURL: function() {\r\n                    return '';\r\n                },\r\n                style: {}\r\n            };\r\n            return obj;\r\n        };\r\n\r\n        that.HTMLVideoElement = function() {};\r\n    }\r\n\r\n    if (typeof location === 'undefined') {\r\n        /*global location:true */\r\n        that.location = {\r\n            protocol: 'file:',\r\n            href: '',\r\n            hash: ''\r\n        };\r\n    }\r\n\r\n    if (typeof screen === 'undefined') {\r\n        /*global screen:true */\r\n        that.screen = {\r\n            width: 0,\r\n            height: 0\r\n        };\r\n    }\r\n\r\n    if (typeof URL === 'undefined') {\r\n        /*global screen:true */\r\n        that.URL = {\r\n            createObjectURL: function() {\r\n                return '';\r\n            },\r\n            revokeObjectURL: function() {\r\n                return '';\r\n            }\r\n        };\r\n    }\r\n\r\n    /*global window:true */\r\n    that.window = global;\r\n})(typeof global !== 'undefined' ? global : null);\n\r\n// _____________________________\r\n// Cross-Browser-Declarations.js\r\n\r\n// animation-frame used in WebM recording\r\n\r\n/*jshint -W079 */\r\nvar requestAnimationFrame = window.requestAnimationFrame;\r\nif (typeof requestAnimationFrame === 'undefined') {\r\n    if (typeof webkitRequestAnimationFrame !== 'undefined') {\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = webkitRequestAnimationFrame;\r\n    } else if (typeof mozRequestAnimationFrame !== 'undefined') {\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = mozRequestAnimationFrame;\r\n    } else if (typeof msRequestAnimationFrame !== 'undefined') {\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = msRequestAnimationFrame;\r\n    } else if (typeof requestAnimationFrame === 'undefined') {\r\n        // via: https://gist.github.com/paulirish/1579671\r\n        var lastTime = 0;\r\n\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = function(callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = setTimeout(function() {\r\n                callback(currTime + timeToCall);\r\n            }, timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    }\r\n}\r\n\r\n/*jshint -W079 */\r\nvar cancelAnimationFrame = window.cancelAnimationFrame;\r\nif (typeof cancelAnimationFrame === 'undefined') {\r\n    if (typeof webkitCancelAnimationFrame !== 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = webkitCancelAnimationFrame;\r\n    } else if (typeof mozCancelAnimationFrame !== 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = mozCancelAnimationFrame;\r\n    } else if (typeof msCancelAnimationFrame !== 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = msCancelAnimationFrame;\r\n    } else if (typeof cancelAnimationFrame === 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = function(id) {\r\n            clearTimeout(id);\r\n        };\r\n    }\r\n}\r\n\r\n// WebAudio API representer\r\nvar AudioContext = window.AudioContext;\r\n\r\nif (typeof AudioContext === 'undefined') {\r\n    if (typeof webkitAudioContext !== 'undefined') {\r\n        /*global AudioContext:true */\r\n        AudioContext = webkitAudioContext;\r\n    }\r\n\r\n    if (typeof mozAudioContext !== 'undefined') {\r\n        /*global AudioContext:true */\r\n        AudioContext = mozAudioContext;\r\n    }\r\n}\r\n\r\n/*jshint -W079 */\r\nvar URL = window.URL;\r\n\r\nif (typeof URL === 'undefined' && typeof webkitURL !== 'undefined') {\r\n    /*global URL:true */\r\n    URL = webkitURL;\r\n}\r\n\r\nif (typeof navigator !== 'undefined' && typeof navigator.getUserMedia === 'undefined') { // maybe window.navigator?\r\n    if (typeof navigator.webkitGetUserMedia !== 'undefined') {\r\n        navigator.getUserMedia = navigator.webkitGetUserMedia;\r\n    }\r\n\r\n    if (typeof navigator.mozGetUserMedia !== 'undefined') {\r\n        navigator.getUserMedia = navigator.mozGetUserMedia;\r\n    }\r\n}\r\n\r\nvar isEdge = navigator.userAgent.indexOf('Edge') !== -1 && (!!navigator.msSaveBlob || !!navigator.msSaveOrOpenBlob);\r\nvar isOpera = !!window.opera || navigator.userAgent.indexOf('OPR/') !== -1;\r\nvar isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1 && ('netscape' in window) && / rv:/.test(navigator.userAgent);\r\nvar isChrome = (!isOpera && !isEdge && !!navigator.webkitGetUserMedia) || isElectron() || navigator.userAgent.toLowerCase().indexOf('chrome/') !== -1;\r\n\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\n\r\nif (isSafari && !isChrome && navigator.userAgent.indexOf('CriOS') !== -1) {\r\n    isSafari = false;\r\n    isChrome = true;\r\n}\r\n\r\nvar MediaStream = window.MediaStream;\r\n\r\nif (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\r\n    MediaStream = webkitMediaStream;\r\n}\r\n\r\n/*global MediaStream:true */\r\nif (typeof MediaStream !== 'undefined') {\r\n    // override \"stop\" method for all browsers\r\n    if (typeof MediaStream.prototype.stop === 'undefined') {\r\n        MediaStream.prototype.stop = function() {\r\n            this.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n        };\r\n    }\r\n}\r\n\r\n// below function via: http://goo.gl/B3ae8c\r\n/**\r\n * Return human-readable file size.\r\n * @param {number} bytes - Pass bytes and get formatted string.\r\n * @returns {string} - formatted string\r\n * @example\r\n * bytesToSize(1024*1024*5) === '5 GB'\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\nfunction bytesToSize(bytes) {\r\n    var k = 1000;\r\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n    if (bytes === 0) {\r\n        return '0 Bytes';\r\n    }\r\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(k)), 10);\r\n    return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i];\r\n}\r\n\r\n/**\r\n * @param {Blob} file - File or Blob object. This parameter is required.\r\n * @param {string} fileName - Optional file name e.g. \"Recorded-Video.webm\"\r\n * @example\r\n * invokeSaveAsDialog(blob or file, [optional] fileName);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\nfunction invokeSaveAsDialog(file, fileName) {\r\n    if (!file) {\r\n        throw 'Blob object is required.';\r\n    }\r\n\r\n    if (!file.type) {\r\n        try {\r\n            file.type = 'video/webm';\r\n        } catch (e) {}\r\n    }\r\n\r\n    var fileExtension = (file.type || 'video/webm').split('/')[1];\r\n    if (fileExtension.indexOf(';') !== -1) {\r\n        // extended mimetype, e.g. 'video/webm;codecs=vp8,opus'\r\n        fileExtension = fileExtension.split(';')[0];\r\n    }\r\n    if (fileName && fileName.indexOf('.') !== -1) {\r\n        var splitted = fileName.split('.');\r\n        fileName = splitted[0];\r\n        fileExtension = splitted[1];\r\n    }\r\n\r\n    var fileFullName = (fileName || (Math.round(Math.random() * 9999999999) + 888888888)) + '.' + fileExtension;\r\n\r\n    if (typeof navigator.msSaveOrOpenBlob !== 'undefined') {\r\n        return navigator.msSaveOrOpenBlob(file, fileFullName);\r\n    } else if (typeof navigator.msSaveBlob !== 'undefined') {\r\n        return navigator.msSaveBlob(file, fileFullName);\r\n    }\r\n\r\n    var hyperlink = document.createElement('a');\r\n    hyperlink.href = URL.createObjectURL(file);\r\n    hyperlink.download = fileFullName;\r\n\r\n    hyperlink.style = 'display:none;opacity:0;color:transparent;';\r\n    (document.body || document.documentElement).appendChild(hyperlink);\r\n\r\n    if (typeof hyperlink.click === 'function') {\r\n        hyperlink.click();\r\n    } else {\r\n        hyperlink.target = '_blank';\r\n        hyperlink.dispatchEvent(new MouseEvent('click', {\r\n            view: window,\r\n            bubbles: true,\r\n            cancelable: true\r\n        }));\r\n    }\r\n\r\n    URL.revokeObjectURL(hyperlink.href);\r\n}\r\n\r\n/**\r\n * from: https://github.com/cheton/is-electron/blob/master/index.js\r\n **/\r\nfunction isElectron() {\r\n    // Renderer process\r\n    if (typeof window !== 'undefined' && typeof window.process === 'object' && window.process.type === 'renderer') {\r\n        return true;\r\n    }\r\n\r\n    // Main process\r\n    if (typeof process !== 'undefined' && typeof process.versions === 'object' && !!process.versions.electron) {\r\n        return true;\r\n    }\r\n\r\n    // Detect the user agent when the `nodeIntegration` option is set to true\r\n    if (typeof navigator === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent.indexOf('Electron') >= 0) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction getTracks(stream, kind) {\r\n    if (!stream || !stream.getTracks) {\r\n        return [];\r\n    }\r\n\r\n    return stream.getTracks().filter(function(t) {\r\n        return t.kind === (kind || 'audio');\r\n    });\r\n}\r\n\r\nfunction setSrcObject(stream, element) {\r\n    if ('srcObject' in element) {\r\n        element.srcObject = stream;\r\n    } else if ('mozSrcObject' in element) {\r\n        element.mozSrcObject = stream;\r\n    } else {\r\n        element.srcObject = stream;\r\n    }\r\n}\r\n\r\n/**\r\n * @param {Blob} file - File or Blob object.\r\n * @param {function} callback - Callback function.\r\n * @example\r\n * getSeekableBlob(blob or file, callback);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\nfunction getSeekableBlob(inputBlob, callback) {\r\n    // EBML.js copyrights goes to: https://github.com/legokichi/ts-ebml\r\n    if (typeof EBML === 'undefined') {\r\n        throw new Error('Please link: https://www.webrtc-experiment.com/EBML.js');\r\n    }\r\n\r\n    var reader = new EBML.Reader();\r\n    var decoder = new EBML.Decoder();\r\n    var tools = EBML.tools;\r\n\r\n    var fileReader = new FileReader();\r\n    fileReader.onload = function(e) {\r\n        var ebmlElms = decoder.decode(this.result);\r\n        ebmlElms.forEach(function(element) {\r\n            reader.read(element);\r\n        });\r\n        reader.stop();\r\n        var refinedMetadataBuf = tools.makeMetadataSeekable(reader.metadatas, reader.duration, reader.cues);\r\n        var body = this.result.slice(reader.metadataSize);\r\n        var newBlob = new Blob([refinedMetadataBuf, body], {\r\n            type: 'video/webm'\r\n        });\r\n\r\n        callback(newBlob);\r\n    };\r\n    fileReader.readAsArrayBuffer(inputBlob);\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.invokeSaveAsDialog = invokeSaveAsDialog;\r\n    RecordRTC.getTracks = getTracks;\r\n    RecordRTC.getSeekableBlob = getSeekableBlob;\r\n    RecordRTC.bytesToSize = bytesToSize;\r\n    RecordRTC.isElectron = isElectron;\r\n}\r\n\r\n// __________ (used to handle stuff like http://goo.gl/xmE5eg) issue #129\r\n// Storage.js\r\n\r\n/**\r\n * Storage is a standalone object used by {@link RecordRTC} to store reusable objects e.g. \"new AudioContext\".\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @example\r\n * Storage.AudioContext === webkitAudioContext\r\n * @property {webkitAudioContext} AudioContext - Keeps a reference to AudioContext object.\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\n\r\nvar Storage = {};\r\n\r\nif (typeof AudioContext !== 'undefined') {\r\n    Storage.AudioContext = AudioContext;\r\n} else if (typeof webkitAudioContext !== 'undefined') {\r\n    Storage.AudioContext = webkitAudioContext;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.Storage = Storage;\r\n}\n\r\nfunction isMediaRecorderCompatible() {\r\n    if (isFirefox || isSafari || isEdge) {\r\n        return true;\r\n    }\r\n\r\n    var nVer = navigator.appVersion;\r\n    var nAgt = navigator.userAgent;\r\n    var fullVersion = '' + parseFloat(navigator.appVersion);\r\n    var majorVersion = parseInt(navigator.appVersion, 10);\r\n    var nameOffset, verOffset, ix;\r\n\r\n    if (isChrome || isOpera) {\r\n        verOffset = nAgt.indexOf('Chrome');\r\n        fullVersion = nAgt.substring(verOffset + 7);\r\n    }\r\n\r\n    // trim the fullVersion string at semicolon/space if present\r\n    if ((ix = fullVersion.indexOf(';')) !== -1) {\r\n        fullVersion = fullVersion.substring(0, ix);\r\n    }\r\n\r\n    if ((ix = fullVersion.indexOf(' ')) !== -1) {\r\n        fullVersion = fullVersion.substring(0, ix);\r\n    }\r\n\r\n    majorVersion = parseInt('' + fullVersion, 10);\r\n\r\n    if (isNaN(majorVersion)) {\r\n        fullVersion = '' + parseFloat(navigator.appVersion);\r\n        majorVersion = parseInt(navigator.appVersion, 10);\r\n    }\r\n\r\n    return majorVersion >= 49;\r\n}\n\r\n// ______________________\r\n// MediaStreamRecorder.js\r\n\r\n/**\r\n * MediaStreamRecorder is an abstraction layer for {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}. It is used by {@link RecordRTC} to record MediaStream(s) in both Chrome and Firefox.\r\n * @summary Runs top over {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://github.com/muaz-khan|Muaz Khan}\r\n * @typedef MediaStreamRecorder\r\n * @class\r\n * @example\r\n * var config = {\r\n *     mimeType: 'video/webm', // vp8, vp9, h264, mkv, opus/vorbis\r\n *     audioBitsPerSecond : 256 * 8 * 1024,\r\n *     videoBitsPerSecond : 256 * 8 * 1024,\r\n *     bitsPerSecond: 256 * 8 * 1024,  // if this is provided, skip above two\r\n *     checkForInactiveTracks: true,\r\n *     timeSlice: 1000, // concatenate intervals based blobs\r\n *     ondataavailable: function() {} // get intervals based blobs\r\n * }\r\n * var recorder = new MediaStreamRecorder(mediaStream, config);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n *\r\n *     // or\r\n *     var blob = recorder.blob;\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {disableLogs:true, initCallback: function, mimeType: \"video/webm\", timeSlice: 1000}\r\n * @throws Will throw an error if first argument \"MediaStream\" is missing. Also throws error if \"MediaRecorder API\" are not supported by the browser.\r\n */\r\n\r\nfunction MediaStreamRecorder(mediaStream, config) {\r\n    var self = this;\r\n\r\n    if (typeof mediaStream === 'undefined') {\r\n        throw 'First argument \"MediaStream\" is required.';\r\n    }\r\n\r\n    if (typeof MediaRecorder === 'undefined') {\r\n        throw 'Your browser does not support the Media Recorder API. Please try other modules e.g. WhammyRecorder or StereoAudioRecorder.';\r\n    }\r\n\r\n    config = config || {\r\n        // bitsPerSecond: 256 * 8 * 1024,\r\n        mimeType: 'video/webm'\r\n    };\r\n\r\n    if (config.type === 'audio') {\r\n        if (getTracks(mediaStream, 'video').length && getTracks(mediaStream, 'audio').length) {\r\n            var stream;\r\n            if (!!navigator.mozGetUserMedia) {\r\n                stream = new MediaStream();\r\n                stream.addTrack(getTracks(mediaStream, 'audio')[0]);\r\n            } else {\r\n                // webkitMediaStream\r\n                stream = new MediaStream(getTracks(mediaStream, 'audio'));\r\n            }\r\n            mediaStream = stream;\r\n        }\r\n\r\n        if (!config.mimeType || config.mimeType.toString().toLowerCase().indexOf('audio') === -1) {\r\n            config.mimeType = isChrome ? 'audio/webm' : 'audio/ogg';\r\n        }\r\n\r\n        if (config.mimeType && config.mimeType.toString().toLowerCase() !== 'audio/ogg' && !!navigator.mozGetUserMedia) {\r\n            // forcing better codecs on Firefox (via #166)\r\n            config.mimeType = 'audio/ogg';\r\n        }\r\n    }\r\n\r\n    var arrayOfBlobs = [];\r\n\r\n    /**\r\n     * This method returns array of blobs. Use only with \"timeSlice\". Its useful to preview recording anytime, without using the \"stop\" method.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * var arrayOfBlobs = recorder.getArrayOfBlobs();\r\n     * @returns {Array} Returns array of recorded blobs.\r\n     */\r\n    this.getArrayOfBlobs = function() {\r\n        return arrayOfBlobs;\r\n    };\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        // set defaults\r\n        self.blob = null;\r\n        self.clearRecordedData();\r\n        self.timestamps = [];\r\n        allStates = [];\r\n        arrayOfBlobs = [];\r\n\r\n        var recorderHints = config;\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Passing following config over MediaRecorder API.', recorderHints);\r\n        }\r\n\r\n        if (mediaRecorder) {\r\n            // mandatory to make sure Firefox doesn't fails to record streams 3-4 times without reloading the page.\r\n            mediaRecorder = null;\r\n        }\r\n\r\n        if (isChrome && !isMediaRecorderCompatible()) {\r\n            // to support video-only recording on stable\r\n            recorderHints = 'video/vp8';\r\n        }\r\n\r\n        if (typeof MediaRecorder.isTypeSupported === 'function' && recorderHints.mimeType) {\r\n            if (!MediaRecorder.isTypeSupported(recorderHints.mimeType)) {\r\n                if (!config.disableLogs) {\r\n                    console.warn('MediaRecorder API seems unable to record mimeType:', recorderHints.mimeType);\r\n                }\r\n\r\n                recorderHints.mimeType = config.type === 'audio' ? 'audio/webm' : 'video/webm';\r\n            }\r\n        }\r\n\r\n        // using MediaRecorder API here\r\n        try {\r\n            mediaRecorder = new MediaRecorder(mediaStream, recorderHints);\r\n\r\n            // reset\r\n            config.mimeType = recorderHints.mimeType;\r\n        } catch (e) {\r\n            // chrome-based fallback\r\n            mediaRecorder = new MediaRecorder(mediaStream);\r\n        }\r\n\r\n        // old hack?\r\n        if (recorderHints.mimeType && !MediaRecorder.isTypeSupported && 'canRecordMimeType' in mediaRecorder && mediaRecorder.canRecordMimeType(recorderHints.mimeType) === false) {\r\n            if (!config.disableLogs) {\r\n                console.warn('MediaRecorder API seems unable to record mimeType:', recorderHints.mimeType);\r\n            }\r\n        }\r\n\r\n        // Dispatching OnDataAvailable Handler\r\n        mediaRecorder.ondataavailable = function(e) {\r\n            if (e.data) {\r\n                allStates.push('ondataavailable: ' + bytesToSize(e.data.size));\r\n            }\r\n\r\n            if (typeof config.timeSlice === 'number') {\r\n                if (e.data && e.data.size) {\r\n                    arrayOfBlobs.push(e.data);\r\n                    updateTimeStamp();\r\n\r\n                    if (typeof config.ondataavailable === 'function') {\r\n                        // intervals based blobs\r\n                        var blob = config.getNativeBlob ? e.data : new Blob([e.data], {\r\n                            type: getMimeType(recorderHints)\r\n                        });\r\n                        config.ondataavailable(blob);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (!e.data || !e.data.size || e.data.size < 100 || self.blob) {\r\n                // make sure that stopRecording always getting fired\r\n                // even if there is invalid data\r\n                if (self.recordingCallback) {\r\n                    self.recordingCallback(new Blob([], {\r\n                        type: getMimeType(recorderHints)\r\n                    }));\r\n                    self.recordingCallback = null;\r\n                }\r\n                return;\r\n            }\r\n\r\n            self.blob = config.getNativeBlob ? e.data : new Blob([e.data], {\r\n                type: getMimeType(recorderHints)\r\n            });\r\n\r\n            if (self.recordingCallback) {\r\n                self.recordingCallback(self.blob);\r\n                self.recordingCallback = null;\r\n            }\r\n        };\r\n\r\n        mediaRecorder.onstart = function() {\r\n            allStates.push('started');\r\n        };\r\n\r\n        mediaRecorder.onpause = function() {\r\n            allStates.push('paused');\r\n        };\r\n\r\n        mediaRecorder.onresume = function() {\r\n            allStates.push('resumed');\r\n        };\r\n\r\n        mediaRecorder.onstop = function() {\r\n            allStates.push('stopped');\r\n        };\r\n\r\n        mediaRecorder.onerror = function(error) {\r\n            if (!error) {\r\n                return;\r\n            }\r\n\r\n            if (!error.name) {\r\n                error.name = 'UnknownError';\r\n            }\r\n\r\n            allStates.push('error: ' + error);\r\n\r\n            if (!config.disableLogs) {\r\n                // via: https://w3c.github.io/mediacapture-record/MediaRecorder.html#exception-summary\r\n                if (error.name.toString().toLowerCase().indexOf('invalidstate') !== -1) {\r\n                    console.error('The MediaRecorder is not in a state in which the proposed operation is allowed to be executed.', error);\r\n                } else if (error.name.toString().toLowerCase().indexOf('notsupported') !== -1) {\r\n                    console.error('MIME type (', recorderHints.mimeType, ') is not supported.', error);\r\n                } else if (error.name.toString().toLowerCase().indexOf('security') !== -1) {\r\n                    console.error('MediaRecorder security error', error);\r\n                }\r\n\r\n                // older code below\r\n                else if (error.name === 'OutOfMemory') {\r\n                    console.error('The UA has exhaused the available memory. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\r\n                } else if (error.name === 'IllegalStreamModification') {\r\n                    console.error('A modification to the stream has occurred that makes it impossible to continue recording. An example would be the addition of a Track while recording is occurring. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\r\n                } else if (error.name === 'OtherRecordingError') {\r\n                    console.error('Used for an fatal error other than those listed above. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\r\n                } else if (error.name === 'GenericError') {\r\n                    console.error('The UA cannot provide the codec or recording option that has been requested.', error);\r\n                } else {\r\n                    console.error('MediaRecorder Error', error);\r\n                }\r\n            }\r\n\r\n            (function(looper) {\r\n                if (!self.manuallyStopped && mediaRecorder && mediaRecorder.state === 'inactive') {\r\n                    delete config.timeslice;\r\n\r\n                    // 10 minutes, enough?\r\n                    mediaRecorder.start(10 * 60 * 1000);\r\n                    return;\r\n                }\r\n\r\n                setTimeout(looper, 1000);\r\n            })();\r\n\r\n            if (mediaRecorder.state !== 'inactive' && mediaRecorder.state !== 'stopped') {\r\n                mediaRecorder.stop();\r\n            }\r\n        };\r\n\r\n        if (typeof config.timeSlice === 'number') {\r\n            updateTimeStamp();\r\n            mediaRecorder.start(config.timeSlice);\r\n        } else {\r\n            // default is 60 minutes; enough?\r\n            // use config => {timeSlice: 1000} otherwise\r\n\r\n            mediaRecorder.start(3.6e+6);\r\n        }\r\n\r\n        if (config.initCallback) {\r\n            config.initCallback(); // old code\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @property {Array} timestamps - Array of time stamps\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * console.log(recorder.timestamps);\r\n     */\r\n    this.timestamps = [];\r\n\r\n    function updateTimeStamp() {\r\n        self.timestamps.push(new Date().getTime());\r\n\r\n        if (typeof config.onTimeStamp === 'function') {\r\n            config.onTimeStamp(self.timestamps[self.timestamps.length - 1], self.timestamps);\r\n        }\r\n    }\r\n\r\n    function getMimeType(secondObject) {\r\n        if (mediaRecorder && mediaRecorder.mimeType) {\r\n            return mediaRecorder.mimeType;\r\n        }\r\n\r\n        return secondObject.mimeType || 'video/webm';\r\n    }\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        self.manuallyStopped = true; // used inside the mediaRecorder.onerror\r\n\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        this.recordingCallback = callback;\r\n\r\n        if (mediaRecorder.state === 'recording') {\r\n            mediaRecorder.stop();\r\n        }\r\n\r\n        if (typeof config.timeSlice === 'number') {\r\n            setTimeout(function() {\r\n                self.blob = new Blob(arrayOfBlobs, {\r\n                    type: getMimeType(config)\r\n                });\r\n\r\n                self.recordingCallback(self.blob);\r\n            }, 100);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        if (mediaRecorder.state === 'recording') {\r\n            mediaRecorder.pause();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        if (mediaRecorder.state === 'paused') {\r\n            mediaRecorder.resume();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (mediaRecorder && mediaRecorder.state === 'recording') {\r\n            self.stop(clearRecordedDataCB);\r\n        }\r\n\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        arrayOfBlobs = [];\r\n        mediaRecorder = null;\r\n        self.timestamps = [];\r\n    }\r\n\r\n    // Reference to \"MediaRecorder\" object\r\n    var mediaRecorder;\r\n\r\n    /**\r\n     * Access to native MediaRecorder API\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @instance\r\n     * @example\r\n     * var internal = recorder.getInternalRecorder();\r\n     * internal.ondataavailable = function() {}; // override\r\n     * internal.stream, internal.onpause, internal.onstop, etc.\r\n     * @returns {Object} Returns internal recording object.\r\n     */\r\n    this.getInternalRecorder = function() {\r\n        return mediaRecorder;\r\n    };\r\n\r\n    function isMediaStreamActive() {\r\n        if ('active' in mediaStream) {\r\n            if (!mediaStream.active) {\r\n                return false;\r\n            }\r\n        } else if ('ended' in mediaStream) { // old hack\r\n            if (mediaStream.ended) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @property {Blob} blob - Recorded data as \"Blob\" object.\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.stop(function() {\r\n     *     var blob = recorder.blob;\r\n     * });\r\n     */\r\n    this.blob = null;\r\n\r\n\r\n    /**\r\n     * Get MediaRecorder readonly state.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * var state = recorder.getState();\r\n     * @returns {String} Returns recording state.\r\n     */\r\n    this.getState = function() {\r\n        if (!mediaRecorder) {\r\n            return 'inactive';\r\n        }\r\n\r\n        return mediaRecorder.state || 'inactive';\r\n    };\r\n\r\n    // list of all recording states\r\n    var allStates = [];\r\n\r\n    /**\r\n     * Get MediaRecorder all recording states.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * var state = recorder.getAllStates();\r\n     * @returns {Array} Returns all recording states\r\n     */\r\n    this.getAllStates = function() {\r\n        return allStates;\r\n    };\r\n\r\n    // if any Track within the MediaStream is muted or not enabled at any time, \r\n    // the browser will only record black frames \r\n    // or silence since that is the content produced by the Track\r\n    // so we need to stopRecording as soon as any single track ends.\r\n    if (typeof config.checkForInactiveTracks === 'undefined') {\r\n        config.checkForInactiveTracks = false; // disable to minimize CPU usage\r\n    }\r\n\r\n    var self = this;\r\n\r\n    // this method checks if media stream is stopped\r\n    // or if any track is ended.\r\n    (function looper() {\r\n        if (!mediaRecorder || config.checkForInactiveTracks === false) {\r\n            return;\r\n        }\r\n\r\n        if (isMediaStreamActive() === false) {\r\n            if (!config.disableLogs) {\r\n                console.log('MediaStream seems stopped.');\r\n            }\r\n            self.stop();\r\n            return;\r\n        }\r\n\r\n        setTimeout(looper, 1000); // check every second\r\n    })();\r\n\r\n    // for debugging\r\n    this.name = 'MediaStreamRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.MediaStreamRecorder = MediaStreamRecorder;\r\n}\r\n\r\n// source code from: http://typedarray.org/wp-content/projects/WebAudioRecorder/script.js\r\n// https://github.com/mattdiamond/Recorderjs#license-mit\r\n// ______________________\r\n// StereoAudioRecorder.js\r\n\r\n/**\r\n * StereoAudioRecorder is a standalone class used by {@link RecordRTC} to bring \"stereo\" audio-recording in chrome.\r\n * @summary JavaScript standalone object for stereo audio recording.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef StereoAudioRecorder\r\n * @class\r\n * @example\r\n * var recorder = new StereoAudioRecorder(MediaStream, {\r\n *     sampleRate: 44100,\r\n *     bufferSize: 4096\r\n * });\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {sampleRate: 44100, bufferSize: 4096, numberOfAudioChannels: 1, etc.}\r\n */\r\n\r\nfunction StereoAudioRecorder(mediaStream, config) {\r\n    if (!getTracks(mediaStream, 'audio').length) {\r\n        throw 'Your stream has no audio tracks.';\r\n    }\r\n\r\n    config = config || {};\r\n\r\n    var self = this;\r\n\r\n    // variables\r\n    var leftchannel = [];\r\n    var rightchannel = [];\r\n    var recording = false;\r\n    var recordingLength = 0;\r\n    var jsAudioNode;\r\n\r\n    var numberOfAudioChannels = 2;\r\n\r\n    /**\r\n     * Set sample rates such as 8K or 16K. Reference: http://stackoverflow.com/a/28977136/552182\r\n     * @property {number} desiredSampRate - Desired Bits per sample * 1000\r\n     * @memberof StereoAudioRecorder\r\n     * @instance\r\n     * @example\r\n     * var recorder = StereoAudioRecorder(mediaStream, {\r\n     *   desiredSampRate: 16 * 1000 // bits-per-sample * 1000\r\n     * });\r\n     */\r\n    var desiredSampRate = config.desiredSampRate;\r\n\r\n    // backward compatibility\r\n    if (config.leftChannel === true) {\r\n        numberOfAudioChannels = 1;\r\n    }\r\n\r\n    if (config.numberOfAudioChannels === 1) {\r\n        numberOfAudioChannels = 1;\r\n    }\r\n\r\n    if (!numberOfAudioChannels || numberOfAudioChannels < 1) {\r\n        numberOfAudioChannels = 2;\r\n    }\r\n\r\n    if (!config.disableLogs) {\r\n        console.log('StereoAudioRecorder is set to record number of channels: ' + numberOfAudioChannels);\r\n    }\r\n\r\n    // if any Track within the MediaStream is muted or not enabled at any time, \r\n    // the browser will only record black frames \r\n    // or silence since that is the content produced by the Track\r\n    // so we need to stopRecording as soon as any single track ends.\r\n    if (typeof config.checkForInactiveTracks === 'undefined') {\r\n        config.checkForInactiveTracks = true;\r\n    }\r\n\r\n    function isMediaStreamActive() {\r\n        if (config.checkForInactiveTracks === false) {\r\n            // always return \"true\"\r\n            return true;\r\n        }\r\n\r\n        if ('active' in mediaStream) {\r\n            if (!mediaStream.active) {\r\n                return false;\r\n            }\r\n        } else if ('ended' in mediaStream) { // old hack\r\n            if (mediaStream.ended) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        if (isMediaStreamActive() === false) {\r\n            throw 'Please make sure MediaStream is active.';\r\n        }\r\n\r\n        resetVariables();\r\n\r\n        isAudioProcessStarted = isPaused = false;\r\n        recording = true;\r\n\r\n        if (typeof config.timeSlice !== 'undefined') {\r\n            looper();\r\n        }\r\n    };\r\n\r\n    function mergeLeftRightBuffers(config, callback) {\r\n        function mergeAudioBuffers(config, cb) {\r\n            var numberOfAudioChannels = config.numberOfAudioChannels;\r\n\r\n            // todo: \"slice(0)\" --- is it causes loop? Should be removed?\r\n            var leftBuffers = config.leftBuffers.slice(0);\r\n            var rightBuffers = config.rightBuffers.slice(0);\r\n            var sampleRate = config.sampleRate;\r\n            var internalInterleavedLength = config.internalInterleavedLength;\r\n            var desiredSampRate = config.desiredSampRate;\r\n\r\n            if (numberOfAudioChannels === 2) {\r\n                leftBuffers = mergeBuffers(leftBuffers, internalInterleavedLength);\r\n                rightBuffers = mergeBuffers(rightBuffers, internalInterleavedLength);\r\n\r\n                if (desiredSampRate) {\r\n                    leftBuffers = interpolateArray(leftBuffers, desiredSampRate, sampleRate);\r\n                    rightBuffers = interpolateArray(rightBuffers, desiredSampRate, sampleRate);\r\n                }\r\n            }\r\n\r\n            if (numberOfAudioChannels === 1) {\r\n                leftBuffers = mergeBuffers(leftBuffers, internalInterleavedLength);\r\n\r\n                if (desiredSampRate) {\r\n                    leftBuffers = interpolateArray(leftBuffers, desiredSampRate, sampleRate);\r\n                }\r\n            }\r\n\r\n            // set sample rate as desired sample rate\r\n            if (desiredSampRate) {\r\n                sampleRate = desiredSampRate;\r\n            }\r\n\r\n            // for changing the sampling rate, reference:\r\n            // http://stackoverflow.com/a/28977136/552182\r\n            function interpolateArray(data, newSampleRate, oldSampleRate) {\r\n                var fitCount = Math.round(data.length * (newSampleRate / oldSampleRate));\r\n                var newData = [];\r\n                var springFactor = Number((data.length - 1) / (fitCount - 1));\r\n                newData[0] = data[0];\r\n                for (var i = 1; i < fitCount - 1; i++) {\r\n                    var tmp = i * springFactor;\r\n                    var before = Number(Math.floor(tmp)).toFixed();\r\n                    var after = Number(Math.ceil(tmp)).toFixed();\r\n                    var atPoint = tmp - before;\r\n                    newData[i] = linearInterpolate(data[before], data[after], atPoint);\r\n                }\r\n                newData[fitCount - 1] = data[data.length - 1];\r\n                return newData;\r\n            }\r\n\r\n            function linearInterpolate(before, after, atPoint) {\r\n                return before + (after - before) * atPoint;\r\n            }\r\n\r\n            function mergeBuffers(channelBuffer, rLength) {\r\n                var result = new Float64Array(rLength);\r\n                var offset = 0;\r\n                var lng = channelBuffer.length;\r\n\r\n                for (var i = 0; i < lng; i++) {\r\n                    var buffer = channelBuffer[i];\r\n                    result.set(buffer, offset);\r\n                    offset += buffer.length;\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            function interleave(leftChannel, rightChannel) {\r\n                var length = leftChannel.length + rightChannel.length;\r\n\r\n                var result = new Float64Array(length);\r\n\r\n                var inputIndex = 0;\r\n\r\n                for (var index = 0; index < length;) {\r\n                    result[index++] = leftChannel[inputIndex];\r\n                    result[index++] = rightChannel[inputIndex];\r\n                    inputIndex++;\r\n                }\r\n                return result;\r\n            }\r\n\r\n            function writeUTFBytes(view, offset, string) {\r\n                var lng = string.length;\r\n                for (var i = 0; i < lng; i++) {\r\n                    view.setUint8(offset + i, string.charCodeAt(i));\r\n                }\r\n            }\r\n\r\n            // interleave both channels together\r\n            var interleaved;\r\n\r\n            if (numberOfAudioChannels === 2) {\r\n                interleaved = interleave(leftBuffers, rightBuffers);\r\n            }\r\n\r\n            if (numberOfAudioChannels === 1) {\r\n                interleaved = leftBuffers;\r\n            }\r\n\r\n            var interleavedLength = interleaved.length;\r\n\r\n            // create wav file\r\n            var resultingBufferLength = 44 + interleavedLength * 2;\r\n\r\n            var buffer = new ArrayBuffer(resultingBufferLength);\r\n\r\n            var view = new DataView(buffer);\r\n\r\n            // RIFF chunk descriptor/identifier \r\n            writeUTFBytes(view, 0, 'RIFF');\r\n\r\n            // RIFF chunk length\r\n            // changed \"44\" to \"36\" via #401\r\n            view.setUint32(4, 36 + interleavedLength * 2, true);\r\n\r\n            // RIFF type \r\n            writeUTFBytes(view, 8, 'WAVE');\r\n\r\n            // format chunk identifier \r\n            // FMT sub-chunk\r\n            writeUTFBytes(view, 12, 'fmt ');\r\n\r\n            // format chunk length \r\n            view.setUint32(16, 16, true);\r\n\r\n            // sample format (raw)\r\n            view.setUint16(20, 1, true);\r\n\r\n            // stereo (2 channels)\r\n            view.setUint16(22, numberOfAudioChannels, true);\r\n\r\n            // sample rate \r\n            view.setUint32(24, sampleRate, true);\r\n\r\n            // byte rate (sample rate * block align)\r\n            view.setUint32(28, sampleRate * numberOfAudioChannels * 2, true);\r\n\r\n            // block align (channel count * bytes per sample) \r\n            view.setUint16(32, numberOfAudioChannels * 2, true);\r\n\r\n            // bits per sample \r\n            view.setUint16(34, 16, true);\r\n\r\n            // data sub-chunk\r\n            // data chunk identifier \r\n            writeUTFBytes(view, 36, 'data');\r\n\r\n            // data chunk length \r\n            view.setUint32(40, interleavedLength * 2, true);\r\n\r\n            // write the PCM samples\r\n            var lng = interleavedLength;\r\n            var index = 44;\r\n            var volume = 1;\r\n            for (var i = 0; i < lng; i++) {\r\n                view.setInt16(index, interleaved[i] * (0x7FFF * volume), true);\r\n                index += 2;\r\n            }\r\n\r\n            if (cb) {\r\n                return cb({\r\n                    buffer: buffer,\r\n                    view: view\r\n                });\r\n            }\r\n\r\n            postMessage({\r\n                buffer: buffer,\r\n                view: view\r\n            });\r\n        }\r\n\r\n        if (config.noWorker) {\r\n            mergeAudioBuffers(config, function(data) {\r\n                callback(data.buffer, data.view);\r\n            });\r\n            return;\r\n        }\r\n\r\n\r\n        var webWorker = processInWebWorker(mergeAudioBuffers);\r\n\r\n        webWorker.onmessage = function(event) {\r\n            callback(event.data.buffer, event.data.view);\r\n\r\n            // release memory\r\n            URL.revokeObjectURL(webWorker.workerURL);\r\n\r\n            // kill webworker (or Chrome will kill your page after ~25 calls)\r\n            webWorker.terminate();\r\n        };\r\n\r\n        webWorker.postMessage(config);\r\n    }\r\n\r\n    function processInWebWorker(_function) {\r\n        var workerURL = URL.createObjectURL(new Blob([_function.toString(),\r\n            ';this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n        ], {\r\n            type: 'application/javascript'\r\n        }));\r\n\r\n        var worker = new Worker(workerURL);\r\n        worker.workerURL = workerURL;\r\n        return worker;\r\n    }\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        // stop recording\r\n        recording = false;\r\n\r\n        mergeLeftRightBuffers({\r\n            desiredSampRate: desiredSampRate,\r\n            sampleRate: sampleRate,\r\n            numberOfAudioChannels: numberOfAudioChannels,\r\n            internalInterleavedLength: recordingLength,\r\n            leftBuffers: leftchannel,\r\n            rightBuffers: numberOfAudioChannels === 1 ? [] : rightchannel,\r\n            noWorker: config.noWorker\r\n        }, function(buffer, view) {\r\n            /**\r\n             * @property {Blob} blob - The recorded blob object.\r\n             * @memberof StereoAudioRecorder\r\n             * @example\r\n             * recorder.stop(function(){\r\n             *     var blob = recorder.blob;\r\n             * });\r\n             */\r\n            self.blob = new Blob([view], {\r\n                type: 'audio/wav'\r\n            });\r\n\r\n            /**\r\n             * @property {ArrayBuffer} buffer - The recorded buffer object.\r\n             * @memberof StereoAudioRecorder\r\n             * @example\r\n             * recorder.stop(function(){\r\n             *     var buffer = recorder.buffer;\r\n             * });\r\n             */\r\n            self.buffer = new ArrayBuffer(view.buffer.byteLength);\r\n\r\n            /**\r\n             * @property {DataView} view - The recorded data-view object.\r\n             * @memberof StereoAudioRecorder\r\n             * @example\r\n             * recorder.stop(function(){\r\n             *     var view = recorder.view;\r\n             * });\r\n             */\r\n            self.view = view;\r\n\r\n            self.sampleRate = desiredSampRate || sampleRate;\r\n            self.bufferSize = bufferSize;\r\n\r\n            // recorded audio length\r\n            self.length = recordingLength;\r\n\r\n            isAudioProcessStarted = false;\r\n\r\n            if (callback) {\r\n                callback(self.blob);\r\n            }\r\n        });\r\n    };\r\n\r\n    if (typeof RecordRTC.Storage === 'undefined') {\r\n        RecordRTC.Storage = {\r\n            AudioContextConstructor: null,\r\n            AudioContext: window.AudioContext || window.webkitAudioContext\r\n        };\r\n    }\r\n\r\n    if (!RecordRTC.Storage.AudioContextConstructor || RecordRTC.Storage.AudioContextConstructor.state === 'closed') {\r\n        RecordRTC.Storage.AudioContextConstructor = new RecordRTC.Storage.AudioContext();\r\n    }\r\n\r\n    var context = RecordRTC.Storage.AudioContextConstructor;\r\n\r\n    // creates an audio node from the microphone incoming stream\r\n    var audioInput = context.createMediaStreamSource(mediaStream);\r\n\r\n    var legalBufferValues = [0, 256, 512, 1024, 2048, 4096, 8192, 16384];\r\n\r\n    /**\r\n     * From the spec: This value controls how frequently the audioprocess event is\r\n     * dispatched and how many sample-frames need to be processed each call.\r\n     * Lower values for buffer size will result in a lower (better) latency.\r\n     * Higher values will be necessary to avoid audio breakup and glitches\r\n     * The size of the buffer (in sample-frames) which needs to\r\n     * be processed each time onprocessaudio is called.\r\n     * Legal values are (256, 512, 1024, 2048, 4096, 8192, 16384).\r\n     * @property {number} bufferSize - Buffer-size for how frequently the audioprocess event is dispatched.\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder = new StereoAudioRecorder(mediaStream, {\r\n     *     bufferSize: 4096\r\n     * });\r\n     */\r\n\r\n    // \"0\" means, let chrome decide the most accurate buffer-size for current platform.\r\n    var bufferSize = typeof config.bufferSize === 'undefined' ? 4096 : config.bufferSize;\r\n\r\n    if (legalBufferValues.indexOf(bufferSize) === -1) {\r\n        if (!config.disableLogs) {\r\n            console.log('Legal values for buffer-size are ' + JSON.stringify(legalBufferValues, null, '\\t'));\r\n        }\r\n    }\r\n\r\n    if (context.createJavaScriptNode) {\r\n        jsAudioNode = context.createJavaScriptNode(bufferSize, numberOfAudioChannels, numberOfAudioChannels);\r\n    } else if (context.createScriptProcessor) {\r\n        jsAudioNode = context.createScriptProcessor(bufferSize, numberOfAudioChannels, numberOfAudioChannels);\r\n    } else {\r\n        throw 'WebAudio API has no support on this browser.';\r\n    }\r\n\r\n    // connect the stream to the script processor\r\n    audioInput.connect(jsAudioNode);\r\n\r\n    if (!config.bufferSize) {\r\n        bufferSize = jsAudioNode.bufferSize; // device buffer-size\r\n    }\r\n\r\n    /**\r\n     * The sample rate (in sample-frames per second) at which the\r\n     * AudioContext handles audio. It is assumed that all AudioNodes\r\n     * in the context run at this rate. In making this assumption,\r\n     * sample-rate converters or \"varispeed\" processors are not supported\r\n     * in real-time processing.\r\n     * The sampleRate parameter describes the sample-rate of the\r\n     * linear PCM audio data in the buffer in sample-frames per second.\r\n     * An implementation must support sample-rates in at least\r\n     * the range 22050 to 96000.\r\n     * @property {number} sampleRate - Buffer-size for how frequently the audioprocess event is dispatched.\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder = new StereoAudioRecorder(mediaStream, {\r\n     *     sampleRate: 44100\r\n     * });\r\n     */\r\n    var sampleRate = typeof config.sampleRate !== 'undefined' ? config.sampleRate : context.sampleRate || 44100;\r\n\r\n    if (sampleRate < 22050 || sampleRate > 96000) {\r\n        // Ref: http://stackoverflow.com/a/26303918/552182\r\n        if (!config.disableLogs) {\r\n            console.log('sample-rate must be under range 22050 and 96000.');\r\n        }\r\n    }\r\n\r\n    if (!config.disableLogs) {\r\n        if (config.desiredSampRate) {\r\n            console.log('Desired sample-rate: ' + config.desiredSampRate);\r\n        }\r\n    }\r\n\r\n    var isPaused = false;\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPaused = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        if (isMediaStreamActive() === false) {\r\n            throw 'Please make sure MediaStream is active.';\r\n        }\r\n\r\n        if (!recording) {\r\n            if (!config.disableLogs) {\r\n                console.log('Seems recording has been restarted.');\r\n            }\r\n            this.record();\r\n            return;\r\n        }\r\n\r\n        isPaused = false;\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        config.checkForInactiveTracks = false;\r\n\r\n        if (recording) {\r\n            this.stop(clearRecordedDataCB);\r\n        }\r\n\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function resetVariables() {\r\n        leftchannel = [];\r\n        rightchannel = [];\r\n        recordingLength = 0;\r\n        isAudioProcessStarted = false;\r\n        recording = false;\r\n        isPaused = false;\r\n        context = null;\r\n\r\n        self.leftchannel = leftchannel;\r\n        self.rightchannel = rightchannel;\r\n        self.numberOfAudioChannels = numberOfAudioChannels;\r\n        self.desiredSampRate = desiredSampRate;\r\n        self.sampleRate = sampleRate;\r\n        self.recordingLength = recordingLength;\r\n\r\n        intervalsBasedBuffers = {\r\n            left: [],\r\n            right: [],\r\n            recordingLength: 0\r\n        };\r\n    }\r\n\r\n    function clearRecordedDataCB() {\r\n        if (jsAudioNode) {\r\n            jsAudioNode.onaudioprocess = null;\r\n            jsAudioNode.disconnect();\r\n            jsAudioNode = null;\r\n        }\r\n\r\n        if (audioInput) {\r\n            audioInput.disconnect();\r\n            audioInput = null;\r\n        }\r\n\r\n        resetVariables();\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'StereoAudioRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    var isAudioProcessStarted = false;\r\n\r\n    function onAudioProcessDataAvailable(e) {\r\n        if (isPaused) {\r\n            return;\r\n        }\r\n\r\n        if (isMediaStreamActive() === false) {\r\n            if (!config.disableLogs) {\r\n                console.log('MediaStream seems stopped.');\r\n            }\r\n            jsAudioNode.disconnect();\r\n            recording = false;\r\n        }\r\n\r\n        if (!recording) {\r\n            if (audioInput) {\r\n                audioInput.disconnect();\r\n                audioInput = null;\r\n            }\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * This method is called on \"onaudioprocess\" event's first invocation.\r\n         * @method {function} onAudioProcessStarted\r\n         * @memberof StereoAudioRecorder\r\n         * @example\r\n         * recorder.onAudioProcessStarted: function() { };\r\n         */\r\n        if (!isAudioProcessStarted) {\r\n            isAudioProcessStarted = true;\r\n            if (config.onAudioProcessStarted) {\r\n                config.onAudioProcessStarted();\r\n            }\r\n\r\n            if (config.initCallback) {\r\n                config.initCallback();\r\n            }\r\n        }\r\n\r\n        var left = e.inputBuffer.getChannelData(0);\r\n\r\n        // we clone the samples\r\n        var chLeft = new Float32Array(left);\r\n        leftchannel.push(chLeft);\r\n\r\n        if (numberOfAudioChannels === 2) {\r\n            var right = e.inputBuffer.getChannelData(1);\r\n            var chRight = new Float32Array(right);\r\n            rightchannel.push(chRight);\r\n        }\r\n\r\n        recordingLength += bufferSize;\r\n\r\n        // export raw PCM\r\n        self.recordingLength = recordingLength;\r\n\r\n        if (typeof config.timeSlice !== 'undefined') {\r\n            intervalsBasedBuffers.recordingLength += bufferSize;\r\n            intervalsBasedBuffers.left.push(chLeft);\r\n\r\n            if (numberOfAudioChannels === 2) {\r\n                intervalsBasedBuffers.right.push(chRight);\r\n            }\r\n        }\r\n    }\r\n\r\n    jsAudioNode.onaudioprocess = onAudioProcessDataAvailable;\r\n\r\n    // to prevent self audio to be connected with speakers\r\n    if (context.createMediaStreamDestination) {\r\n        jsAudioNode.connect(context.createMediaStreamDestination());\r\n    } else {\r\n        jsAudioNode.connect(context.destination);\r\n    }\r\n\r\n    // export raw PCM\r\n    this.leftchannel = leftchannel;\r\n    this.rightchannel = rightchannel;\r\n    this.numberOfAudioChannels = numberOfAudioChannels;\r\n    this.desiredSampRate = desiredSampRate;\r\n    this.sampleRate = sampleRate;\r\n    self.recordingLength = recordingLength;\r\n\r\n    // helper for intervals based blobs\r\n    var intervalsBasedBuffers = {\r\n        left: [],\r\n        right: [],\r\n        recordingLength: 0\r\n    };\r\n\r\n    // this looper is used to support intervals based blobs (via timeSlice+ondataavailable)\r\n    function looper() {\r\n        if (!recording || typeof config.ondataavailable !== 'function' || typeof config.timeSlice === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (intervalsBasedBuffers.left.length) {\r\n            mergeLeftRightBuffers({\r\n                desiredSampRate: desiredSampRate,\r\n                sampleRate: sampleRate,\r\n                numberOfAudioChannels: numberOfAudioChannels,\r\n                internalInterleavedLength: intervalsBasedBuffers.recordingLength,\r\n                leftBuffers: intervalsBasedBuffers.left,\r\n                rightBuffers: numberOfAudioChannels === 1 ? [] : intervalsBasedBuffers.right\r\n            }, function(buffer, view) {\r\n                var blob = new Blob([view], {\r\n                    type: 'audio/wav'\r\n                });\r\n                config.ondataavailable(blob);\r\n\r\n                setTimeout(looper, config.timeSlice);\r\n            });\r\n\r\n            intervalsBasedBuffers = {\r\n                left: [],\r\n                right: [],\r\n                recordingLength: 0\r\n            };\r\n        } else {\r\n            setTimeout(looper, config.timeSlice);\r\n        }\r\n    }\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.StereoAudioRecorder = StereoAudioRecorder;\r\n}\r\n\r\n// _________________\r\n// CanvasRecorder.js\r\n\r\n/**\r\n * CanvasRecorder is a standalone class used by {@link RecordRTC} to bring HTML5-Canvas recording into video WebM. It uses HTML2Canvas library and runs top over {@link Whammy}.\r\n * @summary HTML2Canvas recording into video WebM.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef CanvasRecorder\r\n * @class\r\n * @example\r\n * var recorder = new CanvasRecorder(htmlElement, { disableLogs: true, useWhammyRecorder: true });\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {HTMLElement} htmlElement - querySelector/getElementById/getElementsByTagName[0]/etc.\r\n * @param {object} config - {disableLogs:true, initCallback: function}\r\n */\r\n\r\nfunction CanvasRecorder(htmlElement, config) {\r\n    if (typeof html2canvas === 'undefined') {\r\n        throw 'Please link: https://www.webrtc-experiment.com/screenshot.js';\r\n    }\r\n\r\n    config = config || {};\r\n    if (!config.frameInterval) {\r\n        config.frameInterval = 10;\r\n    }\r\n\r\n    // via DetectRTC.js\r\n    var isCanvasSupportsStreamCapturing = false;\r\n    ['captureStream', 'mozCaptureStream', 'webkitCaptureStream'].forEach(function(item) {\r\n        if (item in document.createElement('canvas')) {\r\n            isCanvasSupportsStreamCapturing = true;\r\n        }\r\n    });\r\n\r\n    var _isChrome = (!!window.webkitRTCPeerConnection || !!window.webkitGetUserMedia) && !!window.chrome;\r\n\r\n    var chromeVersion = 50;\r\n    var matchArray = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\r\n    if (_isChrome && matchArray && matchArray[2]) {\r\n        chromeVersion = parseInt(matchArray[2], 10);\r\n    }\r\n\r\n    if (_isChrome && chromeVersion < 52) {\r\n        isCanvasSupportsStreamCapturing = false;\r\n    }\r\n\r\n    if (config.useWhammyRecorder) {\r\n        isCanvasSupportsStreamCapturing = false;\r\n    }\r\n\r\n    var globalCanvas, mediaStreamRecorder;\r\n\r\n    if (isCanvasSupportsStreamCapturing) {\r\n        if (!config.disableLogs) {\r\n            console.log('Your browser supports both MediRecorder API and canvas.captureStream!');\r\n        }\r\n\r\n        if (htmlElement instanceof HTMLCanvasElement) {\r\n            globalCanvas = htmlElement;\r\n        } else if (htmlElement instanceof CanvasRenderingContext2D) {\r\n            globalCanvas = htmlElement.canvas;\r\n        } else {\r\n            throw 'Please pass either HTMLCanvasElement or CanvasRenderingContext2D.';\r\n        }\r\n    } else if (!!navigator.mozGetUserMedia) {\r\n        if (!config.disableLogs) {\r\n            console.error('Canvas recording is NOT supported in Firefox.');\r\n        }\r\n    }\r\n\r\n    var isRecording;\r\n\r\n    /**\r\n     * This method records Canvas.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        isRecording = true;\r\n\r\n        if (isCanvasSupportsStreamCapturing && !config.useWhammyRecorder) {\r\n            // CanvasCaptureMediaStream\r\n            var canvasMediaStream;\r\n            if ('captureStream' in globalCanvas) {\r\n                canvasMediaStream = globalCanvas.captureStream(25); // 25 FPS\r\n            } else if ('mozCaptureStream' in globalCanvas) {\r\n                canvasMediaStream = globalCanvas.mozCaptureStream(25);\r\n            } else if ('webkitCaptureStream' in globalCanvas) {\r\n                canvasMediaStream = globalCanvas.webkitCaptureStream(25);\r\n            }\r\n\r\n            try {\r\n                var mdStream = new MediaStream();\r\n                mdStream.addTrack(getTracks(canvasMediaStream, 'video')[0]);\r\n                canvasMediaStream = mdStream;\r\n            } catch (e) {}\r\n\r\n            if (!canvasMediaStream) {\r\n                throw 'captureStream API are NOT available.';\r\n            }\r\n\r\n            // Note: Jan 18, 2016 status is that, \r\n            // Firefox MediaRecorder API can't record CanvasCaptureMediaStream object.\r\n            mediaStreamRecorder = new MediaStreamRecorder(canvasMediaStream, {\r\n                mimeType: config.mimeType || 'video/webm'\r\n            });\r\n            mediaStreamRecorder.record();\r\n        } else {\r\n            whammy.frames = [];\r\n            lastTime = new Date().getTime();\r\n            drawCanvasFrame();\r\n        }\r\n\r\n        if (config.initCallback) {\r\n            config.initCallback();\r\n        }\r\n    };\r\n\r\n    this.getWebPImages = function(callback) {\r\n        if (htmlElement.nodeName.toLowerCase() !== 'canvas') {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        var framesLength = whammy.frames.length;\r\n        whammy.frames.forEach(function(frame, idx) {\r\n            var framesRemaining = framesLength - idx;\r\n            if (!config.disableLogs) {\r\n                console.log(framesRemaining + '/' + framesLength + ' frames remaining');\r\n            }\r\n\r\n            if (config.onEncodingCallback) {\r\n                config.onEncodingCallback(framesRemaining, framesLength);\r\n            }\r\n\r\n            var webp = frame.image.toDataURL('image/webp', 1);\r\n            whammy.frames[idx].image = webp;\r\n        });\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Generating WebM');\r\n        }\r\n\r\n        callback();\r\n    };\r\n\r\n    /**\r\n     * This method stops recording Canvas.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        isRecording = false;\r\n\r\n        var that = this;\r\n\r\n        if (isCanvasSupportsStreamCapturing && mediaStreamRecorder) {\r\n            mediaStreamRecorder.stop(callback);\r\n            return;\r\n        }\r\n\r\n        this.getWebPImages(function() {\r\n            /**\r\n             * @property {Blob} blob - Recorded frames in video/webm blob.\r\n             * @memberof CanvasRecorder\r\n             * @example\r\n             * recorder.stop(function() {\r\n             *     var blob = recorder.blob;\r\n             * });\r\n             */\r\n            whammy.compile(function(blob) {\r\n                if (!config.disableLogs) {\r\n                    console.log('Recording finished!');\r\n                }\r\n\r\n                that.blob = blob;\r\n\r\n                if (that.blob.forEach) {\r\n                    that.blob = new Blob([], {\r\n                        type: 'video/webm'\r\n                    });\r\n                }\r\n\r\n                if (callback) {\r\n                    callback(that.blob);\r\n                }\r\n\r\n                whammy.frames = [];\r\n            });\r\n        });\r\n    };\r\n\r\n    var isPausedRecording = false;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPausedRecording = true;\r\n\r\n        if (mediaStreamRecorder instanceof MediaStreamRecorder) {\r\n            mediaStreamRecorder.pause();\r\n            return;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPausedRecording = false;\r\n\r\n        if (mediaStreamRecorder instanceof MediaStreamRecorder) {\r\n            mediaStreamRecorder.resume();\r\n            return;\r\n        }\r\n\r\n        if (!isRecording) {\r\n            this.record();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (isRecording) {\r\n            this.stop(clearRecordedDataCB);\r\n        }\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        whammy.frames = [];\r\n        isRecording = false;\r\n        isPausedRecording = false;\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'CanvasRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    function cloneCanvas() {\r\n        //create a new canvas\r\n        var newCanvas = document.createElement('canvas');\r\n        var context = newCanvas.getContext('2d');\r\n\r\n        //set dimensions\r\n        newCanvas.width = htmlElement.width;\r\n        newCanvas.height = htmlElement.height;\r\n\r\n        //apply the old canvas to the new one\r\n        context.drawImage(htmlElement, 0, 0);\r\n\r\n        //return the new canvas\r\n        return newCanvas;\r\n    }\r\n\r\n    function drawCanvasFrame() {\r\n        if (isPausedRecording) {\r\n            lastTime = new Date().getTime();\r\n            return setTimeout(drawCanvasFrame, 500);\r\n        }\r\n\r\n        if (htmlElement.nodeName.toLowerCase() === 'canvas') {\r\n            var duration = new Date().getTime() - lastTime;\r\n            // via #206, by Jack i.e. @Seymourr\r\n            lastTime = new Date().getTime();\r\n\r\n            whammy.frames.push({\r\n                image: cloneCanvas(),\r\n                duration: duration\r\n            });\r\n\r\n            if (isRecording) {\r\n                setTimeout(drawCanvasFrame, config.frameInterval);\r\n            }\r\n            return;\r\n        }\r\n\r\n        html2canvas(htmlElement, {\r\n            grabMouse: typeof config.showMousePointer === 'undefined' || config.showMousePointer,\r\n            onrendered: function(canvas) {\r\n                var duration = new Date().getTime() - lastTime;\r\n                if (!duration) {\r\n                    return setTimeout(drawCanvasFrame, config.frameInterval);\r\n                }\r\n\r\n                // via #206, by Jack i.e. @Seymourr\r\n                lastTime = new Date().getTime();\r\n\r\n                whammy.frames.push({\r\n                    image: canvas.toDataURL('image/webp', 1),\r\n                    duration: duration\r\n                });\r\n\r\n                if (isRecording) {\r\n                    setTimeout(drawCanvasFrame, config.frameInterval);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    var lastTime = new Date().getTime();\r\n\r\n    var whammy = new Whammy.Video(100);\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.CanvasRecorder = CanvasRecorder;\r\n}\n\r\n// _________________\r\n// WhammyRecorder.js\r\n\r\n/**\r\n * WhammyRecorder is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It runs top over {@link Whammy}.\r\n * @summary Video recording feature in Chrome.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef WhammyRecorder\r\n * @class\r\n * @example\r\n * var recorder = new WhammyRecorder(mediaStream);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {disableLogs: true, initCallback: function, video: HTMLVideoElement, etc.}\r\n */\r\n\r\nfunction WhammyRecorder(mediaStream, config) {\r\n\r\n    config = config || {};\r\n\r\n    if (!config.frameInterval) {\r\n        config.frameInterval = 10;\r\n    }\r\n\r\n    if (!config.disableLogs) {\r\n        console.log('Using frames-interval:', config.frameInterval);\r\n    }\r\n\r\n    /**\r\n     * This method records video.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        if (!config.width) {\r\n            config.width = 320;\r\n        }\r\n\r\n        if (!config.height) {\r\n            config.height = 240;\r\n        }\r\n\r\n        if (!config.video) {\r\n            config.video = {\r\n                width: config.width,\r\n                height: config.height\r\n            };\r\n        }\r\n\r\n        if (!config.canvas) {\r\n            config.canvas = {\r\n                width: config.width,\r\n                height: config.height\r\n            };\r\n        }\r\n\r\n        canvas.width = config.canvas.width || 320;\r\n        canvas.height = config.canvas.height || 240;\r\n\r\n        context = canvas.getContext('2d');\r\n\r\n        // setting defaults\r\n        if (config.video && config.video instanceof HTMLVideoElement) {\r\n            video = config.video.cloneNode();\r\n\r\n            if (config.initCallback) {\r\n                config.initCallback();\r\n            }\r\n        } else {\r\n            video = document.createElement('video');\r\n\r\n            setSrcObject(mediaStream, video);\r\n\r\n            video.onloadedmetadata = function() { // \"onloadedmetadata\" may NOT work in FF?\r\n                if (config.initCallback) {\r\n                    config.initCallback();\r\n                }\r\n            };\r\n\r\n            video.width = config.video.width;\r\n            video.height = config.video.height;\r\n        }\r\n\r\n        video.muted = true;\r\n        video.play();\r\n\r\n        lastTime = new Date().getTime();\r\n        whammy = new Whammy.Video();\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('canvas resolutions', canvas.width, '*', canvas.height);\r\n            console.log('video width/height', video.width || canvas.width, '*', video.height || canvas.height);\r\n        }\r\n\r\n        drawFrames(config.frameInterval);\r\n    };\r\n\r\n    /**\r\n     * Draw and push frames to Whammy\r\n     * @param {integer} frameInterval - set minimum interval (in milliseconds) between each time we push a frame to Whammy\r\n     */\r\n    function drawFrames(frameInterval) {\r\n        frameInterval = typeof frameInterval !== 'undefined' ? frameInterval : 10;\r\n\r\n        var duration = new Date().getTime() - lastTime;\r\n        if (!duration) {\r\n            return setTimeout(drawFrames, frameInterval, frameInterval);\r\n        }\r\n\r\n        if (isPausedRecording) {\r\n            lastTime = new Date().getTime();\r\n            return setTimeout(drawFrames, 100);\r\n        }\r\n\r\n        // via #206, by Jack i.e. @Seymourr\r\n        lastTime = new Date().getTime();\r\n\r\n        if (video.paused) {\r\n            // via: https://github.com/muaz-khan/WebRTC-Experiment/pull/316\r\n            // Tweak for Android Chrome\r\n            video.play();\r\n        }\r\n\r\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n        whammy.frames.push({\r\n            duration: duration,\r\n            image: canvas.toDataURL('image/webp')\r\n        });\r\n\r\n        if (!isStopDrawing) {\r\n            setTimeout(drawFrames, frameInterval, frameInterval);\r\n        }\r\n    }\r\n\r\n    function asyncLoop(o) {\r\n        var i = -1,\r\n            length = o.length;\r\n\r\n        (function loop() {\r\n            i++;\r\n            if (i === length) {\r\n                o.callback();\r\n                return;\r\n            }\r\n\r\n            // \"setTimeout\" added by Jim McLeod\r\n            setTimeout(function() {\r\n                o.functionToLoop(loop, i);\r\n            }, 1);\r\n        })();\r\n    }\r\n\r\n\r\n    /**\r\n     * remove black frames from the beginning to the specified frame\r\n     * @param {Array} _frames - array of frames to be checked\r\n     * @param {number} _framesToCheck - number of frame until check will be executed (-1 - will drop all frames until frame not matched will be found)\r\n     * @param {number} _pixTolerance - 0 - very strict (only black pixel color) ; 1 - all\r\n     * @param {number} _frameTolerance - 0 - very strict (only black frame color) ; 1 - all\r\n     * @returns {Array} - array of frames\r\n     */\r\n    // pull#293 by @volodalexey\r\n    function dropBlackFrames(_frames, _framesToCheck, _pixTolerance, _frameTolerance, callback) {\r\n        var localCanvas = document.createElement('canvas');\r\n        localCanvas.width = canvas.width;\r\n        localCanvas.height = canvas.height;\r\n        var context2d = localCanvas.getContext('2d');\r\n        var resultFrames = [];\r\n\r\n        var checkUntilNotBlack = _framesToCheck === -1;\r\n        var endCheckFrame = (_framesToCheck && _framesToCheck > 0 && _framesToCheck <= _frames.length) ?\r\n            _framesToCheck : _frames.length;\r\n        var sampleColor = {\r\n            r: 0,\r\n            g: 0,\r\n            b: 0\r\n        };\r\n        var maxColorDifference = Math.sqrt(\r\n            Math.pow(255, 2) +\r\n            Math.pow(255, 2) +\r\n            Math.pow(255, 2)\r\n        );\r\n        var pixTolerance = _pixTolerance && _pixTolerance >= 0 && _pixTolerance <= 1 ? _pixTolerance : 0;\r\n        var frameTolerance = _frameTolerance && _frameTolerance >= 0 && _frameTolerance <= 1 ? _frameTolerance : 0;\r\n        var doNotCheckNext = false;\r\n\r\n        asyncLoop({\r\n            length: endCheckFrame,\r\n            functionToLoop: function(loop, f) {\r\n                var matchPixCount, endPixCheck, maxPixCount;\r\n\r\n                var finishImage = function() {\r\n                    if (!doNotCheckNext && maxPixCount - matchPixCount <= maxPixCount * frameTolerance) {\r\n                        // console.log('removed black frame : ' + f + ' ; frame duration ' + _frames[f].duration);\r\n                    } else {\r\n                        // console.log('frame is passed : ' + f);\r\n                        if (checkUntilNotBlack) {\r\n                            doNotCheckNext = true;\r\n                        }\r\n                        resultFrames.push(_frames[f]);\r\n                    }\r\n                    loop();\r\n                };\r\n\r\n                if (!doNotCheckNext) {\r\n                    var image = new Image();\r\n                    image.onload = function() {\r\n                        context2d.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n                        var imageData = context2d.getImageData(0, 0, canvas.width, canvas.height);\r\n                        matchPixCount = 0;\r\n                        endPixCheck = imageData.data.length;\r\n                        maxPixCount = imageData.data.length / 4;\r\n\r\n                        for (var pix = 0; pix < endPixCheck; pix += 4) {\r\n                            var currentColor = {\r\n                                r: imageData.data[pix],\r\n                                g: imageData.data[pix + 1],\r\n                                b: imageData.data[pix + 2]\r\n                            };\r\n                            var colorDifference = Math.sqrt(\r\n                                Math.pow(currentColor.r - sampleColor.r, 2) +\r\n                                Math.pow(currentColor.g - sampleColor.g, 2) +\r\n                                Math.pow(currentColor.b - sampleColor.b, 2)\r\n                            );\r\n                            // difference in color it is difference in color vectors (r1,g1,b1) <=> (r2,g2,b2)\r\n                            if (colorDifference <= maxColorDifference * pixTolerance) {\r\n                                matchPixCount++;\r\n                            }\r\n                        }\r\n                        finishImage();\r\n                    };\r\n                    image.src = _frames[f].image;\r\n                } else {\r\n                    finishImage();\r\n                }\r\n            },\r\n            callback: function() {\r\n                resultFrames = resultFrames.concat(_frames.slice(endCheckFrame));\r\n\r\n                if (resultFrames.length <= 0) {\r\n                    // at least one last frame should be available for next manipulation\r\n                    // if total duration of all frames will be < 1000 than ffmpeg doesn't work well...\r\n                    resultFrames.push(_frames[_frames.length - 1]);\r\n                }\r\n                callback(resultFrames);\r\n            }\r\n        });\r\n    }\r\n\r\n    var isStopDrawing = false;\r\n\r\n    /**\r\n     * This method stops recording video.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        isStopDrawing = true;\r\n\r\n        var _this = this;\r\n        // analyse of all frames takes some time!\r\n        setTimeout(function() {\r\n            // e.g. dropBlackFrames(frames, 10, 1, 1) - will cut all 10 frames\r\n            // e.g. dropBlackFrames(frames, 10, 0.5, 0.5) - will analyse 10 frames\r\n            // e.g. dropBlackFrames(frames, 10) === dropBlackFrames(frames, 10, 0, 0) - will analyse 10 frames with strict black color\r\n            dropBlackFrames(whammy.frames, -1, null, null, function(frames) {\r\n                whammy.frames = frames;\r\n\r\n                // to display advertisement images!\r\n                if (config.advertisement && config.advertisement.length) {\r\n                    whammy.frames = config.advertisement.concat(whammy.frames);\r\n                }\r\n\r\n                /**\r\n                 * @property {Blob} blob - Recorded frames in video/webm blob.\r\n                 * @memberof WhammyRecorder\r\n                 * @example\r\n                 * recorder.stop(function() {\r\n                 *     var blob = recorder.blob;\r\n                 * });\r\n                 */\r\n                whammy.compile(function(blob) {\r\n                    _this.blob = blob;\r\n\r\n                    if (_this.blob.forEach) {\r\n                        _this.blob = new Blob([], {\r\n                            type: 'video/webm'\r\n                        });\r\n                    }\r\n\r\n                    if (callback) {\r\n                        callback(_this.blob);\r\n                    }\r\n                });\r\n            });\r\n        }, 10);\r\n    };\r\n\r\n    var isPausedRecording = false;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPausedRecording = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPausedRecording = false;\r\n\r\n        if (isStopDrawing) {\r\n            this.record();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (!isStopDrawing) {\r\n            this.stop(clearRecordedDataCB);\r\n        }\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        whammy.frames = [];\r\n        isStopDrawing = true;\r\n        isPausedRecording = false;\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'WhammyRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n\r\n    var video;\r\n    var lastTime;\r\n    var whammy;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.WhammyRecorder = WhammyRecorder;\r\n}\n\r\n// https://github.com/antimatter15/whammy/blob/master/LICENSE\r\n// _________\r\n// Whammy.js\r\n\r\n// todo: Firefox now supports webp for webm containers!\r\n// their MediaRecorder implementation works well!\r\n// should we provide an option to record via Whammy.js or MediaRecorder API is a better solution?\r\n\r\n/**\r\n * Whammy is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It is written by {@link https://github.com/antimatter15|antimatter15}\r\n * @summary A real time javascript webm encoder based on a canvas hack.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef Whammy\r\n * @class\r\n * @example\r\n * var recorder = new Whammy().Video(15);\r\n * recorder.add(context || canvas || dataURL);\r\n * var output = recorder.compile();\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\n\r\nvar Whammy = (function() {\r\n    // a more abstract-ish API\r\n\r\n    function WhammyVideo(duration) {\r\n        this.frames = [];\r\n        this.duration = duration || 1;\r\n        this.quality = 0.8;\r\n    }\r\n\r\n    /**\r\n     * Pass Canvas or Context or image/webp(string) to {@link Whammy} encoder.\r\n     * @method\r\n     * @memberof Whammy\r\n     * @example\r\n     * recorder = new Whammy().Video(0.8, 100);\r\n     * recorder.add(canvas || context || 'image/webp');\r\n     * @param {string} frame - Canvas || Context || image/webp\r\n     * @param {number} duration - Stick a duration (in milliseconds)\r\n     */\r\n    WhammyVideo.prototype.add = function(frame, duration) {\r\n        if ('canvas' in frame) { //CanvasRenderingContext2D\r\n            frame = frame.canvas;\r\n        }\r\n\r\n        if ('toDataURL' in frame) {\r\n            frame = frame.toDataURL('image/webp', this.quality);\r\n        }\r\n\r\n        if (!(/^data:image\\/webp;base64,/ig).test(frame)) {\r\n            throw 'Input must be formatted properly as a base64 encoded DataURI of type image/webp';\r\n        }\r\n        this.frames.push({\r\n            image: frame,\r\n            duration: duration || this.duration\r\n        });\r\n    };\r\n\r\n    function processInWebWorker(_function) {\r\n        var blob = URL.createObjectURL(new Blob([_function.toString(),\r\n            'this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n        ], {\r\n            type: 'application/javascript'\r\n        }));\r\n\r\n        var worker = new Worker(blob);\r\n        URL.revokeObjectURL(blob);\r\n        return worker;\r\n    }\r\n\r\n    function whammyInWebWorker(frames) {\r\n        function ArrayToWebM(frames) {\r\n            var info = checkFrames(frames);\r\n            if (!info) {\r\n                return [];\r\n            }\r\n\r\n            var clusterMaxDuration = 30000;\r\n\r\n            var EBML = [{\r\n                'id': 0x1a45dfa3, // EBML\r\n                'data': [{\r\n                    'data': 1,\r\n                    'id': 0x4286 // EBMLVersion\r\n                }, {\r\n                    'data': 1,\r\n                    'id': 0x42f7 // EBMLReadVersion\r\n                }, {\r\n                    'data': 4,\r\n                    'id': 0x42f2 // EBMLMaxIDLength\r\n                }, {\r\n                    'data': 8,\r\n                    'id': 0x42f3 // EBMLMaxSizeLength\r\n                }, {\r\n                    'data': 'webm',\r\n                    'id': 0x4282 // DocType\r\n                }, {\r\n                    'data': 2,\r\n                    'id': 0x4287 // DocTypeVersion\r\n                }, {\r\n                    'data': 2,\r\n                    'id': 0x4285 // DocTypeReadVersion\r\n                }]\r\n            }, {\r\n                'id': 0x18538067, // Segment\r\n                'data': [{\r\n                    'id': 0x1549a966, // Info\r\n                    'data': [{\r\n                        'data': 1e6, //do things in millisecs (num of nanosecs for duration scale)\r\n                        'id': 0x2ad7b1 // TimecodeScale\r\n                    }, {\r\n                        'data': 'whammy',\r\n                        'id': 0x4d80 // MuxingApp\r\n                    }, {\r\n                        'data': 'whammy',\r\n                        'id': 0x5741 // WritingApp\r\n                    }, {\r\n                        'data': doubleToString(info.duration),\r\n                        'id': 0x4489 // Duration\r\n                    }]\r\n                }, {\r\n                    'id': 0x1654ae6b, // Tracks\r\n                    'data': [{\r\n                        'id': 0xae, // TrackEntry\r\n                        'data': [{\r\n                            'data': 1,\r\n                            'id': 0xd7 // TrackNumber\r\n                        }, {\r\n                            'data': 1,\r\n                            'id': 0x73c5 // TrackUID\r\n                        }, {\r\n                            'data': 0,\r\n                            'id': 0x9c // FlagLacing\r\n                        }, {\r\n                            'data': 'und',\r\n                            'id': 0x22b59c // Language\r\n                        }, {\r\n                            'data': 'V_VP8',\r\n                            'id': 0x86 // CodecID\r\n                        }, {\r\n                            'data': 'VP8',\r\n                            'id': 0x258688 // CodecName\r\n                        }, {\r\n                            'data': 1,\r\n                            'id': 0x83 // TrackType\r\n                        }, {\r\n                            'id': 0xe0, // Video\r\n                            'data': [{\r\n                                'data': info.width,\r\n                                'id': 0xb0 // PixelWidth\r\n                            }, {\r\n                                'data': info.height,\r\n                                'id': 0xba // PixelHeight\r\n                            }]\r\n                        }]\r\n                    }]\r\n                }]\r\n            }];\r\n\r\n            //Generate clusters (max duration)\r\n            var frameNumber = 0;\r\n            var clusterTimecode = 0;\r\n            while (frameNumber < frames.length) {\r\n\r\n                var clusterFrames = [];\r\n                var clusterDuration = 0;\r\n                do {\r\n                    clusterFrames.push(frames[frameNumber]);\r\n                    clusterDuration += frames[frameNumber].duration;\r\n                    frameNumber++;\r\n                } while (frameNumber < frames.length && clusterDuration < clusterMaxDuration);\r\n\r\n                var clusterCounter = 0;\r\n                var cluster = {\r\n                    'id': 0x1f43b675, // Cluster\r\n                    'data': getClusterData(clusterTimecode, clusterCounter, clusterFrames)\r\n                }; //Add cluster to segment\r\n                EBML[1].data.push(cluster);\r\n                clusterTimecode += clusterDuration;\r\n            }\r\n\r\n            return generateEBML(EBML);\r\n        }\r\n\r\n        function getClusterData(clusterTimecode, clusterCounter, clusterFrames) {\r\n            return [{\r\n                'data': clusterTimecode,\r\n                'id': 0xe7 // Timecode\r\n            }].concat(clusterFrames.map(function(webp) {\r\n                var block = makeSimpleBlock({\r\n                    discardable: 0,\r\n                    frame: webp.data.slice(4),\r\n                    invisible: 0,\r\n                    keyframe: 1,\r\n                    lacing: 0,\r\n                    trackNum: 1,\r\n                    timecode: Math.round(clusterCounter)\r\n                });\r\n                clusterCounter += webp.duration;\r\n                return {\r\n                    data: block,\r\n                    id: 0xa3\r\n                };\r\n            }));\r\n        }\r\n\r\n        // sums the lengths of all the frames and gets the duration\r\n\r\n        function checkFrames(frames) {\r\n            if (!frames[0]) {\r\n                postMessage({\r\n                    error: 'Something went wrong. Maybe WebP format is not supported in the current browser.'\r\n                });\r\n                return;\r\n            }\r\n\r\n            var width = frames[0].width,\r\n                height = frames[0].height,\r\n                duration = frames[0].duration;\r\n\r\n            for (var i = 1; i < frames.length; i++) {\r\n                duration += frames[i].duration;\r\n            }\r\n            return {\r\n                duration: duration,\r\n                width: width,\r\n                height: height\r\n            };\r\n        }\r\n\r\n        function numToBuffer(num) {\r\n            var parts = [];\r\n            while (num > 0) {\r\n                parts.push(num & 0xff);\r\n                num = num >> 8;\r\n            }\r\n            return new Uint8Array(parts.reverse());\r\n        }\r\n\r\n        function strToBuffer(str) {\r\n            return new Uint8Array(str.split('').map(function(e) {\r\n                return e.charCodeAt(0);\r\n            }));\r\n        }\r\n\r\n        function bitsToBuffer(bits) {\r\n            var data = [];\r\n            var pad = (bits.length % 8) ? (new Array(1 + 8 - (bits.length % 8))).join('0') : '';\r\n            bits = pad + bits;\r\n            for (var i = 0; i < bits.length; i += 8) {\r\n                data.push(parseInt(bits.substr(i, 8), 2));\r\n            }\r\n            return new Uint8Array(data);\r\n        }\r\n\r\n        function generateEBML(json) {\r\n            var ebml = [];\r\n            for (var i = 0; i < json.length; i++) {\r\n                var data = json[i].data;\r\n\r\n                if (typeof data === 'object') {\r\n                    data = generateEBML(data);\r\n                }\r\n\r\n                if (typeof data === 'number') {\r\n                    data = bitsToBuffer(data.toString(2));\r\n                }\r\n\r\n                if (typeof data === 'string') {\r\n                    data = strToBuffer(data);\r\n                }\r\n\r\n                var len = data.size || data.byteLength || data.length;\r\n                var zeroes = Math.ceil(Math.ceil(Math.log(len) / Math.log(2)) / 8);\r\n                var sizeToString = len.toString(2);\r\n                var padded = (new Array((zeroes * 7 + 7 + 1) - sizeToString.length)).join('0') + sizeToString;\r\n                var size = (new Array(zeroes)).join('0') + '1' + padded;\r\n\r\n                ebml.push(numToBuffer(json[i].id));\r\n                ebml.push(bitsToBuffer(size));\r\n                ebml.push(data);\r\n            }\r\n\r\n            return new Blob(ebml, {\r\n                type: 'video/webm'\r\n            });\r\n        }\r\n\r\n        function toBinStrOld(bits) {\r\n            var data = '';\r\n            var pad = (bits.length % 8) ? (new Array(1 + 8 - (bits.length % 8))).join('0') : '';\r\n            bits = pad + bits;\r\n            for (var i = 0; i < bits.length; i += 8) {\r\n                data += String.fromCharCode(parseInt(bits.substr(i, 8), 2));\r\n            }\r\n            return data;\r\n        }\r\n\r\n        function makeSimpleBlock(data) {\r\n            var flags = 0;\r\n\r\n            if (data.keyframe) {\r\n                flags |= 128;\r\n            }\r\n\r\n            if (data.invisible) {\r\n                flags |= 8;\r\n            }\r\n\r\n            if (data.lacing) {\r\n                flags |= (data.lacing << 1);\r\n            }\r\n\r\n            if (data.discardable) {\r\n                flags |= 1;\r\n            }\r\n\r\n            if (data.trackNum > 127) {\r\n                throw 'TrackNumber > 127 not supported';\r\n            }\r\n\r\n            var out = [data.trackNum | 0x80, data.timecode >> 8, data.timecode & 0xff, flags].map(function(e) {\r\n                return String.fromCharCode(e);\r\n            }).join('') + data.frame;\r\n\r\n            return out;\r\n        }\r\n\r\n        function parseWebP(riff) {\r\n            var VP8 = riff.RIFF[0].WEBP[0];\r\n\r\n            var frameStart = VP8.indexOf('\\x9d\\x01\\x2a'); // A VP8 keyframe starts with the 0x9d012a header\r\n            for (var i = 0, c = []; i < 4; i++) {\r\n                c[i] = VP8.charCodeAt(frameStart + 3 + i);\r\n            }\r\n\r\n            var width, height, tmp;\r\n\r\n            //the code below is literally copied verbatim from the bitstream spec\r\n            tmp = (c[1] << 8) | c[0];\r\n            width = tmp & 0x3FFF;\r\n            tmp = (c[3] << 8) | c[2];\r\n            height = tmp & 0x3FFF;\r\n            return {\r\n                width: width,\r\n                height: height,\r\n                data: VP8,\r\n                riff: riff\r\n            };\r\n        }\r\n\r\n        function getStrLength(string, offset) {\r\n            return parseInt(string.substr(offset + 4, 4).split('').map(function(i) {\r\n                var unpadded = i.charCodeAt(0).toString(2);\r\n                return (new Array(8 - unpadded.length + 1)).join('0') + unpadded;\r\n            }).join(''), 2);\r\n        }\r\n\r\n        function parseRIFF(string) {\r\n            var offset = 0;\r\n            var chunks = {};\r\n\r\n            while (offset < string.length) {\r\n                var id = string.substr(offset, 4);\r\n                var len = getStrLength(string, offset);\r\n                var data = string.substr(offset + 4 + 4, len);\r\n                offset += 4 + 4 + len;\r\n                chunks[id] = chunks[id] || [];\r\n\r\n                if (id === 'RIFF' || id === 'LIST') {\r\n                    chunks[id].push(parseRIFF(data));\r\n                } else {\r\n                    chunks[id].push(data);\r\n                }\r\n            }\r\n            return chunks;\r\n        }\r\n\r\n        function doubleToString(num) {\r\n            return [].slice.call(\r\n                new Uint8Array((new Float64Array([num])).buffer), 0).map(function(e) {\r\n                return String.fromCharCode(e);\r\n            }).reverse().join('');\r\n        }\r\n\r\n        var webm = new ArrayToWebM(frames.map(function(frame) {\r\n            var webp = parseWebP(parseRIFF(atob(frame.image.slice(23))));\r\n            webp.duration = frame.duration;\r\n            return webp;\r\n        }));\r\n\r\n        postMessage(webm);\r\n    }\r\n\r\n    /**\r\n     * Encodes frames in WebM container. It uses WebWorkinvoke to invoke 'ArrayToWebM' method.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof Whammy\r\n     * @example\r\n     * recorder = new Whammy().Video(0.8, 100);\r\n     * recorder.compile(function(blob) {\r\n     *    // blob.size - blob.type\r\n     * });\r\n     */\r\n    WhammyVideo.prototype.compile = function(callback) {\r\n        var webWorker = processInWebWorker(whammyInWebWorker);\r\n\r\n        webWorker.onmessage = function(event) {\r\n            if (event.data.error) {\r\n                console.error(event.data.error);\r\n                return;\r\n            }\r\n            callback(event.data);\r\n        };\r\n\r\n        webWorker.postMessage(this.frames);\r\n    };\r\n\r\n    return {\r\n        /**\r\n         * A more abstract-ish API.\r\n         * @method\r\n         * @memberof Whammy\r\n         * @example\r\n         * recorder = new Whammy().Video(0.8, 100);\r\n         * @param {?number} speed - 0.8\r\n         * @param {?number} quality - 100\r\n         */\r\n        Video: WhammyVideo\r\n    };\r\n})();\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.Whammy = Whammy;\r\n}\n\r\n// ______________ (indexed-db)\r\n// DiskStorage.js\r\n\r\n/**\r\n * DiskStorage is a standalone object used by {@link RecordRTC} to store recorded blobs in IndexedDB storage.\r\n * @summary Writing blobs into IndexedDB.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @example\r\n * DiskStorage.Store({\r\n *     audioBlob: yourAudioBlob,\r\n *     videoBlob: yourVideoBlob,\r\n *     gifBlob  : yourGifBlob\r\n * });\r\n * DiskStorage.Fetch(function(dataURL, type) {\r\n *     if(type === 'audioBlob') { }\r\n *     if(type === 'videoBlob') { }\r\n *     if(type === 'gifBlob')   { }\r\n * });\r\n * // DiskStorage.dataStoreName = 'recordRTC';\r\n * // DiskStorage.onError = function(error) { };\r\n * @property {function} init - This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.\r\n * @property {function} Fetch - This method fetches stored blobs from IndexedDB.\r\n * @property {function} Store - This method stores blobs in IndexedDB.\r\n * @property {function} onError - This function is invoked for any known/unknown error.\r\n * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\n\r\n\r\nvar DiskStorage = {\r\n    /**\r\n     * This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.init();\r\n     */\r\n    init: function() {\r\n        var self = this;\r\n\r\n        if (typeof indexedDB === 'undefined' || typeof indexedDB.open === 'undefined') {\r\n            console.error('IndexedDB API are not available in this browser.');\r\n            return;\r\n        }\r\n\r\n        var dbVersion = 1;\r\n        var dbName = this.dbName || location.href.replace(/\\/|:|#|%|\\.|\\[|\\]/g, ''),\r\n            db;\r\n        var request = indexedDB.open(dbName, dbVersion);\r\n\r\n        function createObjectStore(dataBase) {\r\n            dataBase.createObjectStore(self.dataStoreName);\r\n        }\r\n\r\n        function putInDB() {\r\n            var transaction = db.transaction([self.dataStoreName], 'readwrite');\r\n\r\n            if (self.videoBlob) {\r\n                transaction.objectStore(self.dataStoreName).put(self.videoBlob, 'videoBlob');\r\n            }\r\n\r\n            if (self.gifBlob) {\r\n                transaction.objectStore(self.dataStoreName).put(self.gifBlob, 'gifBlob');\r\n            }\r\n\r\n            if (self.audioBlob) {\r\n                transaction.objectStore(self.dataStoreName).put(self.audioBlob, 'audioBlob');\r\n            }\r\n\r\n            function getFromStore(portionName) {\r\n                transaction.objectStore(self.dataStoreName).get(portionName).onsuccess = function(event) {\r\n                    if (self.callback) {\r\n                        self.callback(event.target.result, portionName);\r\n                    }\r\n                };\r\n            }\r\n\r\n            getFromStore('audioBlob');\r\n            getFromStore('videoBlob');\r\n            getFromStore('gifBlob');\r\n        }\r\n\r\n        request.onerror = self.onError;\r\n\r\n        request.onsuccess = function() {\r\n            db = request.result;\r\n            db.onerror = self.onError;\r\n\r\n            if (db.setVersion) {\r\n                if (db.version !== dbVersion) {\r\n                    var setVersion = db.setVersion(dbVersion);\r\n                    setVersion.onsuccess = function() {\r\n                        createObjectStore(db);\r\n                        putInDB();\r\n                    };\r\n                } else {\r\n                    putInDB();\r\n                }\r\n            } else {\r\n                putInDB();\r\n            }\r\n        };\r\n        request.onupgradeneeded = function(event) {\r\n            createObjectStore(event.target.result);\r\n        };\r\n    },\r\n    /**\r\n     * This method fetches stored blobs from IndexedDB.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.Fetch(function(dataURL, type) {\r\n     *     if(type === 'audioBlob') { }\r\n     *     if(type === 'videoBlob') { }\r\n     *     if(type === 'gifBlob')   { }\r\n     * });\r\n     */\r\n    Fetch: function(callback) {\r\n        this.callback = callback;\r\n        this.init();\r\n\r\n        return this;\r\n    },\r\n    /**\r\n     * This method stores blobs in IndexedDB.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.Store({\r\n     *     audioBlob: yourAudioBlob,\r\n     *     videoBlob: yourVideoBlob,\r\n     *     gifBlob  : yourGifBlob\r\n     * });\r\n     */\r\n    Store: function(config) {\r\n        this.audioBlob = config.audioBlob;\r\n        this.videoBlob = config.videoBlob;\r\n        this.gifBlob = config.gifBlob;\r\n\r\n        this.init();\r\n\r\n        return this;\r\n    },\r\n    /**\r\n     * This function is invoked for any known/unknown error.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.onError = function(error){\r\n     *     alerot( JSON.stringify(error) );\r\n     * };\r\n     */\r\n    onError: function(error) {\r\n        console.error(JSON.stringify(error, null, '\\t'));\r\n    },\r\n\r\n    /**\r\n     * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.dataStoreName = 'recordRTC';\r\n     */\r\n    dataStoreName: 'recordRTC',\r\n    dbName: null\r\n};\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.DiskStorage = DiskStorage;\r\n}\n\r\n// ______________\r\n// GifRecorder.js\r\n\r\n/**\r\n * GifRecorder is standalone calss used by {@link RecordRTC} to record video or canvas into animated gif.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef GifRecorder\r\n * @class\r\n * @example\r\n * var recorder = new GifRecorder(mediaStream || canvas || context, { onGifPreview: function, onGifRecordingStarted: function, width: 1280, height: 720, frameRate: 200, quality: 10 });\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     img.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object or HTMLCanvasElement or CanvasRenderingContext2D.\r\n * @param {object} config - {disableLogs:true, initCallback: function, width: 320, height: 240, frameRate: 200, quality: 10}\r\n */\r\n\r\nfunction GifRecorder(mediaStream, config) {\r\n    if (typeof GIFEncoder === 'undefined') {\r\n        var script = document.createElement('script');\r\n        script.src = 'https://www.webrtc-experiment.com/gif-recorder.js';\r\n        (document.body || document.documentElement).appendChild(script);\r\n    }\r\n\r\n    config = config || {};\r\n\r\n    var isHTMLObject = mediaStream instanceof CanvasRenderingContext2D || mediaStream instanceof HTMLCanvasElement;\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        if (typeof GIFEncoder === 'undefined') {\r\n            setTimeout(self.record, 1000);\r\n            return;\r\n        }\r\n\r\n        if (!isLoadedMetaData) {\r\n            setTimeout(self.record, 1000);\r\n            return;\r\n        }\r\n\r\n        if (!isHTMLObject) {\r\n            if (!config.width) {\r\n                config.width = video.offsetWidth || 320;\r\n            }\r\n\r\n            if (!config.height) {\r\n                config.height = video.offsetHeight || 240;\r\n            }\r\n\r\n            if (!config.video) {\r\n                config.video = {\r\n                    width: config.width,\r\n                    height: config.height\r\n                };\r\n            }\r\n\r\n            if (!config.canvas) {\r\n                config.canvas = {\r\n                    width: config.width,\r\n                    height: config.height\r\n                };\r\n            }\r\n\r\n            canvas.width = config.canvas.width || 320;\r\n            canvas.height = config.canvas.height || 240;\r\n\r\n            video.width = config.video.width || 320;\r\n            video.height = config.video.height || 240;\r\n        }\r\n\r\n        // external library to record as GIF images\r\n        gifEncoder = new GIFEncoder();\r\n\r\n        // void setRepeat(int iter) \r\n        // Sets the number of times the set of GIF frames should be played. \r\n        // Default is 1; 0 means play indefinitely.\r\n        gifEncoder.setRepeat(0);\r\n\r\n        // void setFrameRate(Number fps) \r\n        // Sets frame rate in frames per second. \r\n        // Equivalent to setDelay(1000/fps).\r\n        // Using \"setDelay\" instead of \"setFrameRate\"\r\n        gifEncoder.setDelay(config.frameRate || 200);\r\n\r\n        // void setQuality(int quality) \r\n        // Sets quality of color quantization (conversion of images to the \r\n        // maximum 256 colors allowed by the GIF specification). \r\n        // Lower values (minimum = 1) produce better colors, \r\n        // but slow processing significantly. 10 is the default, \r\n        // and produces good color mapping at reasonable speeds. \r\n        // Values greater than 20 do not yield significant improvements in speed.\r\n        gifEncoder.setQuality(config.quality || 10);\r\n\r\n        // Boolean start() \r\n        // This writes the GIF Header and returns false if it fails.\r\n        gifEncoder.start();\r\n\r\n        if (typeof config.onGifRecordingStarted === 'function') {\r\n            config.onGifRecordingStarted();\r\n        }\r\n\r\n        startTime = Date.now();\r\n\r\n        function drawVideoFrame(time) {\r\n            if (self.clearedRecordedData === true) {\r\n                return;\r\n            }\r\n\r\n            if (isPausedRecording) {\r\n                return setTimeout(function() {\r\n                    drawVideoFrame(time);\r\n                }, 100);\r\n            }\r\n\r\n            lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\r\n\r\n            if (typeof lastFrameTime === undefined) {\r\n                lastFrameTime = time;\r\n            }\r\n\r\n            // ~10 fps\r\n            if (time - lastFrameTime < 90) {\r\n                return;\r\n            }\r\n\r\n            if (!isHTMLObject && video.paused) {\r\n                // via: https://github.com/muaz-khan/WebRTC-Experiment/pull/316\r\n                // Tweak for Android Chrome\r\n                video.play();\r\n            }\r\n\r\n            if (!isHTMLObject) {\r\n                context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n            }\r\n\r\n            if (config.onGifPreview) {\r\n                config.onGifPreview(canvas.toDataURL('image/png'));\r\n            }\r\n\r\n            gifEncoder.addFrame(context);\r\n            lastFrameTime = time;\r\n        }\r\n\r\n        lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\r\n\r\n        if (config.initCallback) {\r\n            config.initCallback();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     img.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        if (lastAnimationFrame) {\r\n            cancelAnimationFrame(lastAnimationFrame);\r\n        }\r\n\r\n        endTime = Date.now();\r\n\r\n        /**\r\n         * @property {Blob} blob - The recorded blob object.\r\n         * @memberof GifRecorder\r\n         * @example\r\n         * recorder.stop(function(){\r\n         *     var blob = recorder.blob;\r\n         * });\r\n         */\r\n        this.blob = new Blob([new Uint8Array(gifEncoder.stream().bin)], {\r\n            type: 'image/gif'\r\n        });\r\n\r\n        callback(this.blob);\r\n\r\n        // bug: find a way to clear old recorded blobs\r\n        gifEncoder.stream().bin = [];\r\n    };\r\n\r\n    var isPausedRecording = false;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPausedRecording = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPausedRecording = false;\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        self.clearedRecordedData = true;\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        if (gifEncoder) {\r\n            gifEncoder.stream().bin = [];\r\n        }\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'GifRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n\r\n    if (isHTMLObject) {\r\n        if (mediaStream instanceof CanvasRenderingContext2D) {\r\n            context = mediaStream;\r\n            canvas = context.canvas;\r\n        } else if (mediaStream instanceof HTMLCanvasElement) {\r\n            context = mediaStream.getContext('2d');\r\n            canvas = mediaStream;\r\n        }\r\n    }\r\n\r\n    var isLoadedMetaData = true;\r\n\r\n    if (!isHTMLObject) {\r\n        var video = document.createElement('video');\r\n        video.muted = true;\r\n        video.autoplay = true;\r\n        video.playsInline = true;\r\n\r\n        isLoadedMetaData = false;\r\n        video.onloadedmetadata = function() {\r\n            isLoadedMetaData = true;\r\n        };\r\n\r\n        setSrcObject(mediaStream, video);\r\n\r\n        video.play();\r\n    }\r\n\r\n    var lastAnimationFrame = null;\r\n    var startTime, endTime, lastFrameTime;\r\n\r\n    var gifEncoder;\r\n\r\n    var self = this;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.GifRecorder = GifRecorder;\r\n}\n\r\n// Last time updated: 2019-06-21 4:09:42 AM UTC\r\n\r\n// ________________________\r\n// MultiStreamsMixer v1.2.2\r\n\r\n// Open-Sourced: https://github.com/muaz-khan/MultiStreamsMixer\r\n\r\n// --------------------------------------------------\r\n// Muaz Khan     - www.MuazKhan.com\r\n// MIT License   - www.WebRTC-Experiment.com/licence\r\n// --------------------------------------------------\r\n\r\nfunction MultiStreamsMixer(arrayOfMediaStreams, elementClass) {\r\n\r\n    var browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\r\n\r\n    (function(that) {\r\n        if (typeof RecordRTC !== 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (!that) {\r\n            return;\r\n        }\r\n\r\n        if (typeof window !== 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (typeof global === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        global.navigator = {\r\n            userAgent: browserFakeUserAgent,\r\n            getUserMedia: function() {}\r\n        };\r\n\r\n        if (!global.console) {\r\n            global.console = {};\r\n        }\r\n\r\n        if (typeof global.console.log === 'undefined' || typeof global.console.error === 'undefined') {\r\n            global.console.error = global.console.log = global.console.log || function() {\r\n                console.log(arguments);\r\n            };\r\n        }\r\n\r\n        if (typeof document === 'undefined') {\r\n            /*global document:true */\r\n            that.document = {\r\n                documentElement: {\r\n                    appendChild: function() {\r\n                        return '';\r\n                    }\r\n                }\r\n            };\r\n\r\n            document.createElement = document.captureStream = document.mozCaptureStream = function() {\r\n                var obj = {\r\n                    getContext: function() {\r\n                        return obj;\r\n                    },\r\n                    play: function() {},\r\n                    pause: function() {},\r\n                    drawImage: function() {},\r\n                    toDataURL: function() {\r\n                        return '';\r\n                    },\r\n                    style: {}\r\n                };\r\n                return obj;\r\n            };\r\n\r\n            that.HTMLVideoElement = function() {};\r\n        }\r\n\r\n        if (typeof location === 'undefined') {\r\n            /*global location:true */\r\n            that.location = {\r\n                protocol: 'file:',\r\n                href: '',\r\n                hash: ''\r\n            };\r\n        }\r\n\r\n        if (typeof screen === 'undefined') {\r\n            /*global screen:true */\r\n            that.screen = {\r\n                width: 0,\r\n                height: 0\r\n            };\r\n        }\r\n\r\n        if (typeof URL === 'undefined') {\r\n            /*global screen:true */\r\n            that.URL = {\r\n                createObjectURL: function() {\r\n                    return '';\r\n                },\r\n                revokeObjectURL: function() {\r\n                    return '';\r\n                }\r\n            };\r\n        }\r\n\r\n        /*global window:true */\r\n        that.window = global;\r\n    })(typeof global !== 'undefined' ? global : null);\r\n\r\n    // requires: chrome://flags/#enable-experimental-web-platform-features\r\n\r\n    elementClass = elementClass || 'multi-streams-mixer';\r\n\r\n    var videos = [];\r\n    var isStopDrawingFrames = false;\r\n\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n    canvas.style.opacity = 0;\r\n    canvas.style.position = 'absolute';\r\n    canvas.style.zIndex = -1;\r\n    canvas.style.top = '-1000em';\r\n    canvas.style.left = '-1000em';\r\n    canvas.className = elementClass;\r\n    (document.body || document.documentElement).appendChild(canvas);\r\n\r\n    this.disableLogs = false;\r\n    this.frameInterval = 10;\r\n\r\n    this.width = 360;\r\n    this.height = 240;\r\n\r\n    // use gain node to prevent echo\r\n    this.useGainNode = true;\r\n\r\n    var self = this;\r\n\r\n    // _____________________________\r\n    // Cross-Browser-Declarations.js\r\n\r\n    // WebAudio API representer\r\n    var AudioContext = window.AudioContext;\r\n\r\n    if (typeof AudioContext === 'undefined') {\r\n        if (typeof webkitAudioContext !== 'undefined') {\r\n            /*global AudioContext:true */\r\n            AudioContext = webkitAudioContext;\r\n        }\r\n\r\n        if (typeof mozAudioContext !== 'undefined') {\r\n            /*global AudioContext:true */\r\n            AudioContext = mozAudioContext;\r\n        }\r\n    }\r\n\r\n    /*jshint -W079 */\r\n    var URL = window.URL;\r\n\r\n    if (typeof URL === 'undefined' && typeof webkitURL !== 'undefined') {\r\n        /*global URL:true */\r\n        URL = webkitURL;\r\n    }\r\n\r\n    if (typeof navigator !== 'undefined' && typeof navigator.getUserMedia === 'undefined') { // maybe window.navigator?\r\n        if (typeof navigator.webkitGetUserMedia !== 'undefined') {\r\n            navigator.getUserMedia = navigator.webkitGetUserMedia;\r\n        }\r\n\r\n        if (typeof navigator.mozGetUserMedia !== 'undefined') {\r\n            navigator.getUserMedia = navigator.mozGetUserMedia;\r\n        }\r\n    }\r\n\r\n    var MediaStream = window.MediaStream;\r\n\r\n    if (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\r\n        MediaStream = webkitMediaStream;\r\n    }\r\n\r\n    /*global MediaStream:true */\r\n    if (typeof MediaStream !== 'undefined') {\r\n        // override \"stop\" method for all browsers\r\n        if (typeof MediaStream.prototype.stop === 'undefined') {\r\n            MediaStream.prototype.stop = function() {\r\n                this.getTracks().forEach(function(track) {\r\n                    track.stop();\r\n                });\r\n            };\r\n        }\r\n    }\r\n\r\n    var Storage = {};\r\n\r\n    if (typeof AudioContext !== 'undefined') {\r\n        Storage.AudioContext = AudioContext;\r\n    } else if (typeof webkitAudioContext !== 'undefined') {\r\n        Storage.AudioContext = webkitAudioContext;\r\n    }\r\n\r\n    function setSrcObject(stream, element) {\r\n        if ('srcObject' in element) {\r\n            element.srcObject = stream;\r\n        } else if ('mozSrcObject' in element) {\r\n            element.mozSrcObject = stream;\r\n        } else {\r\n            element.srcObject = stream;\r\n        }\r\n    }\r\n\r\n    this.startDrawingFrames = function() {\r\n        drawVideosToCanvas();\r\n    };\r\n\r\n    function drawVideosToCanvas() {\r\n        if (isStopDrawingFrames) {\r\n            return;\r\n        }\r\n\r\n        var videosLength = videos.length;\r\n\r\n        var fullcanvas = false;\r\n        var remaining = [];\r\n        videos.forEach(function(video) {\r\n            if (!video.stream) {\r\n                video.stream = {};\r\n            }\r\n\r\n            if (video.stream.fullcanvas) {\r\n                fullcanvas = video;\r\n            } else {\r\n                // todo: video.stream.active or video.stream.live to fix blank frames issues?\r\n                remaining.push(video);\r\n            }\r\n        });\r\n\r\n        if (fullcanvas) {\r\n            canvas.width = fullcanvas.stream.width;\r\n            canvas.height = fullcanvas.stream.height;\r\n        } else if (remaining.length) {\r\n            canvas.width = videosLength > 1 ? remaining[0].width * 2 : remaining[0].width;\r\n\r\n            var height = 1;\r\n            if (videosLength === 3 || videosLength === 4) {\r\n                height = 2;\r\n            }\r\n            if (videosLength === 5 || videosLength === 6) {\r\n                height = 3;\r\n            }\r\n            if (videosLength === 7 || videosLength === 8) {\r\n                height = 4;\r\n            }\r\n            if (videosLength === 9 || videosLength === 10) {\r\n                height = 5;\r\n            }\r\n            canvas.height = remaining[0].height * height;\r\n        } else {\r\n            canvas.width = self.width || 360;\r\n            canvas.height = self.height || 240;\r\n        }\r\n\r\n        if (fullcanvas && fullcanvas instanceof HTMLVideoElement) {\r\n            drawImage(fullcanvas);\r\n        }\r\n\r\n        remaining.forEach(function(video, idx) {\r\n            drawImage(video, idx);\r\n        });\r\n\r\n        setTimeout(drawVideosToCanvas, self.frameInterval);\r\n    }\r\n\r\n    function drawImage(video, idx) {\r\n        if (isStopDrawingFrames) {\r\n            return;\r\n        }\r\n\r\n        var x = 0;\r\n        var y = 0;\r\n        var width = video.width;\r\n        var height = video.height;\r\n\r\n        if (idx === 1) {\r\n            x = video.width;\r\n        }\r\n\r\n        if (idx === 2) {\r\n            y = video.height;\r\n        }\r\n\r\n        if (idx === 3) {\r\n            x = video.width;\r\n            y = video.height;\r\n        }\r\n\r\n        if (idx === 4) {\r\n            y = video.height * 2;\r\n        }\r\n\r\n        if (idx === 5) {\r\n            x = video.width;\r\n            y = video.height * 2;\r\n        }\r\n\r\n        if (idx === 6) {\r\n            y = video.height * 3;\r\n        }\r\n\r\n        if (idx === 7) {\r\n            x = video.width;\r\n            y = video.height * 3;\r\n        }\r\n\r\n        if (typeof video.stream.left !== 'undefined') {\r\n            x = video.stream.left;\r\n        }\r\n\r\n        if (typeof video.stream.top !== 'undefined') {\r\n            y = video.stream.top;\r\n        }\r\n\r\n        if (typeof video.stream.width !== 'undefined') {\r\n            width = video.stream.width;\r\n        }\r\n\r\n        if (typeof video.stream.height !== 'undefined') {\r\n            height = video.stream.height;\r\n        }\r\n\r\n        context.drawImage(video, x, y, width, height);\r\n\r\n        if (typeof video.stream.onRender === 'function') {\r\n            video.stream.onRender(context, x, y, width, height, idx);\r\n        }\r\n    }\r\n\r\n    function getMixedStream() {\r\n        isStopDrawingFrames = false;\r\n        var mixedVideoStream = getMixedVideoStream();\r\n\r\n        var mixedAudioStream = getMixedAudioStream();\r\n        if (mixedAudioStream) {\r\n            mixedAudioStream.getTracks().filter(function(t) {\r\n                return t.kind === 'audio';\r\n            }).forEach(function(track) {\r\n                mixedVideoStream.addTrack(track);\r\n            });\r\n        }\r\n\r\n        var fullcanvas;\r\n        arrayOfMediaStreams.forEach(function(stream) {\r\n            if (stream.fullcanvas) {\r\n                fullcanvas = true;\r\n            }\r\n        });\r\n\r\n        // mixedVideoStream.prototype.appendStreams = appendStreams;\r\n        // mixedVideoStream.prototype.resetVideoStreams = resetVideoStreams;\r\n        // mixedVideoStream.prototype.clearRecordedData = clearRecordedData;\r\n\r\n        return mixedVideoStream;\r\n    }\r\n\r\n    function getMixedVideoStream() {\r\n        resetVideoStreams();\r\n\r\n        var capturedStream;\r\n\r\n        if ('captureStream' in canvas) {\r\n            capturedStream = canvas.captureStream();\r\n        } else if ('mozCaptureStream' in canvas) {\r\n            capturedStream = canvas.mozCaptureStream();\r\n        } else if (!self.disableLogs) {\r\n            console.error('Upgrade to latest Chrome or otherwise enable this flag: chrome://flags/#enable-experimental-web-platform-features');\r\n        }\r\n\r\n        var videoStream = new MediaStream();\r\n\r\n        capturedStream.getTracks().filter(function(t) {\r\n            return t.kind === 'video';\r\n        }).forEach(function(track) {\r\n            videoStream.addTrack(track);\r\n        });\r\n\r\n        canvas.stream = videoStream;\r\n\r\n        return videoStream;\r\n    }\r\n\r\n    function getMixedAudioStream() {\r\n        // via: @pehrsons\r\n        if (!Storage.AudioContextConstructor) {\r\n            Storage.AudioContextConstructor = new Storage.AudioContext();\r\n        }\r\n\r\n        self.audioContext = Storage.AudioContextConstructor;\r\n\r\n        self.audioSources = [];\r\n\r\n        if (self.useGainNode === true) {\r\n            self.gainNode = self.audioContext.createGain();\r\n            self.gainNode.connect(self.audioContext.destination);\r\n            self.gainNode.gain.value = 0; // don't hear self\r\n        }\r\n\r\n        var audioTracksLength = 0;\r\n        arrayOfMediaStreams.forEach(function(stream) {\r\n            if (!stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'audio';\r\n                }).length) {\r\n                return;\r\n            }\r\n\r\n            audioTracksLength++;\r\n\r\n            var audioSource = self.audioContext.createMediaStreamSource(stream);\r\n\r\n            if (self.useGainNode === true) {\r\n                audioSource.connect(self.gainNode);\r\n            }\r\n\r\n            self.audioSources.push(audioSource);\r\n        });\r\n\r\n        if (!audioTracksLength) {\r\n            // because \"self.audioContext\" is not initialized\r\n            // that's why we've to ignore rest of the code\r\n            return;\r\n        }\r\n\r\n        self.audioDestination = self.audioContext.createMediaStreamDestination();\r\n        self.audioSources.forEach(function(audioSource) {\r\n            audioSource.connect(self.audioDestination);\r\n        });\r\n        return self.audioDestination.stream;\r\n    }\r\n\r\n    function getVideo(stream) {\r\n        var video = document.createElement('video');\r\n\r\n        setSrcObject(stream, video);\r\n\r\n        video.className = elementClass;\r\n\r\n        video.muted = true;\r\n        video.volume = 0;\r\n\r\n        video.width = stream.width || self.width || 360;\r\n        video.height = stream.height || self.height || 240;\r\n\r\n        video.play();\r\n\r\n        return video;\r\n    }\r\n\r\n    this.appendStreams = function(streams) {\r\n        if (!streams) {\r\n            throw 'First parameter is required.';\r\n        }\r\n\r\n        if (!(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        streams.forEach(function(stream) {\r\n            var newStream = new MediaStream();\r\n\r\n            if (stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'video';\r\n                }).length) {\r\n                var video = getVideo(stream);\r\n                video.stream = stream;\r\n                videos.push(video);\r\n\r\n                newStream.addTrack(stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'video';\r\n                })[0]);\r\n            }\r\n\r\n            if (stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'audio';\r\n                }).length) {\r\n                var audioSource = self.audioContext.createMediaStreamSource(stream);\r\n                self.audioDestination = self.audioContext.createMediaStreamDestination();\r\n                audioSource.connect(self.audioDestination);\r\n\r\n                newStream.addTrack(self.audioDestination.stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'audio';\r\n                })[0]);\r\n            }\r\n\r\n            arrayOfMediaStreams.push(newStream);\r\n        });\r\n    };\r\n\r\n    this.releaseStreams = function() {\r\n        videos = [];\r\n        isStopDrawingFrames = true;\r\n\r\n        if (self.gainNode) {\r\n            self.gainNode.disconnect();\r\n            self.gainNode = null;\r\n        }\r\n\r\n        if (self.audioSources.length) {\r\n            self.audioSources.forEach(function(source) {\r\n                source.disconnect();\r\n            });\r\n            self.audioSources = [];\r\n        }\r\n\r\n        if (self.audioDestination) {\r\n            self.audioDestination.disconnect();\r\n            self.audioDestination = null;\r\n        }\r\n\r\n        if (self.audioContext) {\r\n            self.audioContext.close();\r\n        }\r\n\r\n        self.audioContext = null;\r\n\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        if (canvas.stream) {\r\n            canvas.stream.stop();\r\n            canvas.stream = null;\r\n        }\r\n    };\r\n\r\n    this.resetVideoStreams = function(streams) {\r\n        if (streams && !(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        resetVideoStreams(streams);\r\n    };\r\n\r\n    function resetVideoStreams(streams) {\r\n        videos = [];\r\n        streams = streams || arrayOfMediaStreams;\r\n\r\n        // via: @adrian-ber\r\n        streams.forEach(function(stream) {\r\n            if (!stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'video';\r\n                }).length) {\r\n                return;\r\n            }\r\n\r\n            var video = getVideo(stream);\r\n            video.stream = stream;\r\n            videos.push(video);\r\n        });\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'MultiStreamsMixer';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    this.getMixedStream = getMixedStream;\r\n\r\n}\r\n\r\nif (typeof RecordRTC === 'undefined') {\r\n    if (typeof module !== 'undefined' /* && !!module.exports*/ ) {\r\n        module.exports = MultiStreamsMixer;\r\n    }\r\n\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('MultiStreamsMixer', [], function() {\r\n            return MultiStreamsMixer;\r\n        });\r\n    }\r\n}\n\r\n// ______________________\r\n// MultiStreamRecorder.js\r\n\r\n/*\r\n * Video conference recording, using captureStream API along with WebAudio and Canvas2D API.\r\n */\r\n\r\n/**\r\n * MultiStreamRecorder can record multiple videos in single container.\r\n * @summary Multi-videos recorder.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef MultiStreamRecorder\r\n * @class\r\n * @example\r\n * var options = {\r\n *     mimeType: 'video/webm'\r\n * }\r\n * var recorder = new MultiStreamRecorder(ArrayOfMediaStreams, options);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n *\r\n *     // or\r\n *     var blob = recorder.blob;\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStreams} mediaStreams - Array of MediaStreams.\r\n * @param {object} config - {disableLogs:true, frameInterval: 1, mimeType: \"video/webm\"}\r\n */\r\n\r\nfunction MultiStreamRecorder(arrayOfMediaStreams, options) {\r\n    arrayOfMediaStreams = arrayOfMediaStreams || [];\r\n    var self = this;\r\n\r\n    var mixer;\r\n    var mediaRecorder;\r\n\r\n    options = options || {\r\n        elementClass: 'multi-streams-mixer',\r\n        mimeType: 'video/webm',\r\n        video: {\r\n            width: 360,\r\n            height: 240\r\n        }\r\n    };\r\n\r\n    if (!options.frameInterval) {\r\n        options.frameInterval = 10;\r\n    }\r\n\r\n    if (!options.video) {\r\n        options.video = {};\r\n    }\r\n\r\n    if (!options.video.width) {\r\n        options.video.width = 360;\r\n    }\r\n\r\n    if (!options.video.height) {\r\n        options.video.height = 240;\r\n    }\r\n\r\n    /**\r\n     * This method records all MediaStreams.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        // github/muaz-khan/MultiStreamsMixer\r\n        mixer = new MultiStreamsMixer(arrayOfMediaStreams, options.elementClass || 'multi-streams-mixer');\r\n\r\n        if (getAllVideoTracks().length) {\r\n            mixer.frameInterval = options.frameInterval || 10;\r\n            mixer.width = options.video.width || 360;\r\n            mixer.height = options.video.height || 240;\r\n            mixer.startDrawingFrames();\r\n        }\r\n\r\n        if (options.previewStream && typeof options.previewStream === 'function') {\r\n            options.previewStream(mixer.getMixedStream());\r\n        }\r\n\r\n        // record using MediaRecorder API\r\n        mediaRecorder = new MediaStreamRecorder(mixer.getMixedStream(), options);\r\n        mediaRecorder.record();\r\n    };\r\n\r\n    function getAllVideoTracks() {\r\n        var tracks = [];\r\n        arrayOfMediaStreams.forEach(function(stream) {\r\n            getTracks(stream, 'video').forEach(function(track) {\r\n                tracks.push(track);\r\n            });\r\n        });\r\n        return tracks;\r\n    }\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        mediaRecorder.stop(function(blob) {\r\n            self.blob = blob;\r\n\r\n            callback(blob);\r\n\r\n            self.clearRecordedData();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        if (mediaRecorder) {\r\n            mediaRecorder.pause();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        if (mediaRecorder) {\r\n            mediaRecorder.resume();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (mediaRecorder) {\r\n            mediaRecorder.clearRecordedData();\r\n            mediaRecorder = null;\r\n        }\r\n\r\n        if (mixer) {\r\n            mixer.releaseStreams();\r\n            mixer = null;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Add extra media-streams to existing recordings.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @param {MediaStreams} mediaStreams - Array of MediaStreams\r\n     * @example\r\n     * recorder.addStreams([newAudioStream, newVideoStream]);\r\n     */\r\n    this.addStreams = function(streams) {\r\n        if (!streams) {\r\n            throw 'First parameter is required.';\r\n        }\r\n\r\n        if (!(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        arrayOfMediaStreams.concat(streams);\r\n\r\n        if (!mediaRecorder || !mixer) {\r\n            return;\r\n        }\r\n\r\n        mixer.appendStreams(streams);\r\n\r\n        if (options.previewStream && typeof options.previewStream === 'function') {\r\n            options.previewStream(mixer.getMixedStream());\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Reset videos during live recording. Replace old videos e.g. replace cameras with full-screen.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @param {MediaStreams} mediaStreams - Array of MediaStreams\r\n     * @example\r\n     * recorder.resetVideoStreams([newVideo1, newVideo2]);\r\n     */\r\n    this.resetVideoStreams = function(streams) {\r\n        if (!mixer) {\r\n            return;\r\n        }\r\n\r\n        if (streams && !(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        mixer.resetVideoStreams(streams);\r\n    };\r\n\r\n    /**\r\n     * Returns MultiStreamsMixer\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * let mixer = recorder.getMixer();\r\n     * mixer.appendStreams([newStream]);\r\n     */\r\n    this.getMixer = function() {\r\n        return mixer;\r\n    };\r\n\r\n    // for debugging\r\n    this.name = 'MultiStreamRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.MultiStreamRecorder = MultiStreamRecorder;\r\n}\n\r\n// _____________________\r\n// RecordRTC.promises.js\r\n\r\n/**\r\n * RecordRTCPromisesHandler adds promises support in {@link RecordRTC}. Try a {@link https://github.com/muaz-khan/RecordRTC/blob/master/simple-demos/RecordRTCPromisesHandler.html|demo here}\r\n * @summary Promises for {@link RecordRTC}\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef RecordRTCPromisesHandler\r\n * @class\r\n * @example\r\n * var recorder = new RecordRTCPromisesHandler(mediaStream, options);\r\n * recorder.startRecording()\r\n *         .then(successCB)\r\n *         .catch(errorCB);\r\n * // Note: You can access all RecordRTC API using \"recorder.recordRTC\" e.g. \r\n * recorder.recordRTC.onStateChanged = function(state) {};\r\n * recorder.recordRTC.setRecordingDuration(5000);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.\r\n * @param {object} config - {type:\"video\", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}\r\n * @throws Will throw an error if \"new\" keyword is not used to initiate \"RecordRTCPromisesHandler\". Also throws error if first argument \"MediaStream\" is missing.\r\n * @requires {@link RecordRTC}\r\n */\r\n\r\nfunction RecordRTCPromisesHandler(mediaStream, options) {\r\n    if (!this) {\r\n        throw 'Use \"new RecordRTCPromisesHandler()\"';\r\n    }\r\n\r\n    if (typeof mediaStream === 'undefined') {\r\n        throw 'First argument \"MediaStream\" is required.';\r\n    }\r\n\r\n    var self = this;\r\n\r\n    /**\r\n     * @property {Blob} blob - Access/reach the native {@link RecordRTC} object.\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * let internal = recorder.recordRTC.getInternalRecorder();\r\n     * alert(internal instanceof MediaStreamRecorder);\r\n     * recorder.recordRTC.onStateChanged = function(state) {};\r\n     */\r\n    self.recordRTC = new RecordRTC(mediaStream, options);\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.startRecording()\r\n     *         .then(successCB)\r\n     *         .catch(errorCB);\r\n     */\r\n    this.startRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.startRecording();\r\n                resolve();\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method stops the recording.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.stopRecording().then(function() {\r\n     *     var blob = recorder.getBlob();\r\n     * }).catch(errorCB);\r\n     */\r\n    this.stopRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.stopRecording(function(url) {\r\n                    self.blob = self.recordRTC.getBlob();\r\n\r\n                    if (!self.blob || !self.blob.size) {\r\n                        reject('Empty blob.', self.blob);\r\n                        return;\r\n                    }\r\n\r\n                    resolve(url);\r\n                });\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method pauses the recording. You can resume recording using \"resumeRecording\" method.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.pauseRecording()\r\n     *         .then(successCB)\r\n     *         .catch(errorCB);\r\n     */\r\n    this.pauseRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.pauseRecording();\r\n                resolve();\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.resumeRecording()\r\n     *         .then(successCB)\r\n     *         .catch(errorCB);\r\n     */\r\n    this.resumeRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.resumeRecording();\r\n                resolve();\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method returns data-url for the recorded blob.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.stopRecording().then(function() {\r\n     *     recorder.getDataURL().then(function(dataURL) {\r\n     *         window.open(dataURL);\r\n     *     }).catch(errorCB);;\r\n     * }).catch(errorCB);\r\n     */\r\n    this.getDataURL = function(callback) {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.getDataURL(function(dataURL) {\r\n                    resolve(dataURL);\r\n                });\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method returns the recorded blob.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.stopRecording().then(function() {\r\n     *     recorder.getBlob().then(function(blob) {})\r\n     * }).catch(errorCB);\r\n     */\r\n    this.getBlob = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.getBlob());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method returns the internal recording object.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * let internalRecorder = await recorder.getInternalRecorder();\r\n     * if(internalRecorder instanceof MultiStreamRecorder) {\r\n     *     internalRecorder.addStreams([newAudioStream]);\r\n     *     internalRecorder.resetVideoStreams([screenStream]);\r\n     * }\r\n     * @returns {Object} \r\n     */\r\n    this.getInternalRecorder = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.getInternalRecorder());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method resets the recorder. So that you can reuse single recorder instance many times.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * await recorder.reset();\r\n     * recorder.startRecording(); // record again\r\n     */\r\n    this.reset = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.reset());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Destroy RecordRTC instance. Clear all recorders and objects.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.destroy().then(successCB).catch(errorCB);\r\n     */\r\n    this.destroy = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.destroy());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Get recorder's readonly state.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * let state = await recorder.getState();\r\n     * // or\r\n     * recorder.getState().then(state => { console.log(state); })\r\n     * @returns {String} Returns recording state.\r\n     */\r\n    this.getState = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.getState());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @property {Blob} blob - Recorded data as \"Blob\" object.\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * await recorder.stopRecording();\r\n     * let blob = recorder.getBlob(); // or \"recorder.recordRTC.blob\"\r\n     * invokeSaveAsDialog(blob);\r\n     */\r\n    this.blob = null;\r\n\r\n    /**\r\n     * RecordRTC version number\r\n     * @property {String} version - Release version number.\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @static\r\n     * @readonly\r\n     * @example\r\n     * alert(recorder.version);\r\n     */\r\n    this.version = '5.6.2';\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.RecordRTCPromisesHandler = RecordRTCPromisesHandler;\r\n}\n\r\n// ______________________\r\n// WebAssemblyRecorder.js\r\n\r\n/**\r\n * WebAssemblyRecorder lets you create webm videos in JavaScript via WebAssembly. The library consumes raw RGBA32 buffers (4 bytes per pixel) and turns them into a webm video with the given framerate and quality. This makes it compatible out-of-the-box with ImageData from a CANVAS. With realtime mode you can also use webm-wasm for streaming webm videos.\r\n * @summary Video recording feature in Chrome, Firefox and maybe Edge.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef WebAssemblyRecorder\r\n * @class\r\n * @example\r\n * var recorder = new WebAssemblyRecorder(mediaStream);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {webAssemblyPath:'webm-wasm.wasm',workerPath: 'webm-worker.js', frameRate: 30, width: 1920, height: 1080, bitrate: 1024, realtime: true}\r\n */\r\nfunction WebAssemblyRecorder(stream, config) {\r\n    // based on: github.com/GoogleChromeLabs/webm-wasm\r\n\r\n    if (typeof ReadableStream === 'undefined' || typeof WritableStream === 'undefined') {\r\n        // because it fixes readable/writable streams issues\r\n        console.error('Following polyfill is strongly recommended: https://unpkg.com/@mattiasbuelens/web-streams-polyfill/dist/polyfill.min.js');\r\n    }\r\n\r\n    config = config || {};\r\n\r\n    config.width = config.width || 640;\r\n    config.height = config.height || 480;\r\n    config.frameRate = config.frameRate || 30;\r\n    config.bitrate = config.bitrate || 1200;\r\n    config.realtime = config.realtime || true;\r\n\r\n    function createBufferURL(buffer, type) {\r\n        return URL.createObjectURL(new Blob([buffer], {\r\n            type: type || ''\r\n        }));\r\n    }\r\n\r\n    var finished;\r\n\r\n    function cameraStream() {\r\n        return new ReadableStream({\r\n            start: function(controller) {\r\n                var cvs = document.createElement('canvas');\r\n                var video = document.createElement('video');\r\n                var first = true;\r\n                video.srcObject = stream;\r\n                video.muted = true;\r\n                video.height = config.height;\r\n                video.width = config.width;\r\n                video.volume = 0;\r\n                video.onplaying = function() {\r\n                    cvs.width = config.width;\r\n                    cvs.height = config.height;\r\n                    var ctx = cvs.getContext('2d');\r\n                    var frameTimeout = 1000 / config.frameRate;\r\n                    var cameraTimer = setInterval(function f() {\r\n                        if (finished) {\r\n                            clearInterval(cameraTimer);\r\n                            controller.close();\r\n                        }\r\n\r\n                        if (first) {\r\n                            first = false;\r\n                            if (config.onVideoProcessStarted) {\r\n                                config.onVideoProcessStarted();\r\n                            }\r\n                        }\r\n\r\n                        ctx.drawImage(video, 0, 0);\r\n                        if (controller._controlledReadableStream.state !== 'closed') {\r\n                            try {\r\n                                controller.enqueue(\r\n                                    ctx.getImageData(0, 0, config.width, config.height)\r\n                                );\r\n                            } catch (e) {}\r\n                        }\r\n                    }, frameTimeout);\r\n                };\r\n                video.play();\r\n            }\r\n        });\r\n    }\r\n\r\n    var worker;\r\n\r\n    function startRecording(stream, buffer) {\r\n        if (!config.workerPath && !buffer) {\r\n            finished = false;\r\n\r\n            // is it safe to use @latest ?\r\n\r\n            fetch(\r\n                'https://unpkg.com/webm-wasm@latest/dist/webm-worker.js'\r\n            ).then(function(r) {\r\n                r.arrayBuffer().then(function(buffer) {\r\n                    startRecording(stream, buffer);\r\n                });\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!config.workerPath && buffer instanceof ArrayBuffer) {\r\n            var blob = new Blob([buffer], {\r\n                type: 'text/javascript'\r\n            });\r\n            config.workerPath = URL.createObjectURL(blob);\r\n        }\r\n\r\n        if (!config.workerPath) {\r\n            console.error('workerPath parameter is missing.');\r\n        }\r\n\r\n        worker = new Worker(config.workerPath);\r\n\r\n        worker.postMessage(config.webAssemblyPath || 'https://unpkg.com/webm-wasm@latest/dist/webm-wasm.wasm');\r\n        worker.addEventListener('message', function(event) {\r\n            if (event.data === 'READY') {\r\n                worker.postMessage({\r\n                    width: config.width,\r\n                    height: config.height,\r\n                    bitrate: config.bitrate || 1200,\r\n                    timebaseDen: config.frameRate || 30,\r\n                    realtime: config.realtime\r\n                });\r\n\r\n                cameraStream().pipeTo(new WritableStream({\r\n                    write: function(image) {\r\n                        if (finished) {\r\n                            console.error('Got image, but recorder is finished!');\r\n                            return;\r\n                        }\r\n\r\n                        worker.postMessage(image.data.buffer, [image.data.buffer]);\r\n                    }\r\n                }));\r\n            } else if (!!event.data) {\r\n                if (!isPaused) {\r\n                    arrayOfBuffers.push(event.data);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This method records video.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        arrayOfBuffers = [];\r\n        isPaused = false;\r\n        this.blob = null;\r\n        startRecording(stream);\r\n\r\n        if (typeof config.initCallback === 'function') {\r\n            config.initCallback();\r\n        }\r\n    };\r\n\r\n    var isPaused;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPaused = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPaused = false;\r\n    };\r\n\r\n    function terminate(callback) {\r\n        if (!worker) {\r\n            if (callback) {\r\n                callback();\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        // Wait for null event data to indicate that the encoding is complete\r\n        worker.addEventListener('message', function(event) {\r\n            if (event.data === null) {\r\n                worker.terminate();\r\n                worker = null;\r\n\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n            }\r\n        });\r\n\r\n        worker.postMessage(null);\r\n    }\r\n\r\n    var arrayOfBuffers = [];\r\n\r\n    /**\r\n     * This method stops recording video.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        finished = true;\r\n\r\n        var recorder = this;\r\n\r\n        terminate(function() {\r\n            recorder.blob = new Blob(arrayOfBuffers, {\r\n                type: 'video/webm'\r\n            });\r\n\r\n            callback(recorder.blob);\r\n        });\r\n    };\r\n\r\n    // for debugging\r\n    this.name = 'WebAssemblyRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        arrayOfBuffers = [];\r\n        isPaused = false;\r\n        this.blob = null;\r\n\r\n        // todo: if recording-ON then STOP it first\r\n    };\r\n\r\n    /**\r\n     * @property {Blob} blob - The recorded blob object.\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.stop(function(){\r\n     *     var blob = recorder.blob;\r\n     * });\r\n     */\r\n    this.blob = null;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.WebAssemblyRecorder = WebAssemblyRecorder;\r\n}\n","\r\nexport class Payment {\r\n    amount: Number;\r\n    amount_refunded: Number\r\n    appointmentAmountType:string;\r\n    appointmentBaseAmount: Number;\r\n    appointmentCaptureAmount: Number;\r\n    appointmentCreateDate: Number;\r\n    appointmentId:string;\r\n    appointmentTime: Number;\r\n    bank:string;\r\n    captured: boolean;\r\n    card_id:string;\r\n    channels:string[];\r\n    contact:string;\r\n    created_at:Number;\r\n    fee:Number;\r\n  currency:string;\r\n  description:string;\r\n  doc_id:string;\r\n  doctorId:string;\r\n  email:string;\r\n  errorMsg:string;\r\n  error_code:any;\r\n  error_description:string;\r\n  isOnline?:boolean;\r\n  isPaymentFetch:boolean;\r\n  isPaymentVerify:boolean;\r\n  method:string;\r\n  order_id:string;\r\n  patientId:string;\r\n  payment_id:string;\r\n  razorpay_order_id:string;\r\n  razorpay_payment_id:string;\r\n  razorpay_signature:string;\r\n  receipt:string;\r\n  refund_id:string;\r\n  refund_status:string;\r\n  status:string;\r\n  subType:string;\r\n  tax:Number;\r\n  type:string;\r\n  verifyFailedReason:string;\r\n  vpa:string;\r\n  wallet:string;\r\n  public static default = (): Payment => {\r\n    return {\r\n        amount: 0,\r\n        amount_refunded: 0,\r\n        appointmentAmountType: \"\",\r\n        appointmentBaseAmount: 0,\r\n        appointmentCaptureAmount: 0,\r\n        appointmentCreateDate: 0,\r\n        appointmentId: \"\",\r\n        appointmentTime: 0,\r\n        bank: \"\",\r\n        captured: false,\r\n        card_id: \"\",\r\n        channels: [],\r\n        contact: \"\",\r\n        created_at: 0,\r\n        currency: \"INR\",\r\n        description: \"Appointment Charge\",\r\n        doc_id:\"\",\r\n        doctorId: \"\",\r\n        email: \"\",\r\n        errorMsg: \"\",\r\n        error_code: \"\",\r\n        error_description: \"\",\r\n        fee: 0,\r\n        isOnline: true,\r\n        isPaymentFetch: false,\r\n        isPaymentVerify: false,\r\n        method: \"\",\r\n        order_id: \"\",\r\n        patientId: \"\",\r\n        payment_id: \"\",\r\n        razorpay_order_id: \"\",\r\n        razorpay_payment_id: \"\",\r\n        razorpay_signature: \"\",\r\n        receipt: \"\",\r\n        refund_id: \"\",\r\n        refund_status: \"\",\r\n        status: \"\",\r\n        subType: \"\",\r\n        tax: 0,\r\n        type: \"payment\",\r\n        verifyFailedReason: \"\",\r\n        vpa:\"\",\r\n        wallet:\"\" \r\n    };\r\n  };\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\nimport { allIcons } from 'src/app/shared/icon/custom-icon';\r\nimport { CustomIconsService } from 'src/app/shared/UI_service/custom-icons.service';\r\nimport { Appointment } from '../../interface/appointment';\r\nimport { Clinic } from '../../interface/clinic';\r\nimport { Patient } from '../../interface/patient';\r\nimport { BaseHttpService } from '../../services/base-http.service';\r\nimport { HttpConstants } from '../../services/http-constants';\r\nimport { MessageService } from '../../services/message.service';\r\nimport { slotInterface } from '../page/select-time/select-time.component';\r\n\r\n@Component({\r\n  selector: 'app-appointment-card',\r\n  templateUrl: './appointment-card.component.html',\r\n  styleUrls: ['./appointment-card.component.less'],\r\n})\r\nexport class AppointmentCardComponent implements OnInit {\r\n  @Input() todaysAppointment: Appointment[] = [];\r\n  @Input() patients: Patient[];\r\n  @Input() allClinics: Clinic[];\r\n  constructor(\r\n    private modal: NzModalService,\r\n    private baseHttpService: BaseHttpService,\r\n    private msg: MessageService,\r\n    private router: Router,\r\n    private activedRouter: ActivatedRoute,\r\n    private _IconsService: CustomIconsService\r\n  ) { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  cancelAppt(item: Appointment) {\r\n    this.modal.confirm({\r\n      nzTitle: 'Are you sure cancel this appointment?',\r\n      nzContent:\r\n        '<small style=\"color: red;\">once the appointment is cancelled.it not converted into confim again.</small>',\r\n      nzOkText: 'Yes',\r\n      nzOkType: 'danger',\r\n      nzOnOk: () => this.cancelApptRequest(item),\r\n      nzCancelText: 'No',\r\n      nzOnCancel: () => console.log('Cancel'),\r\n    });\r\n  }\r\n  cancelApptRequest(appointment: Appointment) {\r\n    const body = {\r\n      appointmentId: appointment.doc_id,\r\n      patientId: appointment.patient_id,\r\n      patient_phone: appointment.patient_phone,\r\n      doctorId: appointment.doctor_id,\r\n      startDateTime: appointment.startDateTime,\r\n    };\r\n\r\n    this.baseHttpService\r\n      .makeAuthRequest<boolean>(\r\n        'POST',\r\n        HttpConstants.appointment.cancelAppointment,\r\n        body\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.errors.length) {\r\n          this.msg.createMessage('error', 'failed to cancel the appointment.');\r\n          return;\r\n        } else {\r\n          appointment.isCancelled = true;\r\n          this.msg.createMessage('success', 'Appointment Cancelled');\r\n        }\r\n      });\r\n  }\r\n\r\n  changeAppt(appt: Appointment) {\r\n    let time;\r\n\r\n    const clinic = this.allClinics.filter((item) => {\r\n      return item.doc_id === appt.clinic_id;\r\n    });\r\n\r\n    if (clinic.length > 0) {\r\n      time = clinic[0].timings.filter((item) => {\r\n        return item.doc_id === appt.clinic_timimg;\r\n      });\r\n    }\r\n\r\n    const patient = this.patients.filter((item) => {\r\n      return item.patient_id === appt.patient_id;\r\n    });\r\n\r\n    const userSelectedSlot: slotInterface = {\r\n      slotTime: appt.startDateTime,\r\n      endSlot: appt.endDateTime,\r\n      status: 'block',\r\n    };\r\n\r\n    const appData = {\r\n      clinic: clinic ? clinic[0] : '',\r\n      time: time ? time[0] : '',\r\n      slot: userSelectedSlot,\r\n      date: new Date(appt.startDateTime),\r\n      patient: patient[0],\r\n      isTelemedicine: appt.isTelimedicineAppointment,\r\n      document_id: appt.doc_id\r\n    };\r\n\r\n    this.router.navigate(['../book-appointment'], {\r\n      relativeTo: this.activedRouter,\r\n      state: { apptData: appData }\r\n    });\r\n  }\r\n\r\n  confirmAppt(appt: Appointment) {\r\n\r\n    const patient = this.patients.filter((item) => {\r\n      return item.patient_id === appt.patient_id;\r\n    });\r\n\r\n    const appData = {\r\n      clinic: null,\r\n      time: null,\r\n      slot: null,\r\n      date: new Date(appt.startDateTime),\r\n      patient: patient[0],\r\n      isTelemedicine: (appt.isTelimedicineAppointment) ? true : false,\r\n      document_id: appt.doc_id\r\n    };\r\n\r\n    this.router.navigate(['../book-appointment'], {\r\n      relativeTo: this.activedRouter,\r\n      state: { apptData: appData }\r\n    });\r\n\r\n  }\r\n\r\n\r\n  joinCall(item: Appointment) {\r\n    window.open(`https://api.digiscribe.in/dashboard/${item.patient_id}/${item.patient_name}/${item.doc_id}`, \"_blank\");\r\n  }\r\n\r\n  // icon\r\n  video = this._IconsService.setIcon(allIcons.video)\r\n  rechedule = this._IconsService.setIcon(allIcons.rechedule)\r\n  directions = this._IconsService.setIcon(allIcons.directions)\r\n  pay = this._IconsService.setIcon(allIcons.pay)\r\n  cancel = this._IconsService.setIcon(allIcons.cancel)\r\n\r\n}\r\n","<ng-container *ngFor=\"let item of todaysAppointment\">\r\n  <div class=\"status_card p-2\">\r\n    <div nz-row>\r\n      <div nz-col [nzXs]=\"{ span: 4 }\">\r\n        <div class=\"date_circle\">\r\n          <span>{{ item.startDateTime | date: \"dd\" }}</span>\r\n          <span>{{ item.startDateTime | date: \"MMM\" }}</span>\r\n        </div>\r\n      </div>\r\n      <div nz-col [nzXs]=\"{ span: 20 }\">\r\n        <h3 class=\"s_card_heading mb-2\">\r\n          <ng-container *ngIf=\"item.type === 'followup'\">\r\n            Follow-up Reminder\r\n          </ng-container>\r\n          <ng-container\r\n            *ngIf=\"item.type != 'followup' && item.isTelimedicineAppointment && item.isTelimedicineAppointment === true\">\r\n            Online Appt Reminder\r\n          </ng-container>\r\n\r\n          <ng-container *ngIf=\"item.type != 'followup' && !item.isTelimedicineAppointment \">\r\n            Appointment Reminder\r\n          </ng-container>\r\n\r\n          <img src=\"assets/icon/colorIcon/extra/Icon_notice.svg\" alt=\"\" class=\"noticeIco\" />\r\n        </h3>\r\n        <div nz-row>\r\n          <div nz-col [nzXs]=\"{ span: 12 }\">\r\n            <div class=\"data_card_left\">\r\n              <h4>\r\n                {{ item.startDateTime | date: \"EEE\" }},\r\n                {{ item.startDateTime | date: \"dd\" }},\r\n                {{ item.startDateTime | date: \"LLL\" }}\r\n                {{ item.startDateTime | date: \"yyyy\" }}\r\n              </h4>\r\n              <h4 *ngIf=\"item.type != 'followup'\">\r\n                {{ item.startDateTime | date: \"h:mm a\" }}\r\n              </h4>\r\n              <h4 *ngIf=\"item.type == 'followup'\">Confirm time.</h4>\r\n              <h4>\r\n                {{\r\n                item.appointmentReason && item.appointmentReason != \"\"\r\n                ? item.appointmentReason\r\n                : \"Consultation\"\r\n                }}\r\n              </h4>\r\n            </div>\r\n          </div>\r\n          <div nz-col [nzXs]=\"{ span: 12 }\">\r\n            <div class=\"data_card_right\">\r\n              <h4 [ngClass]=\"\r\n                  item.type === 'appointment' ? 'primary' : 'danger'\r\n                \">\r\n                {{\r\n                item.type === \"appointment\" ? \"Confirmed\" : \"Un-confirmed\"\r\n                }}\r\n              </h4>\r\n              <h4 class=\"danger\" *ngIf=\"!item.isBillPaid\">\r\n                <i nz-icon nzType=\"warning\" nzTheme=\"fill\"></i>Un-Paid\r\n              </h4>\r\n              <h4 class=\"success\" *ngIf=\"item.isBillPaid && item.isBillPaid === true\">\r\n                <i nz-icon nzType=\"check-circle\" nzTheme=\"fill\"></i> Paid\r\n                Checkup\r\n              </h4>\r\n              <h4>\r\n                {{\r\n                item.isTelimedicineAppointment &&\r\n                item.isTelimedicineAppointment === true\r\n                ? \"Online-Consult\"\r\n                : \"In-Clinic Consult\"\r\n                }}\r\n              </h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div nz-col [nzXs]=\"{ span: 24 }\">\r\n        <div class=\"status_card_btn_row mt-3\" *ngIf=\"!item.isCancelled\">\r\n          <div nz-row>\r\n            <div nz-col [nzXs]=\"{ span: 8 }\" class=\"center_xy\">\r\n              <ng-container *ngIf=\"item.type != 'followup'\">\r\n                <button class=\"btn_3 btn_success\"  *ngIf=\"!item.isBillPaid\">\r\n                  <i nz-icon [innerHtml]=\"pay\"></i>&nbsp;Pay\r\n                  Online\r\n                </button>\r\n\r\n                <button class=\"btn_3 btn_primary\" *ngIf=\"false\">\r\n                  <i nz-icon [innerHtml]=\"directions\"></i>&nbsp;Direction\r\n              </button>\r\n\r\n                <button class=\"btn_3 btn_success\"\r\n                  *ngIf=\"item.isTelimedicineAppointment && item.isTelimedicineAppointment ===  true\" (click)=\"joinCall(item)\" >\r\n                  <i [innerHtml]=\"video\"></i>&nbsp;Join Now\r\n                </button>\r\n              </ng-container>\r\n              &nbsp;\r\n            </div>\r\n\r\n            <div nz-col [nzXs]=\"{ span: 8 }\" class=\"center_xy\">\r\n              <button class=\"btn_3 btn_success\" (click)=\"confirmAppt(item)\"  *ngIf=\"item.type == 'followup'\">\r\n                <i nz-icon nzType=\"calendar\" nzTheme=\"outline\"></i>&nbsp;Confim\r\n              </button>\r\n\r\n              <button class=\"btn_3 btn_warn\" (click)=\"changeAppt(item)\" *ngIf=\"item.type != 'followup'\">\r\n                <i nz-icon [innerHtml]=\"rechedule\"></i>&nbsp;Rechedule\r\n              </button>&nbsp;\r\n            </div>\r\n\r\n            <div nz-col [nzXs]=\"{ span: 8 }\" class=\"center_xy\">\r\n              <button class=\"btn_3 btn_danger\" (click)=\"cancelAppt(item)\">\r\n                <i nz-icon [innerHtml]=\"cancel\"></i>&nbsp;Cancel\r\n              </button>\r\n            </div>\r\n\r\n            <!-- <ng-container *ngIf=\"item.type != 'followup'\">\r\n              <div nz-col class=\"gutter-row\" [nzSpan]=\"8\">\r\n                <button nz-button nzType=\"primary\" class=\"full-width\">\r\n                  <i nz-icon nzType=\"swap-left\" nzTheme=\"outline\"></i\r\n                  >Direction\r\n                </button>\r\n              </div>\r\n            </ng-container> -->\r\n          </div>\r\n        </div>\r\n        <h3 class=\"extra_sub btn_danger text-center\" *ngIf=\"item.isCancelled\" nzDanger>Appointment Cancelled</h3>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</ng-container>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { AccountDetails } from '../../../interface/account-details';\r\nimport { Clinic } from '../../../interface/clinic';\r\nimport { Doctor } from '../../../interface/doctor';\r\nimport { LandingPageData } from '../../../interface/landingData';\r\nimport { Patient } from '../../../interface/patient';\r\nimport { TelemedicineSetup } from '../../../interface/telemedicine-setup';\r\nimport { Payment } from '../../../interface/payment';\r\nimport { BaseHttpService } from '../../../services/base-http.service';\r\nimport { DoctorService } from '../../../services/doctor-service/doctor.service';\r\nimport { HttpConstants } from '../../../services/http-constants';\r\nimport { MessageService } from '../../../services/message.service';\r\nimport { DgPaymentServiceService } from '../../../services/patient-service/dg-payment-service.service';\r\nimport { ExternalLibraryService } from '../../../services/patient-service/utilsPayment';\r\nimport { slotInterface } from '../select-time/select-time.component';\r\nimport { Appointment } from '../../../interface/appointment';\r\ndeclare let Razorpay: any;\r\nimport { DynamicTitleService } from '../../../shared/UI_service/dynamic-title.service';\r\n@Component({\r\n  selector: 'app-confirm-appointment',\r\n  templateUrl: './confirm-appointment.component.html',\r\n  styleUrls: ['./confirm-appointment.component.less'],\r\n})\r\nexport class ConfirmAppointmentComponent implements OnInit {\r\n  model_box: boolean = false;\r\n  doctor: Doctor;\r\n  telemedicineSetup: TelemedicineSetup;\r\n  doctorAccount: AccountDetails[] = [];\r\n  patient: Patient;\r\n  clinic: Clinic;\r\n  slot: slotInterface;\r\n  navigateDataSnap: any;\r\n  isTelemedicine: boolean = false;\r\n  isFetchingData: boolean = false;\r\n  billingAmountServer: billingAmount[] = [];\r\n  currentAppointmentAmount: billingAmount = billingAmount.default();\r\n  chargeType: string = 'First Visit';\r\n  rescheduledDocId: string = '';\r\n  appointmentDocumentResponce: Appointment;\r\n  RAZORPAY_OPTIONS = {\r\n    key: environment.rozarPay.key_id,\r\n    amount: '',\r\n    name: 'DigiRecords',\r\n    order_id: '',\r\n    description: 'Appointment Charge',\r\n    prefill: {\r\n      name: '',\r\n      email: '',\r\n      contact: '',\r\n      method: {},\r\n    },\r\n  };\r\n  paymentResponse: Payment = Payment.default();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private activeRouter: ActivatedRoute,\r\n    private doctorService: DoctorService,\r\n    private dgPaymentService: DgPaymentServiceService,\r\n    private httpService: BaseHttpService,\r\n    private msg: MessageService,\r\n    private razorpayService: ExternalLibraryService,\r\n    private cdf: ChangeDetectorRef,\r\n    private _dynamicTitle: DynamicTitleService\r\n  ) {\r\n    if (!this.router.getCurrentNavigation().extras.state) {\r\n      this.router.navigate(['../book-appointment'], {\r\n        relativeTo: this.activeRouter,\r\n      });\r\n    } else {\r\n      this.navigateDataSnap = this.router.getCurrentNavigation().extras.state.apptData;\r\n      this.patient = this.navigateDataSnap.patient;\r\n      this.clinic = this.navigateDataSnap.clinic;\r\n      this.slot = this.navigateDataSnap.slot;\r\n      this.isTelemedicine = this.navigateDataSnap.isTelemedicine;\r\n      this.rescheduledDocId = this.navigateDataSnap.document_id;\r\n    }\r\n  }\r\n  model_popup(param) {\r\n    this.model_box = param;\r\n  }\r\n  ngOnInit(): void {\r\n    this.doctorService.data$.subscribe((d: LandingPageData) => {\r\n      this.doctor = d.doctor;\r\n      this.telemedicineSetup = d.telemedicineSetup;\r\n      this.doctorAccount = d.accountDetailsRes;\r\n    });\r\n\r\n    if (\r\n      this.doctorAccount &&\r\n      this.doctorAccount.length > 0 &&\r\n      this.isTelemedicine\r\n    ) {\r\n      this.getPaymentInfo();\r\n      this.getUpcomingAppt();\r\n    }\r\n\r\n    this.razorpayService\r\n      .lazyLoadLibrary('https://checkout.razorpay.com/v1/checkout.js')\r\n      .subscribe();\r\n\r\n    this._dynamicTitle.setPageTitle('Confirm')\r\n  }\r\n\r\n  getPaymentInfo() {\r\n    this.dgPaymentService\r\n      .getUpdateAmountFromServer(this.telemedicineSetup.billingDetails)\r\n      .subscribe(\r\n        (response) => {\r\n          var res: any = response;\r\n          if (res.status) {\r\n            this.billingAmountServer = res.data;\r\n          } else {\r\n            this.calFromTeleMed();\r\n          }\r\n        },\r\n        (err) => {\r\n          this.calFromTeleMed();\r\n        }\r\n      );\r\n  }\r\n\r\n  calFromTeleMed() {\r\n    this.telemedicineSetup.billingDetails.forEach((element) => {\r\n      if (element.billingAmount) {\r\n        var platFormPrice = Number(element.billingAmount + 14.75);\r\n        var platFormPriceFee = (platFormPrice * 2) / 100;\r\n        var tax = platFormPriceFee * 0.18;\r\n        var feeIncludeTax =\r\n          Number(platFormPriceFee.toFixed(2)) + Number(tax.toFixed(2));\r\n        var platFormPriceFinal = platFormPrice + feeIncludeTax;\r\n        element.receivableAmount = Number(platFormPriceFinal.toFixed(2));\r\n        this.billingAmountServer.push(element);\r\n      } else {\r\n        this.billingAmountServer.push(element);\r\n      }\r\n    });\r\n    this.currentAppointmentAmount = this.billingAmountServer.find(\r\n      (x) => x.billingName == this.chargeType\r\n    );\r\n  }\r\n\r\n  getFixed(currentAppointmentAmount: billingAmount) {\r\n    return (\r\n      Number(currentAppointmentAmount.receivableAmount) -\r\n      Number(currentAppointmentAmount.billingAmount)\r\n    ).toFixed(2);\r\n  }\r\n\r\n  getUpcomingAppt() {\r\n    this.isFetchingData = true;\r\n    const dataToSend = {\r\n      patientId: this.patient.patient_id,\r\n      doctorId: this.doctor.uid,\r\n      timeStamp: this.slot.slotTime,\r\n    };\r\n\r\n    this.dgPaymentService.getUpcomingAppt(dataToSend).subscribe(\r\n      (response) => {\r\n        this.checkApptRes(response);\r\n        this.isFetchingData = false;\r\n      },\r\n      (err) => {\r\n        this.checkApptRes(err);\r\n        this.isFetchingData = false;\r\n      }\r\n    );\r\n\r\n    //this.checkApptRes(res)\r\n  }\r\n\r\n  checkApptRes(res) {\r\n    if (res.isFollowUp) {\r\n      this.chargeType = 'Follow Up';\r\n    } else {\r\n      this.chargeType = 'First Visit';\r\n    }\r\n\r\n    this.currentAppointmentAmount = this.billingAmountServer.find(\r\n      (x) => x.billingName == this.chargeType\r\n    );\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['../book-appointment'], {\r\n      relativeTo: this.activeRouter,\r\n      state: { apptData: this.navigateDataSnap },\r\n    });\r\n  }\r\n\r\n  saveAppt() {\r\n    const body: AppointmentCreateInterface = {\r\n      appointmentId: this.rescheduledDocId,\r\n      patientId: this.patient.patient_id,\r\n      clinicId: this.clinic.doc_id,\r\n      patient_name: this.patient.patient_name,\r\n      patient_last_name: this.patient.patient_last_name,\r\n      patient_phone: this.patient.patient_phone,\r\n      startDateTime: this.slot.slotTime,\r\n      endDateTime: this.slot.endSlot * 1000,\r\n      isTelimedicineAppointment: this.isTelemedicine,\r\n    };\r\n\r\n    this.isFetchingData = true;\r\n    if (!this.rescheduledDocId) {\r\n      this.createApptDoctor(body);\r\n    } else {\r\n      this.rescheduleAppointment(body);\r\n    }\r\n  }\r\n\r\n  createApptDoctor(body) {\r\n    this.httpService\r\n      .makeAuthRequest('post', HttpConstants.appointment.create, body)\r\n      .subscribe((res) => {\r\n        this.isFetchingData = false;\r\n        if (res.hasErrors()) {\r\n          this.msg.createMessage(\r\n            'error',\r\n            'Something goes wrong please try again'\r\n          );\r\n          return false;\r\n        } else {\r\n          this.model_popup(true);\r\n        }\r\n      });\r\n  }\r\n\r\n  rescheduleAppointment(body) {\r\n    this.httpService\r\n      .makeAuthRequest(\r\n        'post',\r\n        HttpConstants.appointment.rescheduleAppointment,\r\n        body\r\n      )\r\n      .subscribe((res) => {\r\n        this.isFetchingData = false;\r\n        if (res.hasErrors()) {\r\n          this.msg.createMessage(\r\n            'error',\r\n            'Something goes wrong please try again'\r\n          );\r\n          return false;\r\n        } else {\r\n          this.model_popup(true);\r\n        }\r\n      });\r\n  }\r\n\r\n  processingPayment: boolean = false;\r\n  orderResponse: any;\r\n  loadingText: string = 'Loading...';\r\n\r\n  initiatePaymentModal(billAmount: billingAmount) {\r\n\r\n\r\n    const docId = (this.rescheduledDocId) ? this.rescheduledDocId : `${this.doctor.uid}_${this.patient.patient_id}_${new Date().getTime()}`\r\n\r\n    this.appointmentDocumentResponce = {\r\n      isTelimedicineAppointment: this.isTelemedicine,\r\n      appointmentReason: '',\r\n      additionalNotes: '',\r\n      refDoctorName: '',\r\n      refDoctorMobile: '',\r\n      isCancelled: false,\r\n      clinic_id: this.clinic.doc_id,\r\n      appointment_status: false,\r\n      case_id: '',\r\n      clinic_timimg: '',\r\n      channels: [this.patient.patient_id, this.doctor.uid],\r\n      diseasesData: [],\r\n      doc_id: docId,\r\n      doctor_id: this.doctor.uid,\r\n      endDateTime: this.slot.endSlot * 1000,\r\n      labtestURL: [],\r\n      medication_effect: '',\r\n      patient_id: this.patient.patient_id,\r\n      patient_name:\r\n        this.patient.patient_name + ' ' + this.patient.patient_last_name,\r\n      patient_phone: this.patient.patient_phone,\r\n      schedular_type: 'New',\r\n      side_effect: '',\r\n      startDateTime: this.slot.slotTime,\r\n      symptomsData: [],\r\n      timestamp: new Date().getTime(),\r\n      triage_status: false,\r\n      type: 'appointment',\r\n      wellness_type: '',\r\n      billing_id: '',\r\n      discount: '0',\r\n      bill_amount: 0,\r\n      isBillPaid: false,\r\n      billing_pay_status: 'unpaid',\r\n      isCheckin: false,\r\n      isOnline: false,\r\n    };\r\n\r\n    this.isFetchingData = true;\r\n    let receiptNumber = `Receipt#${Math.random().toString(36).slice(2)}`; //`Receipt#${Math.floor(Math.random() * 5123 * 43) + 10}`;\r\n    let orderDetails = {\r\n      amount: Number(billAmount.receivableAmount) * 100,\r\n      receipt: receiptNumber,\r\n      payment_capture: 1,\r\n    };\r\n\r\n    this.dgPaymentService.createOrder(orderDetails).subscribe(\r\n      (order) => {\r\n        //console.log(\"TCL: CheckoutComponent -> initiatePaymentModal -> order\", order);\r\n        this.orderResponse = order;\r\n        if (this.orderResponse.status) {\r\n          this.RAZORPAY_OPTIONS.order_id = this.orderResponse.data.id;\r\n          this.RAZORPAY_OPTIONS.amount = orderDetails.amount.toString();\r\n          this.RAZORPAY_OPTIONS.prefill.name = this.patient.patient_name;\r\n          this.RAZORPAY_OPTIONS.prefill.contact = this.patient.patient_phone;\r\n          this.RAZORPAY_OPTIONS.prefill.email = this.patient.patient_email;\r\n          this.RAZORPAY_OPTIONS['handler'] = this.razorPaySuccessHandler.bind(\r\n            this\r\n          );\r\n          this.RAZORPAY_OPTIONS['modal'] = {\r\n            ondismiss: this.cancelPaymentByUser.bind(this),\r\n          };\r\n          this.paymentResponse.appointmentId = this.appointmentDocumentResponce.doc_id;\r\n          this.paymentResponse.channels = [\r\n            this.doctor.uid,\r\n            this.patient.patient_id,\r\n          ];\r\n          this.paymentResponse.patientId = this.patient.patient_id;\r\n          this.paymentResponse.appointmentTime = this.slot.slotTime;\r\n          this.paymentResponse.appointmentCreateDate = Math.floor(\r\n            new Date().getTime()\r\n          );\r\n          this.paymentResponse.doctorId = this.doctor.uid;\r\n          this.paymentResponse.doc_id =\r\n            'payment_' +\r\n            this.appointmentDocumentResponce.doc_id +\r\n            '_' +\r\n            this.patient.patient_id;\r\n          this.paymentResponse.order_id = this.orderResponse.data.id;\r\n          this.paymentResponse.receipt = this.orderResponse.data.receipt;\r\n          this.paymentResponse.errorMsg = '';\r\n          this.paymentResponse.isPaymentVerify = false;\r\n          this.paymentResponse.verifyFailedReason = '';\r\n          this.paymentResponse.appointmentBaseAmount =\r\n            Number(this.currentAppointmentAmount.billingAmount) * 100;\r\n          this.paymentResponse.appointmentCaptureAmount =\r\n            Number(this.currentAppointmentAmount.receivableAmount) * 100;\r\n          this.paymentResponse.appointmentAmountType = this.currentAppointmentAmount.billingName;\r\n          this.paymentResponse.status = 'order';\r\n          this.paymentResponse.method = '';\r\n          this.paymentResponse.amount_refunded = 0;\r\n          this.paymentResponse.refund_status = '';\r\n          this.paymentResponse.fee = 0;\r\n          this.paymentResponse.tax = 0;\r\n          this.paymentResponse.captured = false;\r\n          this.paymentResponse.description = '';\r\n          this.paymentResponse.card_id = '';\r\n          this.paymentResponse.bank = '';\r\n          this.paymentResponse.wallet = '';\r\n          this.paymentResponse.vpa = '';\r\n          this.paymentResponse.email = '';\r\n          this.paymentResponse.contact = '';\r\n          this.paymentResponse.error_code = '';\r\n          this.paymentResponse.error_description = '';\r\n          this.paymentResponse.created_at = 0;\r\n          this.paymentResponse.amount =\r\n            Number(this.currentAppointmentAmount.receivableAmount) * 100;\r\n          this.paymentResponse.currency = 'INR';\r\n          this.paymentResponse.errorMsg = '';\r\n          this.paymentResponse.subType = '';\r\n          this.paymentResponse.isPaymentFetch = false;\r\n          this.paymentResponse.type = 'payment';\r\n          this.paymentResponse.refund_id = '';\r\n          this.paymentResponse.captured = false;\r\n          this.createDocumentOnServer(this.paymentResponse);\r\n          this.createAppointmentPendding();\r\n\r\n          let razorpay = new Razorpay(this.RAZORPAY_OPTIONS);\r\n          razorpay.open();\r\n          event.preventDefault();\r\n          this.isFetchingData = false;\r\n          this.cdf.detectChanges();\r\n        } else {\r\n          this.msg.createMessage('error', 'something goes wrong. Please try again', { nzDuration: 3000 });\r\n          this.isFetchingData = false;\r\n          this.cdf.detectChanges();\r\n        }\r\n      },\r\n      (error) => {\r\n        this.msg.createMessage('error', 'something goes wrong. Please try again', { nzDuration: 3000 });\r\n        this.isFetchingData = false;\r\n        this.cdf.detectChanges();\r\n\r\n        //console.log(\"TCL: CheckoutComponent -> initiatePaymentModal -> error\", error);\r\n      }\r\n    );\r\n  }\r\n\r\n  cancelPaymentByUser() {\r\n    this.paymentResponse.type = 'payment';\r\n    this.paymentResponse.errorMsg = 'Payment Cancelled by User';\r\n    this.paymentResponse.subType = 'USER_CANCELLED';\r\n    this.paymentResponse.status = 'failed';\r\n    this.paymentResponse.appointmentId = '';\r\n    this.paymentResponse.appointmentTime = 0;\r\n    this.createDocumentOnServer(this.paymentResponse);\r\n  }\r\n\r\n  async razorPaySuccessHandler(response) {\r\n    this.loadingText = 'Please wait, while we are verifying payment.';\r\n    this.isFetchingData = true;\r\n    this.paymentResponse.razorpay_payment_id = response.razorpay_payment_id;\r\n    this.paymentResponse.razorpay_order_id = response.razorpay_order_id;\r\n    this.paymentResponse.razorpay_signature = response.razorpay_signature;\r\n    this.paymentResponse.status = 'created';\r\n    this.createDocumentOnServer(this.paymentResponse);\r\n    this.cdf.detectChanges();\r\n\r\n    await this.dgPaymentService.verifyPayment(response).subscribe(\r\n      (r) => {\r\n        this.paymentResponse.isPaymentVerify = true;\r\n      },\r\n      (error) => {\r\n        this.paymentResponse.verifyFailedReason = 'SERVER_ERROR';\r\n        //console.log(\"failed to verify payment mark as under-review\");\r\n      }\r\n    );\r\n\r\n    await this.dgPaymentService\r\n      .fetchPaymentDetailsById({\r\n        payment_id: response.razorpay_payment_id,\r\n        amount: this.RAZORPAY_OPTIONS.amount,\r\n      })\r\n      .subscribe(\r\n        (res) => {\r\n          var resData: any = res;\r\n          if (resData.status) {\r\n            this.paymentResponse.amount = resData.data.amount;\r\n            this.paymentResponse.status = resData.data.status;\r\n            this.paymentResponse.bank = resData.data.bank\r\n              ? resData.data.bank\r\n              : '';\r\n            this.paymentResponse.card_id = resData.data.card_id\r\n              ? resData.data.card_id\r\n              : '';\r\n            this.paymentResponse.method = resData.data.method;\r\n            this.paymentResponse.order_id = resData.data.order_id;\r\n            this.paymentResponse.description = resData.data.description;\r\n            this.paymentResponse.amount_refunded = resData.data.amount_refunded;\r\n            this.paymentResponse.refund_status = resData.data.refund_status\r\n              ? resData.data.refund_status\r\n              : '';\r\n            this.paymentResponse.email = resData.data.email;\r\n            this.paymentResponse.contact = resData.data.contact;\r\n            this.paymentResponse.error_code = resData.data.error_code\r\n              ? resData.data.error_code\r\n              : '';\r\n            this.paymentResponse.error_description = resData.data\r\n              .error_description\r\n              ? resData.data.error_description\r\n              : '';\r\n            this.paymentResponse.created_at = resData.data.created_at;\r\n            this.paymentResponse.payment_id = resData.data.id;\r\n            this.paymentResponse.isPaymentFetch = true;\r\n            this.paymentResponse.captured = resData.data.captured;\r\n            this.appointmentDocumentResponce.payment_id = this.paymentResponse.payment_id;\r\n            this.appointmentDocumentResponce.billing_id = this.paymentResponse.payment_id;\r\n            this.appointmentDocumentResponce.isBillPaid = true;\r\n            this.appointmentDocumentResponce.billing_pay_status = 'paid';\r\n\r\n            this.appointmentDocumentResponce.order_id = this.paymentResponse.order_id;\r\n            this.appointmentDocumentResponce.bill_amount = this.paymentResponse.appointmentBaseAmount;\r\n            this.paymentResponse.refund_id = '';\r\n            this.paymentResponse.fee = resData.data.fee;\r\n            this.paymentResponse.tax = resData.data.tax;\r\n            this.paymentSuccess();\r\n            this.cdf.detectChanges();\r\n          } else if (!resData.status) {\r\n            this.paymentResponse.isPaymentFetch = false;\r\n            this.createDocumentWithPendingStatus();\r\n            this.cdf.detectChanges();\r\n          } else {\r\n            this.paymentResponse.isPaymentFetch = false;\r\n            this.createDocumentWithPendingStatus();\r\n            this.cdf.detectChanges();\r\n          }\r\n        },\r\n        (error) => {\r\n          this.paymentResponse.isPaymentFetch = false;\r\n          this.appointmentDocumentResponce.type = 'pending';\r\n          //this.fetchPaymentRetry(response);\r\n          this.cdf.detectChanges();\r\n        }\r\n      );\r\n  }\r\n\r\n  createAppointmentPendding() {\r\n    this.appointmentDocumentResponce.type = 'pending';\r\n    this.createDocumentOnServer(this.appointmentDocumentResponce);\r\n    this.cdf.detectChanges();\r\n  }\r\n\r\n  createDocumentWithPendingStatus() {\r\n    if (this.paymentResponse.status == 'created') {\r\n      this.appointmentDocumentResponce.type = 'pending';\r\n      this.dgPaymentService\r\n        .sendPaymentMsg({\r\n          payment_id: this.paymentResponse.payment_id,\r\n          type: 'verifyFailed',\r\n        })\r\n        .subscribe((response) => { });\r\n    }\r\n\r\n    //console.log(JSON.stringify(this.paymentResponse));\r\n    this.paymentResponse.type = 'payment';\r\n    this.appointmentDocumentResponce.type = 'pending';\r\n    this.paymentResponse.isPaymentFetch = false;\r\n    this.paymentResponse.subType = 'verify_failed';\r\n    this.createDocumentOnServer(this.appointmentDocumentResponce);\r\n    this.createDocumentOnServer(this.paymentResponse);\r\n    this.isFetchingData = false;\r\n    this.loadingText = 'Please wait...';\r\n    this.cdf.detectChanges();\r\n\r\n    //this.ngxSmartModalService.open(\"paymentModal1\");\r\n  }\r\n\r\n  async createDocumentOnServer(data) {\r\n    this.isFetchingData = true;\r\n    this.dgPaymentService.createDocument(data).subscribe(\r\n      (res) => {\r\n        //console.log(res);\r\n        this.isFetchingData = false;\r\n        this.cdf.detectChanges();\r\n      },\r\n      (err) => {\r\n        this.createDocumentOnServer(data), (this.isFetchingData = false);\r\n      }\r\n    );\r\n  }\r\n\r\n  async paymentSuccess() {\r\n    if (this.paymentResponse.status == 'created') {\r\n      this.appointmentDocumentResponce.type = 'pending';\r\n    } else {\r\n      this.appointmentDocumentResponce.type = 'appointment';\r\n    }\r\n\r\n    await this.createDocumentOnServer(this.paymentResponse);\r\n    await this.createDocumentOnServer(this.appointmentDocumentResponce);\r\n\r\n    if (this.paymentResponse.status == 'created') {\r\n      this.dgPaymentService\r\n        .sendPaymentMsg({\r\n          payment_id: this.paymentResponse.payment_id,\r\n          type: 'verifyFailed',\r\n        })\r\n        .subscribe((response) => { });\r\n    } else {\r\n      this.dgPaymentService\r\n        .sendMsgInfo({\r\n          type: 'schedule',\r\n          doctorName:\r\n            this.doctor.doc_first_name + ' ' + this.doctor.doc_last_name,\r\n          doctorUserName: this.doctor.username,\r\n          appointmentTime: this.appointmentDocumentResponce.startDateTime,\r\n          doctorId: this.doctor.uid,\r\n          patientId: this.patient.patient_id,\r\n          appointmentId: this.appointmentDocumentResponce.doc_id,\r\n          patientPhone: this.appointmentDocumentResponce.patient_phone,\r\n          doctorMobile: this.doctor.doc_mobile,\r\n        })\r\n        .subscribe((response) => { });\r\n    }\r\n    this.cdf.detectChanges();\r\n\r\n    setTimeout(() => {\r\n      this.isFetchingData = false;\r\n      this.loadingText = 'Loading...';\r\n      this.model_popup(true);\r\n      this.cdf.detectChanges();\r\n    }, 4000);\r\n  }\r\n}\r\n\r\nexport class billingAmount {\r\n  billingAmount: number;\r\n  billingName: string;\r\n  isValid?: boolean;\r\n  receivableAmount: number;\r\n  public static default = (): billingAmount => {\r\n    return {\r\n      billingAmount: 0,\r\n      billingName: '',\r\n      receivableAmount: 0,\r\n    };\r\n  };\r\n}\r\n\r\nexport interface AppointmentCreateInterface {\r\n  //   doctorId: string;\r\n  appointmentId?: string;\r\n  patientId: string;\r\n  clinicId: string;\r\n  patient_name: string;\r\n  patient_last_name: string;\r\n  patient_phone: string;\r\n  startDateTime: number;\r\n  endDateTime: number;\r\n  isTelimedicineAppointment: boolean;\r\n}\r\n","<app-container tabTitle=\"confirm\">\r\n  <!-- end (nav bar) -->\r\n<nz-spin nzTip=\"{{loadingText}}\" [nzSpinning]=\"isFetchingData\" >\r\n  <div class=\"confirm_container p-3\" [ngClass]=\"{'d-none': model_box}\">\r\n<!-- Confirm Appointment card -->\r\n<!-- nav bar -->\r\n<!-- TODO put header data-->\r\n<app-header \r\n[headerTitle]=\"'Confirm'\" \r\n[isFixed]=\"true\">\r\n</app-header>\r\n<!-- TODO put header data-->\r\n<div class=\"confirm_appointment_card center_f_y mt-5\">\r\n    <div nz-row>\r\n        <div class=\"center_xy\" nz-col [nzXs]=\"{ span: 6, offset: 0 }\">\r\n            <div class=\"pofile_img\">\r\n                <img *ngIf=\"!doctor.profile_pic\" src=\"https://www.w3schools.com/w3images/avatar2.png\" alt=\"\">\r\n                <img *ngIf=\"doctor.profile_pic\" [src]=\"doctor.profile_pic\" alt=\"\">\r\n            </div>\r\n        </div>\r\n        <div class=\"center_f_y\" nz-col [nzXs]=\"{ span: 18, offset: 0 }\">\r\n            <span>\r\n                <h3  class=\"dr_name\">Dr. {{doctor.doc_first_name}} {{doctor.doc_last_name}}</h3>\r\n                <h3  class=\"degree\">{{doctor.doctor_education}},{{doctor.doc_speciality}} </h3>\r\n            </span> \r\n        </div>\r\n        <!-- row 1 -->\r\n        <div class=\"mt-3\" nz-col [nzXs]=\"{ span: 24, offset: 0 }\">\r\n           <div nz-row class=\"confirm_row center_xy\">\r\n             <div  nz-col [nzXs]=\"{ span: 17, offset: 0 }\">\r\n                 <h4 class=\"locationH\">Location</h4>\r\n                 <h3 style=\"font-size: 14px;\" *ngIf=\"isTelemedicine\"> Video Consult</h3>\r\n                 <h3 class=\"location add_i\" *ngIf=\"!isTelemedicine\"> {{clinic.address_line_1}}, {{clinic.address_line_2}},{{clinic.city}}</h3>\r\n\r\n             </div>  \r\n             <div class=\"center_xy\" nz-col [nzXs]=\"{ span: 7, offset: 0 }\">\r\n                <button class=\"Edit_btn\"  nz-button nzType=\"primary\" nzSize=\"small\" (click)=\"goBack()\" >Edit &nbsp;<img src=\"assets/icon/colorIcon/pencil.png\" alt=\"\"></button>\r\n             </div>  \r\n           </div>\r\n        </div>\r\n         <!-- row 2 -->\r\n         <div nz-col [nzXs]=\"{ span: 24, offset: 0 }\">\r\n            <div nz-row class=\"confirm_row center_xy\">\r\n              <div  nz-col [nzXs]=\"{ span: 17, offset: 0 }\">\r\n                  <h4 style=\"font-size:12px;color: #898A8F;font-family: Poppins-Regular\">Date & Time</h4>\r\n                  <h3 style=\"font-size: 14px;font-family: Poppins-Medium\">{{this.slot.slotTime | date : 'EEEE'}}, {{this.slot.slotTime | date : 'mediumDate'}} {{this.slot.slotTime | date : 'shortTime'}} </h3>\r\n              </div>  \r\n              <div class=\"center_xy\" nz-col [nzXs]=\"{ span: 7, offset: 0 }\">\r\n                <button class=\"Edit_btn\"  nz-button nzType=\"primary\" nzSize=\"small\" (click)=\"goBack()\" >Edit &nbsp;<img src=\"assets/icon/colorIcon/pencil.png\" alt=\"\"></button>\r\n              </div>  \r\n            </div>\r\n         </div>\r\n          <!-- row 3 -->\r\n          <div nz-col [nzXs]=\"{ span: 24, offset: 0 }\">\r\n            <div nz-row class=\"confirm_row center_xy\">\r\n              <div  nz-col [nzXs]=\"{ span: 17, offset: 0 }\">\r\n                  <h4 style=\"font-size:12px;color: #898A8F;font-family: Poppins-Regular\">Patient Name</h4>\r\n                  <h3 style=\"font-size: 14px;font-family: Poppins-Medium\"> {{(patient.patient_title) ? patient.patient_title : ''}} {{patient.patient_name}}  {{patient.patient_last_name}}\r\n                </h3>\r\n              </div>  \r\n              <div class=\"center_xy\" nz-col [nzXs]=\"{ span: 7, offset: 0 }\">\r\n                <button class=\"Edit_btn\"  nz-button nzType=\"primary\" nzSize=\"small\" (click)=\"goBack()\" >Edit &nbsp;<img src=\"assets/icon/colorIcon/pencil.png\" alt=\"\"></button>\r\n              </div>  \r\n            </div>\r\n         </div>\r\n          <!-- row 4 -->\r\n          <ng-container *ngIf=\"isTelemedicine && currentAppointmentAmount.billingAmount > 0\"> \r\n          <div nz-col [nzXs]=\"{ span: 24, offset: 0 }\">\r\n            <div nz-row class=\"confirm_row center_xy\">\r\n              <div  nz-col [nzXs]=\"{ span: 17, offset: 0 }\">\r\n                  <h4 style=\"font-size:12px;color: #898A8F;font-family: Poppins-Regular\">Consultation Fee</h4>\r\n                  <h3 style=\"font-size: 14px;font-family: Poppins-Medium\">Rs {{ currentAppointmentAmount.billingAmount }}/-\r\n                </h3>\r\n              </div>  \r\n              <div class=\"center_xy\" nz-col [nzXs]=\"{ span: 7, offset: 0 }\">\r\n              </div>  \r\n            </div>\r\n         </div>\r\n         <!-- row 5 -->\r\n         <div nz-col [nzXs]=\"{ span: 24, offset: 0 }\">\r\n            <div nz-row class=\"confirm_row_last center_xy\">\r\n              <div  nz-col [nzXs]=\"{ span: 17, offset: 0 }\">\r\n                  <h4 style=\"font-size:12px;color: #898A8F;font-family: Poppins-Regular\">Platform Fee & Taxes</h4>\r\n                  <h3 style=\"font-size: 14px;font-family: Poppins-Medium\">Rs {{ getFixed(currentAppointmentAmount) }}/-\r\n                </h3>\r\n              </div>  \r\n              <div class=\"center_xy\" nz-col [nzXs]=\"{ span: 7, offset: 0 }\">\r\n              </div>  \r\n            </div>\r\n         </div>\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"!isTelemedicine || currentAppointmentAmount.billingAmount === 0\"> \r\n          <div nz-col [nzXs]=\"{ span: 24, offset: 0 }\">\r\n            <div nz-row class=\"confirm_row center_xy\">\r\n              <div  nz-col [nzXs]=\"{ span: 17, offset: 0 }\">\r\n                  <h4 style=\"font-size:12px;color: #898A8F;\">Consultation Fee</h4>\r\n                  <h3 style=\"font-size: 14px;\">Kindly Contact your doctor for the same.\r\n                </h3>\r\n              </div>  \r\n              <div class=\"center_xy\" nz-col [nzXs]=\"{ span: 7, offset: 0 }\">\r\n              </div>  \r\n            </div>\r\n         </div>\r\n\r\n          </ng-container>\r\n          <div nz-col [nzXs]=\"{ span: 24, offset: 0 }\">\r\n            <!-- <button nz-button nzType=\"primary\" style=\"float: right;\"> \r\n              <i nz-icon nzType=\"bell\" nzTheme=\"fill\"></i>\r\n              Remind me\r\n             </button> -->\r\n          </div>\r\n    </div>\r\n</div>\r\n<!-- end (Confirm Appointment card )-->\r\n\r\n<!-- Confirm & Pay btn -->\r\n<button class=\"Pay_btn mt-5\"  *ngIf=\"isTelemedicine && currentAppointmentAmount.billingAmount > 0\" (click)=\"initiatePaymentModal(currentAppointmentAmount)\"> \r\n    <span class=\"text\">Confirm & Pay</span>\r\n   <span class=\"Pay\">Rs {{ currentAppointmentAmount.receivableAmount }} &nbsp; <img src=\"assets/icon/colorIcon/Path 1261.svg\" alt=\"\"></span>\r\n\r\n  </button>\r\n\r\n\r\n  <button class=\"Pay_btn mt-5\"   *ngIf=\"!isTelemedicine || currentAppointmentAmount.billingAmount === 0\" (click)=\"saveAppt()\" > \r\n   \r\n      <span class=\"text\">Confirm Appointment  &nbsp; <img src=\"assets/icon/colorIcon/Path 1261.svg\" alt=\"\"> </span>\r\n \r\n    </button>\r\n<!-- end (Confirm & Pay btn) -->\r\n</div>\r\n\r\n<!-- _________________________model__________________________-->\r\n\r\n<div class=\"model\" [ngClass]=\"{'d-none': !model_box}\">\r\n  <div style=\"position: relative;\">\r\n    <!-- blur container-->\r\n    <div class=\"appointment_done_outer_container\"></div>\r\n    <!-- main model card -->\r\n    <div class=\"model_card center_xy\">\r\n        <i [routerLink]=\"[ '../Health-Update' ]\" class=\"themes_text_invert\" nz-icon nzType=\"close\" nzTheme=\"outline\"></i>\r\n        <div>\r\n            <img src=\"assets/icon/colorIcon/done.png\" alt=\"\">\r\n            <h2>You've scheduled Your <br> appointment on:</h2>\r\n            <h1>{{this.slot.slotTime | date : 'EEEE'}}, {{this.slot.slotTime | date : 'mediumDate'}} {{this.slot.slotTime | date : 'shortTime'}}</h1>\r\n            <h3>You'll receive a notification whan your Appointment in confirmed</h3>\r\n\r\n            <h3 *ngIf=\"isTelemedicine && paymentResponse.payment_id !=''\" style=\"margin-bottom: 0px !important;margin-top: 0px !important;\">Payment has been made successful.</h3>\r\n            <h3 *ngIf=\"isTelemedicine && paymentResponse.payment_id !=''\" style=\"margin-top: 0px !important;\"> Transaction ID : <strong>{{ paymentResponse.receipt }}</strong></h3>\r\n\r\n            <a [routerLink]=\"[ '../Health-Update' ]\">\r\n              <button class=\"themes_bg themes_text\">Continue</button>\r\n            </a>  \r\n        </div>   \r\n    </div>\r\n</div>\r\n</div>\r\n<ng-template #indicatorTemplate><i nz-icon nzType=\"loading\"></i></ng-template>\r\n\r\n</nz-spin>\r\n</app-container>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-first-time-visitor',\r\n  templateUrl: './first-time-visitor.component.html',\r\n  styleUrls: ['./first-time-visitor.component.less']\r\n})\r\nexport class FirstTimeVisitorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- nav bar -->\r\n<!-- end(nav bar )-->\r\n\r\n<div class=\"p-2 outer_visitor_card\">\r\n<!-- Date -->\r\n<h2 class=\"date\">Today, Monday 27, 2020</h2>\r\n<!-- end(Date)-->\r\n\r\n<!-- Doctor online card -->\r\n<div class=\"Doctor_online_card center_f_y app_shadow_b\">\r\n    <div nz-row>\r\n     <div class=\"center_xy\" nz-col [nzXs]=\"{ span: 5, offset: 0}\">\r\n       <img src=\"assets/icon/first_time_visitor/doctor.svg\" alt=\"\">\r\n     </div>\r\n     <div nz-col [nzXs]=\"{ span: 14, offset: 0}\">\r\n      <h2 class=\"Doctor_online_card_text\">Doctor Krishnan is now\r\n        online. Click here to chat.</h2>\r\n     </div>\r\n     <div class=\"center_xy\" nz-col [nzXs]=\"{ span: 5, offset: 0}\">\r\n         <span class=\"Doctor_online_card_img themes_bg\">\r\n            <img src=\"assets/icon/first_time_visitor/chatbot.svg\" alt=\"\">\r\n            <span>Online</span>\r\n         </span>\r\n     </div>\r\n    </div>\r\n</div>\r\n<!-- end( Doctor online card)-->\r\n\r\n<!-- no appointment bg -->\r\n<div class=\"appointment_bg\">\r\n    <h3 class=\"no_appointment mt-3\" style=\"font-size: 16px;font-weight: bold;color: #A3A3A3; text-align: center;\">You have no appointment , Click on Book Appointment to book your first online or </h3>\r\n    <br><br>\r\n    <img src=\"assets/icon/first_time_visitor/noAppointment.png\" alt=\"\">\r\n</div>\r\n<!-- end( no appointment bg)-->\r\n\r\n<!-- Book Appointment btn--> \r\n<div class=\"fixed_btn_row p-2\">\r\n    <div nz-row class=\"fixed_btn themes_bg\" [routerLink]=\"[ '../book-appointment' ]\">\r\n        <div nz-col [nzXs]=\"{ span: 3 }\">\r\n            <span class=\"btn_ico center_xy\">\r\n                <img src=\"assets/icon/colorIcon/extra/bag.svg\" alt=\"\">\r\n            </span>\r\n        </div>\r\n        <div nz-col [nzXs]=\"{ span: 21 }\" class=\"center_xy\">\r\n            <span class=\"btn_text themes_text\">Book Appointment</span>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- end (Book Appointment btn)-->\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Patient } from '../../../interface/patient';\r\nimport { BaseHttpService } from '../../../services/base-http.service';\r\nimport { DoctorService } from '../../../services/doctor-service/doctor.service';\r\nimport { HttpConstants } from '../../../services/http-constants';\r\nimport {\r\n  HealthDocumentWrapper,\r\n  HealthDocuments,\r\n} from \"../../../interface/health-document\";\r\nimport * as moment from \"moment\";\r\nimport { NzDrawerPlacement } from 'ng-zorro-antd/drawer';\r\nimport { NzUploadFile } from 'ng-zorro-antd/upload';\r\nimport { uploadData } from '../health-update/health-update.component';\r\nimport { MessageService } from '../../../services/message.service';\r\nimport { Doctor } from '../../../interface/doctor';\r\nimport { LandingPageData } from '../../../interface/landingData';\r\nimport { DgPaymentServiceService } from '../../../services/patient-service/dg-payment-service.service';\r\nimport { DynamicTitleService } from 'src/app/shared/UI_service/dynamic-title.service';\r\n\r\n@Component({\r\n  selector: 'app-health-records',\r\n  templateUrl: './health-records.component.html',\r\n  styleUrls: ['./health-records.component.less']\r\n})\r\nexport class HealthRecordsComponent implements OnInit {\r\n\r\n  selectedPatient: Patient;\r\n  patientList: Patient[] = [];\r\n  healthDocumentMaster: HealthDocuments[] = [];\r\n  documents: HealthDocumentWrapper[] = [];\r\n\r\n  labReports: HealthDocumentWrapper[] = [];\r\n  snapRx: HealthDocumentWrapper[] = [];\r\n  otherDocuments: HealthDocumentWrapper[] = [];\r\n  placement: NzDrawerPlacement = 'bottom';\r\n  visible: boolean = false;\r\n  uploadDocs: boolean = false;\r\n  uploadText: string = 'Select / Upload Prescription';\r\n  imgFilelist: NzUploadFile[] = [];\r\n  authHeader: any;\r\n  isDocsLoading: boolean = false;\r\n  doctor: Doctor;\r\n  constructor(private http: BaseHttpService, private doctorService: DoctorService, private msg: MessageService, private uploadService: DgPaymentServiceService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.patientList = JSON.parse(localStorage.getItem(\"patients\" + this.doctorService.username));\r\n    this.selectedPatient = JSON.parse(localStorage.getItem(`${this.doctorService.username}-selectedPatient`));\r\n    this.getPatientDocument(this.selectedPatient.patient_id);\r\n    this.authHeader = {\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token-\" + this.doctorService.username),\r\n    };\r\n\r\n    this.doctorService.data$.subscribe((d: LandingPageData) => {\r\n      this.doctor = d.doctor;\r\n\r\n    })\r\n\r\n  }\r\n\r\n\r\n  patientChanged(item: Patient) {\r\n    if (this.selectedPatient.patient_id != item.patient_id) {\r\n      this.getPatientDocument(item.patient_id);\r\n      this.selectedPatient = item;\r\n    }\r\n  }\r\n\r\n\r\n  getPatientDocument(patientId: string) {\r\n\r\n    this.labReports = [];\r\n    this.otherDocuments = [];\r\n    this.http.makeAuthRequest<HealthDocumentResponse>('POST', HttpConstants.doctor.getAllDocuments + patientId).subscribe(res => {\r\n\r\n      if (res.hasErrors()) {\r\n        alert(res.getErrorsText());\r\n      } else {\r\n        this.healthDocumentMaster = res.data.documents;\r\n        this.manipulateData();\r\n      }\r\n\r\n      ;\r\n\r\n    })\r\n\r\n\r\n  }\r\n\r\n\r\n  manipulateData() {\r\n    const healthDocuments = this.healthDocumentMaster;\r\n    this.documents = [];\r\n    for (let index = 0; index < healthDocuments.length; index++) {\r\n      const element = healthDocuments[index];\r\n      element.digital_data.forEach((x) => {\r\n        const doc = {\r\n          name: x.name,\r\n          url: x.photo,\r\n          doc_id: element.doc_id,\r\n          doctor_id: element.doctor_id,\r\n          patient_id: element.patient_id,\r\n          timestamp: element.timestamp,\r\n          date: moment(element.timestamp).format(\"DD/MM/YYYY hh:mm a\"),\r\n          type: element.type,\r\n          uploadedBy: (element.uploadedBy) ? element.uploadedBy : ''\r\n        };\r\n        this.documents.push(doc);\r\n      });\r\n    }\r\n\r\n    this.snapRx = this.documents.filter((x) => x.type == \"digital_pres\");\r\n    const audios = this.documents.filter((x) => x.type == \"user_audio\");\r\n    const videos = this.documents.filter((x) => x.type == \"user_video\");\r\n    const images = this.documents.filter((x) => x.type == \"digital_phexam\");\r\n    this.labReports = this.documents.filter((x) => x.type == \"user_labreport\");\r\n    const labReports: HealthDocumentWrapper[] = this.documents.filter((x) => x.type == \"digital_labreport\");\r\n    this.labReports = this.labReports.concat(labReports);\r\n    this.otherDocuments = this.otherDocuments.concat(audios, videos, images);\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  public tab: number = 1;\r\n  tab_control(param) {\r\n    this.tab = param;\r\n  }\r\n  public hasPanel: boolean = false;\r\n  upload_panel(param) {\r\n    this.hasPanel = param;\r\n  }\r\n  public change_ac_card: boolean = false;\r\n  change_ac(param) {\r\n    this.change_ac_card = param;\r\n  }\r\n  public file_control_menu: boolean = false;\r\n  file_control(param) {\r\n    this.file_control_menu = param;\r\n  }\r\n\r\n  fileType(filename) {\r\n\r\n    return filename.split('.').pop();\r\n  }\r\n\r\n  openFile(url) {\r\n    window.open(url, '_blank');\r\n\r\n  }\r\n\r\n\r\n  open(): void {\r\n    this.visible = true;\r\n  }\r\n\r\n  close(): void {\r\n    this.visible = false;\r\n\r\n  }\r\n\r\n  closeUploader() {\r\n    this.uploadDocs = false;\r\n    this.imgFilelist = []\r\n  }\r\n\r\n  type: string = 'digital_pres'\r\n  openUploader(type) {\r\n\r\n    this.type = type;\r\n    this.uploadDocs = true;\r\n\r\n    if (type === 'digital_pres') {\r\n      this.uploadText = 'Select / Upload Prescrition';\r\n    } else if (type === 'digital_labreport') {\r\n      this.uploadText = 'Select / Upload lab report';\r\n\r\n    } else if (type === 'digital_phexam') {\r\n      this.uploadText = 'Select / Upload Ph. Exam';\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  previewImage: string | undefined = '';\r\n  previewVisible = false;\r\n\r\n  handlePreview = async (file: NzUploadFile) => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await this.getBase64(file.originFileObj!);\r\n    }\r\n    this.previewImage = file.url || file.preview;\r\n    this.previewVisible = true;\r\n  };\r\n\r\n\r\n  getBase64(file: File): Promise<string | ArrayBuffer | null> {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = error => reject(error);\r\n    });\r\n  }\r\n\r\n  async saveDocument() {\r\n\r\n    let otherImgData: uploadData[] = [];\r\n    if (this.imgFilelist.length > 0) {\r\n      otherImgData = await this.imgFilelist.map((item) => {\r\n        const fileObject: uploadData = { name: item.originFileObj.name, photo: item.response.url, thumb: item.response.url, mimeType: item.originFileObj.type, description: '', selected: false, text: '' }\r\n        return fileObject;\r\n\r\n      });\r\n    } else {\r\n\r\n      this.msg.createMessage('error', 'Please select file to upload');\r\n      return false;\r\n    }\r\n\r\n\r\n    if (otherImgData.length > 0) {\r\n      this.isDocsLoading = true;\r\n      const body: HealthDocuments = {\r\n        doc_id: `digital_pres_${this.selectedPatient.patient_id}_${Math.floor(new Date().getTime())}`,\r\n        patient_id: this.selectedPatient.patient_id,\r\n        channels: [this.selectedPatient.patient_id, this.doctor.uid],\r\n        doctor_id: this.doctor.uid,\r\n        appointment_id: '',\r\n        digital_data: otherImgData,\r\n        endtime: Math.floor(new Date().getTime()),\r\n        isOnline: true,\r\n        timestamp: Math.floor(new Date().getTime()),\r\n        type: this.type,\r\n        uploadedBy: 'patient'\r\n      }\r\n\r\n      this.saveDocumentOnServer(body);\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  saveDocumentOnServer(data: HealthDocuments) {\r\n    this.uploadService.createPrescription(data).subscribe((r) => {\r\n      this.getPatientDocument(this.selectedPatient.patient_id);\r\n      this.isDocsLoading = false;\r\n      this.msg.createMessage('success', 'File saved.');\r\n      this.visible = false;\r\n      this.uploadDocs = false;\r\n      this.imgFilelist = []\r\n    })\r\n  }\r\n\r\n\r\n}\r\n\r\nexport interface HealthDocumentResponse {\r\n  documents: HealthDocuments[];\r\n}\r\n","<app-container tabTitle=\"health records\">\r\n    <div style=\"position: relative;\"> \r\n        <!-- TODO put header data-->\r\n        <app-header \r\n        [headerTitle]=\"'Health Records'\" \r\n        [isFixed]=\"true\">\r\n      </app-header>\r\n        <!-- TODO put header data-->\r\n    <!-- Your Health Records component -->\r\n    <div class=\"Health_Records_bg\">\r\n        <br>\r\n        <!-- Search Records -->\r\n        <ng-template #icon>\r\n            <div class=\"icon_ac center_xy app_shadow_b\" (click)=\"change_ac(true)\">\r\n                <span>Ac</span>\r\n            </div>\r\n        </ng-template>\r\n    \r\n        <app-patient-card  (patientChanged)=\"patientChanged($event)\"></app-patient-card>\r\n    \r\n        <!-- end(Search Records) -->\r\n    \r\n        <!-- tab control -->\r\n        <ng-container>\r\n    \r\n            <div nz-row class=\"tab_row mt-2\">\r\n                <div nz-col class=\"center_xy\" [nzXs]=\"{ span: 8 }\">\r\n                    <h3 class=\"tab_name tabActive\" [ngClass]=\"{'tabActive': 1==tab}\" (click)=\"tab_control(1)\">\r\n                        Prescriptions</h3>\r\n                </div>\r\n                <div nz-col class=\"center_xy\" [nzXs]=\"{ span: 8 }\">\r\n                    <h3 class=\"tab_name\" [ngClass]=\"{'tabActive': 2==tab}\" (click)=\"tab_control(2)\">\r\n                        Lab Reports</h3>\r\n                </div>\r\n                <div nz-col class=\"center_xy\" [nzXs]=\"{ span: 8 }\">\r\n                    <h3 class=\"tab_name\" [ngClass]=\"{'tabActive': 3==tab}\" (click)=\"tab_control(3)\">\r\n                        Other data</h3>\r\n                </div>\r\n            </div>\r\n    \r\n            <!-- end (tab control ) -->\r\n            <!-- main tabs -->\r\n            <div *ngIf=\"1==tab\">\r\n                <!-- Health Records doc type pdf -->\r\n                <ng-container *ngIf=\"snapRx.length > 0\">\r\n                    <div class=\"health_records_doc_card mt-3\" *ngFor=\"let item of snapRx\">\r\n                        <h2 class=\"doc_heading mb-2\">\r\n                            <img src=\"assets/icon/colorIcon/extra/jpg.svg\" alt=\"\">\r\n                            <span class=\"date\"> {{item.timestamp | date:'medium'}} <i class=\"fa fa-ellipsis-h\"></i></span>\r\n                        </h2>\r\n                        <img class=\"doc_size\" src=\"{{item.url}}\" alt=\"\">\r\n                        <h3 class=\"Uploaded_by mt-2\" *ngIf=\"item.uploadedBy && item.uploadedBy === 'patient'\">Uploaded by You </h3>\r\n                    </div>\r\n    \r\n                </ng-container>\r\n                <ng-container *ngIf=\"snapRx.length == 0\">\r\n    \r\n                    <h3 class=\"text-center\">No Document found.</h3>\r\n    \r\n                </ng-container>\r\n    \r\n                <!-- end(Health Records doc type pdf)  img src=\"assets/icon/colorIcon/extra/jpg.svg\" alt=\"\"> -->\r\n    \r\n    \r\n                <!-- end(Health Records doc type pdf) -->\r\n            </div>\r\n            <div *ngIf=\"2 == tab\">\r\n    \r\n                <div class=\"health_records_doc_card mt-3\" *ngFor=\"let item of labReports\">\r\n                    <h2 class=\"doc_heading mb-2\">\r\n                        <ng-container *ngIf=\"fileType(item.url) === 'pdf'\">\r\n                            <img src=\"assets/icon/colorIcon/extra/pdf.svg\" alt=\"\">\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"fileType(item.url) != 'pdf'\">\r\n                            <img src=\"assets/icon/colorIcon/extra/jpg.svg\" alt=\"\">\r\n                        </ng-container>\r\n    \r\n                        <span class=\"date\"> {{item.timestamp | date:'medium'}} <i class=\"fa fa-ellipsis-h\"></i></span>\r\n                    </h2>\r\n    \r\n                    <ng-container *ngIf=\"fileType(item.url) != 'pdf'\">\r\n    \r\n                        <img class=\"doc_size\" src=\"{{item.url}}\" alt=\"\">\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"fileType(item.url) === 'pdf'\">\r\n    \r\n                        <div class=\"doc_size \">\r\n                            <p (click)=\"openFile(item.url)\"> [PDF] click here to file.</p>\r\n                        </div>\r\n                        <!-- <img class=\"doc_size\"\r\n                        src=\"{{item.url}}\"\r\n                        alt=\"\"> -->\r\n                    </ng-container>\r\n    \r\n                    <h3 class=\"Uploaded_by mt-2\" *ngIf=\"item.uploadedBy && item.uploadedBy === 'patient'\">Uploaded by You </h3>\r\n                </div>\r\n    \r\n            </div>\r\n            <div *ngIf=\"3==tab\">\r\n                <!-- video file -->\r\n                <ng-container *ngIf=\"otherDocuments.length > 0\">\r\n    \r\n                    <div class=\"health_records_doc_card mt-3\" *ngFor=\"let item of otherDocuments\">\r\n    \r\n                        <h2 class=\"doc_heading mb-2\">\r\n                            <img src=\"assets/img/Health_Records/video-player.svg\" *ngIf=\"item.type == 'user_audio' || item.type == 'user_video'\"> \r\n                            <img src=\"assets/icon/colorIcon/extra/jpg.svg\" alt=\"\" *ngIf=\"item.type == 'digital_phexam'\">\r\n    \r\n                            <span class=\"fileName\" *ngIf=\"item.type == 'user_audio'\">&nbsp;Audio File</span>\r\n                            <span class=\"fileName\" *ngIf=\"item.type == 'user_video'\">&nbsp;Video File</span>\r\n                            <span class=\"fileName\" *ngIf=\"item.type == 'digital_phexam'\">&nbsp;Phy. File</span>\r\n    \r\n                            <span class=\"date\">{{item.timestamp | date:'medium'}} <i class=\"fa fa-ellipsis-h\"\r\n                                    (click)=\"file_control(true)\"></i></span>\r\n    \r\n                        </h2>\r\n    \r\n                        <ng-container *ngIf=\"item.type == 'user_audio'\">\r\n                            <audio controls>\r\n                                <source [src]=\"item.url\" type=\"audio/ogg\">\r\n                                <source [src]=\"item.url\" type=\"audio/mpeg\">\r\n                                <source [src]=\"item.url\" type=\"audio/webm\">\r\n                                Your browser does not support the audio element.\r\n                            </audio>\r\n    \r\n                        </ng-container>\r\n    \r\n    \r\n                        <ng-container *ngIf=\"item.type == 'user_video'\">\r\n                            <video width=\"100%\" height=\"240\" controls>\r\n                                <source [src]=\"item.url\" type=\"video/ogg\">\r\n                                <source [src]=\"item.url\" type=\"video/mpeg\">\r\n                                <source [src]=\"item.url\" type=\"video/mp4\">\r\n                                <source [src]=\"item.url\" type=\"video/webm\">\r\n                                Your browser does not support the video tag.\r\n                            </video>\r\n    \r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"item.type == 'digital_phexam'\">\r\n                            <img class=\"doc_size\" [src]=\"item.url\" alt=\"\">\r\n                        </ng-container>\r\n    \r\n                        <h3 class=\"Uploaded_by mt-2\" *ngIf=\"item.uploadedBy && item.uploadedBy === 'patient'\">Uploaded by You </h3>\r\n    \r\n                    </div>\r\n                </ng-container>\r\n                <!-- end(video file) -->\r\n                <!-- end(video file) -->\r\n            </div>\r\n            <!--end (main tabs) -->\r\n        </ng-container>\r\n        <br>\r\n        <br>\r\n    </div>\r\n    \r\n    \r\n    \r\n    \r\n    <!-- fixed btn + upload panel   [routerLink]=\"[ '../Health-Update' ]\" -->\r\n    \r\n    \r\n    <div class=\"fixed_btn_and_upload_container\">\r\n        <div class=\"p-2\">\r\n            <!-- fixed btn --> \r\n            <ng-container >\r\n                <div nz-row class=\"fixed_btn themes_bg\"  [ngClass]=\"{'d-none': hasPanel}\" (click)=\"open()\" >\r\n                    <div nz-col [nzXs]=\"{ span: 3 }\">\r\n                        <span class=\"btn_ico center_xy\">\r\n                            <img src=\"assets/icon/colorIcon/extra/health-check.svg\" alt=\"\"> \r\n                        </span>\r\n                    </div>\r\n                    <div nz-col [nzXs]=\"{ span: 20 }\" class=\"center_xy\">\r\n                        <span class=\"btn_text themes_text\">Add Health Records</span>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n        <!-- upload panel -->\r\n            \r\n            <nz-drawer [nzClosable]=\"true\" [nzVisible]=\"visible\" [nzPlacement]=\"placement\" nzTitle=\"Upload Documents\" class=\"add_records_sheet\" [nzHeight]=\"265\" (nzOnClose)=\"close()\">\r\n                <ng-container id=\"add_records_sheet\">\r\n    \r\n                    \r\n                        <div class=\"upload_panel center_xy\" >\r\n                      \r\n                                <div nz-row class=\"Upload_control_item_row\">\r\n                                    <div class=\"center_xy\" nz-col [nzXs]=\"{ span: 8 }\">\r\n                                        <div class=\"control_item mt-2 mb-2\" (click)=\"openUploader('digital_pres')\">\r\n                                            <div class=\"center_xy app_shadow_b\">\r\n                                                <img src=\"assets/icon/colorIcon/extra/health-check.svg\" alt=\"\">\r\n                                            </div>\r\n                                            <h4>Prescriptions</h4>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"center_xy\" nz-col [nzXs]=\"{ span: 8 }\">\r\n                                        <div class=\"control_item mt-2 mb-2\" (click)=\"openUploader('digital_labreport')\">\r\n                                            <div class=\"center_xy app_shadow_b\">\r\n                                                <img src=\"assets/icon/colorIcon/extra/blood-test.svg\" alt=\"\">\r\n                                            </div>\r\n                                            <h4>Lab Reports</h4>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"center_xy\" nz-col [nzXs]=\"{ span: 8 }\">\r\n                                        <span class=\"control_item mt-2 mb-2\"  (click)=\"openUploader('digital_phexam')\">\r\n                                            <div class=\"center_xy app_shadow_b\">\r\n                                                <img src=\"assets/icon/colorIcon/extra/report.svg\" alt=\"\">\r\n                                            </div>\r\n                                            <h4>Report Complaints</h4>\r\n                                        </span>\r\n                                    </div>\r\n    \r\n                                    <div class=\"center_xy\" nz-col [nzXs]=\"{ span: 8 }\">\r\n                                        <div class=\"control_item mt-2 mb-2\">\r\n                                            <div class=\"center_xy app_shadow_b\">\r\n                                                <img src=\"assets/icon/colorIcon/extra/Groups.svg\" alt=\"\">\r\n                                            </div>\r\n                                            <h4>Video Message</h4>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"center_xy\" nz-col [nzXs]=\"{ span: 8 }\">\r\n                                        <div class=\"control_item mt-2 mb-2\">\r\n                                            <div class=\"center_xy app_shadow_b\">\r\n                                                <img src=\"assets/icon/colorIcon/extra/microphone.svg\" alt=\"\">\r\n                                            </div>\r\n                                            <h4>Voice Message</h4>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"center_xy\" nz-col [nzXs]=\"{ span: 8 }\">\r\n                                        <div class=\"control_item mt-2 mb-2\">\r\n                                            <div class=\"center_xy app_shadow_b\">\r\n                                                <img src=\"assets/icon/patient.svg\" alt=\"\">\r\n                                            </div>\r\n                                            <h4>Vitals</h4>\r\n                                        </div>\r\n                                    </div>\r\n                                   \r\n                                </div>\r\n                        </div>\r\n    \r\n            \r\n    \r\n                    \r\n                </ng-container>\r\n              </nz-drawer>\r\n    \r\n    \r\n              <nz-drawer [nzClosable]=\"false\" [nzVisible]=\"uploadDocs\" [nzPlacement]=\"'right'\" [nzWidth]=\"'100%'\" nzTitle=\"{{uploadText}}\"(nzOnClose)=\"close()\"   [nzFooter]=\"footerTpl\">\r\n                <ng-container >\r\n                    <nz-upload\r\n                    nzListType=\"picture-card\"\r\n                    [(nzFileList)]=\"imgFilelist\"\r\n                    [nzShowButton]=\"imgFilelist.length < 8\"\r\n                    [nzPreview]=\"handlePreview\"\r\n                    nzLimit=\"10\"\r\n                    nzMultiple=\"true\"\r\n                    nzAccept=\"image/x-png,image/jpeg\"\r\n                    [nzHeaders]=\"authHeader\"\r\n                    nzAction=\"http://localhost:3000/patient/uploadFile\"\r\n            \r\n                  >\r\n                    <div>\r\n                      <i nz-icon nzType=\"plus\"></i>\r\n                      <div style=\"margin-top: 8px\">Upload</div>\r\n                    </div>\r\n                  </nz-upload>\r\n            \r\n                  <nz-modal [nzVisible]=\"previewVisible\" [nzContent]=\"modalContent\" [nzFooter]=\"null\" (nzOnCancel)=\"previewVisible = false\">\r\n                    <ng-template #modalContent>\r\n                      <img [src]=\"previewImage\" [ngStyle]=\"{ width: '100%' }\" />\r\n                    </ng-template>\r\n                  </nz-modal>\r\n                </ng-container>\r\n    \r\n    \r\n                <ng-template #footerTpl>\r\n                    <div style=\"float: right\">\r\n                        <button nz-button nzType=\"primary \" style=\"margin-right: 8px;\" (click)=\"closeUploader()\" nzDanger>Close</button>\r\n                         <button nz-button nzType=\"primary\" [nzLoading]=\"isDocsLoading\"  (click)=\"saveDocument()\">Save Documents</button>\r\n                     </div>\r\n                  </ng-template>\r\n              </nz-drawer>\r\n    \r\n          \r\n    </div>\r\n    \r\n    <!-- end( fixed btn + upload pane) -->\r\n    \r\n    <!-- file control menu -->\r\n    <div class=\"file_control_menu center_xy\" [ngClass]=\"{'d-none': !file_control_menu}\">\r\n        <div>\r\n            <h2 (click)=\"file_control(false)\">\r\n                <img src=\"assets/img/Health_Records/video-player.svg\" alt=\"\">&nbsp;&nbsp;yourfilename.mp4\r\n            </h2>\r\n            <h2>\r\n                <img src=\"assets/img/Health_Records/share.svg\" alt=\"\">&nbsp;&nbsp;Share with\r\n            </h2>\r\n            <h2>\r\n                <img src=\"assets/img/Health_Records/download.svg\" alt=\"\">&nbsp;&nbsp;Download\r\n            </h2>\r\n            <h2>\r\n                <img src=\"assets/img/Health_Records/trash.svg\" alt=\"\">&nbsp;&nbsp;Delete\r\n                <span>\r\n                    <img src=\"assets/img/Health_Records/warning.svg\" class=\"warning\" alt=\"\">&nbsp;You can delete only items\r\n                    you have uploaded</span>\r\n            </h2>\r\n    \r\n        </div>\r\n    </div>\r\n    <!-- end ( file control menu ) -->\r\n    \r\n    </div>\r\n</app-container>\r\n\r\n<!-- TODO  compare to health-records-component-->\r\n<!-- <app-bin-hr></app-bin-hr> -->\r\n<!-- TODO  compare to health-records-component-->","import { Component, OnInit } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NzConfigService } from 'ng-zorro-antd/core/config';\r\nimport {\r\n  NzNotificationPlacement,\r\n  NzNotificationService,\r\n} from 'ng-zorro-antd/notification';\r\nimport { NzUploadFile } from 'ng-zorro-antd/upload';\r\nimport { DynamicTitleService } from 'src/app/shared/UI_service/dynamic-title.service';\r\nimport { Doctor } from '../../../interface/doctor';\r\nimport { HealthDocuments } from '../../../interface/health-document';\r\nimport { LandingPageData } from '../../../interface/landingData';\r\nimport { Patient } from '../../../interface/patient';\r\nimport { DoctorService } from '../../../services/doctor-service/doctor.service';\r\n\r\nimport { AudioRecordingService } from '../../../services/patient-service/audio-recording.service';\r\nimport { DgPaymentServiceService } from '../../../services/patient-service/dg-payment-service.service';\r\n\r\n@Component({\r\n  selector: 'app-health-update',\r\n  templateUrl: './health-update.component.html',\r\n  styleUrls: ['./health-update.component.less'],\r\n})\r\nexport class HealthUpdateComponent implements OnInit {\r\n  blobUrl: any;\r\n  audioBlob: any;\r\n  urls: any[] = [];\r\n  urlsOther: any[] = [];\r\n  isVideoCapture: any = '';\r\n  isUploading: boolean = false;\r\n  uploadLimit: boolean = true;\r\n  interval: any;\r\n  additonalNotes: string = '';\r\n  isRecording: boolean;\r\n  recordedTime: string;\r\n  labFileList: NzUploadFile[] = [];\r\n  imgFilelist: NzUploadFile[] = [];\r\n  selectedPatient: Patient;\r\n  doctor: Doctor;\r\n  authHeader: any;\r\n  constructor(\r\n    private notification: NzNotificationService,\r\n    private audioRecordingService: AudioRecordingService,\r\n    private sanitizer: DomSanitizer,\r\n    private doctorService: DoctorService,\r\n    private uploadService: DgPaymentServiceService,\r\n    private router: Router,\r\n    private activedRouter: ActivatedRoute\r\n  ) { }\r\n\r\n\r\n  emoji_status: any[] = [\r\n    { id: 1, value: 'Great', img: 'Image 10.svg' },\r\n    { id: 2, value: 'Ok', img: 'Image 11.svg' },\r\n    { id: 3, value: 'Bad', img: 'Image 12.svg' },\r\n    { id: 4, value: 'Horrible', img: 'Image 13.svg' },\r\n  ]\r\n  active_emoji: number = 0;\r\n  getEmojiStatus(param) {\r\n    this.active_emoji = param;\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.audioRecordingService.recordingFailed().subscribe(() => {\r\n      this.isRecording = false;\r\n    });\r\n\r\n    this.audioRecordingService.getRecordedTime().subscribe((time) => {\r\n      this.recordedTime = time;\r\n    });\r\n\r\n    this.audioRecordingService.getRecordedBlob().subscribe((data) => {\r\n      this.blobUrl = this.sanitizer.bypassSecurityTrustUrl(URL.createObjectURL(data.blob));\r\n      this.audioBlob = data.blob;\r\n    });\r\n\r\n    this.authHeader = {\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token-\" + this.doctorService.username),\r\n    };\r\n    this.selectedPatient = JSON.parse(localStorage.getItem(`${this.doctorService.username}-selectedPatient`));\r\n\r\n    this.doctorService.data$.subscribe((d: LandingPageData) => {\r\n\r\n      this.doctor = d.doctor;\r\n\r\n    })\r\n  }\r\n\r\n\r\n\r\n  startRecording() {\r\n    if (!this.isRecording) {\r\n      this.isRecording = true;\r\n      this.audioRecordingService.startRecording();\r\n    }\r\n  }\r\n\r\n  abortRecording() {\r\n    if (this.isRecording) {\r\n      this.isRecording = false;\r\n      this.audioRecordingService.abortRecording();\r\n    }\r\n  }\r\n\r\n  stopRecording() {\r\n    if (this.isRecording) {\r\n      this.audioRecordingService.stopRecording();\r\n      this.isRecording = false;\r\n      console.log(this.blobUrl);\r\n    }\r\n  }\r\n\r\n  clearRecordedData() {\r\n    this.blobUrl = null;\r\n  }\r\n\r\n\r\n  onSelectFileVideo(event) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const filesAmount = event.target.files.length;\r\n      for (let i = 0; i < filesAmount; i++) {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = (event: any) => {\r\n          event.target.type;\r\n          console.log(event.target.result);\r\n          this.isVideoCapture = event.target.result;\r\n        };\r\n\r\n        reader.readAsDataURL(event.target.files[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  previewImage: string | undefined = '';\r\n  previewVisible = false;\r\n\r\n  handlePreview = async (file: NzUploadFile) => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await this.getBase64(file.originFileObj!);\r\n    }\r\n    this.previewImage = file.url || file.preview;\r\n    this.previewVisible = true;\r\n  };\r\n\r\n\r\n  getBase64(file: File): Promise<string | ArrayBuffer | null> {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = error => reject(error);\r\n    });\r\n  }\r\n\r\n  isLoading: boolean = false;\r\n\r\n  async checkFile() {\r\n\r\n\r\n    let labData: uploadData[] = [];\r\n    let otherImgData: uploadData[] = [];\r\n\r\n    this.isLoading = true;\r\n    if (this.labFileList.length > 0) {\r\n      labData = await this.labFileList.map((item) => {\r\n        const fileObject: uploadData = { name: item.originFileObj.name, photo: item.response.url, thumb: item.response.url, mimeType: item.originFileObj.type, description: '', selected: false, text: '' }\r\n        return fileObject;\r\n\r\n      });\r\n    }\r\n\r\n    if (this.imgFilelist.length > 0) {\r\n      otherImgData = await this.imgFilelist.map((item) => {\r\n        const fileObject: uploadData = { name: item.originFileObj.name, photo: item.response.url, thumb: item.response.url, mimeType: item.originFileObj.type, description: '', selected: false, text: '' }\r\n        return fileObject;\r\n\r\n      });\r\n    }\r\n\r\n\r\n    if (labData.length > 0) {\r\n\r\n      const body: HealthDocuments = {\r\n        doc_id: `digital_lab_${this.selectedPatient.patient_id}_${Math.floor(new Date().getTime())}`,\r\n        patient_id: this.selectedPatient.patient_id,\r\n        channels: [this.selectedPatient.patient_id, this.doctor.uid],\r\n        doctor_id: this.doctor.uid,\r\n        appointment_id: '',\r\n        digital_data: labData,\r\n        endtime: Math.floor(new Date().getTime()),\r\n        isOnline: true,\r\n        timestamp: Math.floor(new Date().getTime()),\r\n        type: 'digital_labreport',\r\n        uploadedBy: 'patient'\r\n      }\r\n      this.saveDocumentOnServer(body);\r\n\r\n    }\r\n\r\n    if (otherImgData.length > 0) {\r\n      const body: HealthDocuments = {\r\n        doc_id: `digital_phexam_${this.selectedPatient.patient_id}_${Math.floor(new Date().getTime())}`,\r\n        patient_id: this.selectedPatient.patient_id,\r\n        channels: [this.selectedPatient.patient_id, this.doctor.uid],\r\n        doctor_id: this.doctor.uid,\r\n        appointment_id: '',\r\n        digital_data: otherImgData,\r\n        endtime: Math.floor(new Date().getTime()),\r\n        isOnline: true,\r\n        timestamp: Math.floor(new Date().getTime()),\r\n        type: 'digital_phexam',\r\n        uploadedBy: 'patient'\r\n      }\r\n\r\n      this.saveDocumentOnServer(body);\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    setTimeout(() => {\r\n\r\n      this.isLoading = false;\r\n      this.router.navigate(['../'], {\r\n        replaceUrl: true,\r\n        relativeTo: this.activedRouter,\r\n      });\r\n\r\n    }, 2000)\r\n\r\n\r\n\r\n  }\r\n\r\n  skipNow() {\r\n    this.router.navigate(['../'], {\r\n      replaceUrl: true,\r\n      relativeTo: this.activedRouter,\r\n    });\r\n\r\n  }\r\n\r\n  saveDocumentOnServer(data: HealthDocuments) {\r\n    this.uploadService.createPrescription(data).subscribe((r) => {\r\n      console.log(r);\r\n\r\n    })\r\n  }\r\n\r\n}\r\n\r\nexport interface uploadData {\r\n  name: string;\r\n  photo: string;\r\n  thumb: string;\r\n  mimeType: string;\r\n  text: string;\r\n  selected: boolean;\r\n  description: string\r\n\r\n}","<app-container tabTitle=\"health update\">\r\n  <div style=\"position: relative;\"> \r\n    <!-- TODO put header data-->\r\n    <app-header \r\n    [headerTitle]=\"'Health Update'\" \r\n    [isFixed]=\"false\">\r\n  </app-header>\r\n    <!-- TODO put header data-->\r\n      <div class=\"health-update-container center_xy\">\r\n  \r\n          <div class=\"health_update_card\">\r\n          <h3 class=\"health_heading mb-3\">Today I am feeling …</h3>\r\n      \r\n      \r\n          <!-- health emoji bar -->\r\n          <div class=\"emoji_bar\">\r\n              <div nz-row>\r\n                  <div nz-col [nzXs]=\"{ span: 6 }\">\r\n                      <span class=\"emoji_card\">\r\n                          <img src=\"assets/img/Health_Records/Image 10.svg\" alt=\"\" class=\"emoji_ico\" [ngClass]=\"{'No_Active_emoji': active_emoji !=1}\" (click)=\"getEmojiStatus(1)\">\r\n                          <h5>Great</h5>\r\n                      </span>\r\n                  </div>\r\n                  <div nz-col [nzXs]=\"{ span: 6 }\">\r\n                      <span class=\"emoji_card\">\r\n                          <img src=\"assets/img/Health_Records/Image 11.svg\" class=\"emoji_ico\" [ngClass]=\"{'No_Active_emoji': active_emoji !=2}\" (click)=\"getEmojiStatus(2)\"  alt=\"\">\r\n                          <h5>Ok</h5>\r\n                      </span>\r\n                  </div>\r\n                  <div nz-col [nzXs]=\"{ span: 6 }\">\r\n                      <span class=\"emoji_card\">\r\n                          <img src=\"assets/img/Health_Records/Image 12.svg\" class=\"emoji_ico\"  [ngClass]=\"{'No_Active_emoji': active_emoji !=3}\" (click)=\"getEmojiStatus(3)\" alt=\"\">\r\n                          <h5>Bad</h5>\r\n                      </span>\r\n                  </div>\r\n                  <div nz-col [nzXs]=\"{ span: 6 }\">\r\n                      <span class=\"emoji_card\">\r\n                          <img src=\"assets/img/Health_Records/Image 13.svg\" class=\"emoji_ico\" [ngClass]=\"{'No_Active_emoji': active_emoji !=4}\" (click)=\"getEmojiStatus(4)\" alt=\"\">\r\n                          <h5>Horrible</h5>\r\n                      </span>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          <!-- end (health emoji bar) -->\r\n      \r\n          <!-- health-update message -->\r\n          <h3 class=\"health_heading mt-3 mb-2\">Tell us what is bothering you </h3>\r\n          <textarea nz-input class=\"textarea_health\" [nzBorderless]=\"true\" placeholder=\"textarea with clear icon\"></textarea>\r\n          <!-- end (health-update message) -->\r\n      \r\n          <!-- media Record file -->\r\n          \r\n          <ng-container>\r\n              <h3 class=\"health_heading mt-2 mb-2\">Record Audio\r\n  \r\n                  <span class=\"add_remove_btn_group\" *ngIf=\"!isRecording && blobUrl\">\r\n                      <button>Re-Take <i nz-icon nzType=\"edit\" nzTheme=\"outline\" (click)=\"clearRecordedData()\"></i></button>\r\n                      <button>Remove <i nz-icon nzType=\"delete\" nzTheme=\"outline\" (click)=\"clearRecordedData()\"></i></button>\r\n                  </span>\r\n  \r\n              </h3>\r\n              <!-- TODO Audio File -->\r\n              <div nz-row>\r\n                  <div nz-col [nzXs]=\"{ span: 24 }\">\r\n                      <!-- btn start -->\r\n                      <div nz-row nzType=\"primary\" class=\"media_btn_bar center_xy themes_bg\"  *ngIf=\"!isRecording && !blobUrl\">\r\n                          <div nz-col [nzXs]=\"{ span: 20 }\">\r\n                            <span (click)=\"startRecording()\" class=\"media_btn_text\">Send Audio File to doctor</span>\r\n                          </div>\r\n                          <div nz-col [nzXs]=\"{ span: 4 }\">\r\n                            <img src=\"assets/icon/colorIcon/extra/mic.svg\" alt=\"\" style=\"float: right;\">\r\n                          </div>\r\n                      </div>\r\n                      <!-- btn stop -->\r\n                      <div nz-row class=\"media_btn_bar_stop center_xy\"  *ngIf=\"isRecording && !blobUrl\">\r\n                          <div nz-col [nzXs]=\"{ span: 20 }\">\r\n                            <span (click)=\"stopRecording()\" class=\"media_btn_text\">Stop Audio Recording</span>\r\n                          </div>\r\n                          <div nz-col [nzXs]=\"{ span: 4 }\">\r\n                              <i nz-icon nzType=\"minus-square\" nzTheme=\"fill\" style=\"float: right;\"></i>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n               </div>\r\n              <!-- TODO end (Audio File)-->\r\n           <div nz-row  class=\"mt-2\">\r\n              <audio *ngIf=\"!isRecording && blobUrl\" controls style=\"width: 100%;\">\r\n               <source [src]=\"blobUrl\" type=\"audio/webm\">\r\n             </audio>\r\n           </div>\r\n          </ng-container>\r\n          \r\n           <!-- //// -->\r\n         \r\n          \r\n      \r\n          <!--Share Lab Results pdf -->\r\n          <div >\r\n              <h3 class=\"health_heading mt-2 mb-2\">Record Video\r\n                  <span class=\"add_remove_btn_group\">\r\n                  <button nz-button nzType=\"primary\" nzShape=\"round\" nzSize=\"small\"  nzDanger *ngIf=\"isVideoCapture\">Remove <i nz-icon nzType=\"delete\" nzTheme=\"outline\"></i></button>\r\n                  </span>\r\n              </h3>\r\n              <!-- TODO video File -->\r\n              <div nz-ro>\r\n                  <div nz-col [nzXs]=\"{ span: 24 }\">\r\n                      <div *ngIf=\"!isVideoCapture\" (click)=\"_fileInputVideo.click()\" nz-row class=\"media_btn_bar themes_bg center_xy\">\r\n                          <div nz-col [nzXs]=\"{ span: 20 }\">\r\n                            <span class=\"media_btn_text\">Send a short 2 min video of your condition</span>\r\n                          </div>\r\n                          <div nz-col [nzXs]=\"{ span: 4 }\">\r\n                            <img src=\"assets/icon/colorIcon/extra/vid.svg\" alt=\"\" style=\"float: right;\">\r\n                          </div>\r\n                      </div>\r\n  \r\n                      <input type=\"file\" #_fileInputVideo (change)=\"onSelectFileVideo($event)\" style=\"display: none;\" accept=\"video/mp4,video/x-m4v,video/*\" />\r\n                  </div>\r\n                </div>\r\n                <!-- TODO video File -->\r\n              <div nz-row class=\"mt-2\">\r\n              <div nz-row>\r\n  \r\n              <video width=\"100%\" height=\"240\" controls *ngIf=\"isVideoCapture\" class=\"mt-2\"> \r\n                  <source src=\"{{isVideoCapture}}\" type=\"video/ogg\">\r\n                  <source src=\"{{isVideoCapture}}\" type=\"video/mpeg\">\r\n                  <source src=\"{{isVideoCapture}}\" type=\"video/mp4\">\r\n                  <source src=\"{{isVideoCapture}}\" type=\"video/webm\">\r\n                      Your browser does not support the video tag.\r\n                </video>\r\n                </div>\r\n  \r\n          </div>\r\n          <!--end(Share Lab Results pdf) -->\r\n      \r\n          <!-- Share Lab Results -->\r\n          <h3 class=\"health_heading mt-2 mb-2\">Share Lab Results ( Max 10 file and size max 10MB)</h3>\r\n           <!-- TODO Share Lab File -->\r\n          <div nz-row>\r\n              <div nz-col [nzXs]=\"{ span: 24 }\">\r\n                  <nz-upload\r\n                    class=\"upload-list-inline\"\r\n                    nzAction=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                    nzListType=\"picture\"\r\n                    [(nzFileList)]=\"labFileList\"\r\n                    nzMultiple=\"true\"\r\n                    nzLimit=\"10\"\r\n                    nzSize=\"10240\"\r\n                    nzMultiple=\"true\"\r\n                    [nzHeaders]=\"authHeader\"\r\n                    nzAccept=\"image/x-png,image/jpeg\"\r\n  \r\n                    nzAction=\"http://localhost:3000/patient/uploadFile\"\r\n                  >\r\n                  <div nz-row class=\"media_btn_bar themes_bg center_xy\">\r\n                      <div nz-col [nzXs]=\"{ span: 20 }\">\r\n                        <span class=\"media_btn_text\">Share Lab report PDF file</span>\r\n                      </div>\r\n                      <div nz-col [nzXs]=\"{ span: 4 }\">\r\n                        <img src=\"assets/icon/colorIcon/extra/microscope.svg\" alt=\"\" style=\"float: right;\">\r\n                      </div>\r\n                  </div>\r\n              </nz-upload>\r\n              </div>\r\n          </div>\r\n           <!-- TODO Share Lab File -->\r\n          <!-- end(Share Lab Results) -->\r\n      \r\n          <!-- Upload Images -->\r\n          <h3 class=\"health_heading mt-2 mb-2\">Upload Images ( Max 10 images)</h3>\r\n          <div class=\"upload_container\">\r\n  \r\n                  <nz-upload\r\n          nzAction=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n          nzListType=\"picture-card\"\r\n          [(nzFileList)]=\"imgFilelist\"\r\n          [nzShowButton]=\"imgFilelist.length < 8\"\r\n          [nzPreview]=\"handlePreview\"\r\n          nzLimit=\"10\"\r\n          nzMultiple=\"true\"\r\n          nzAccept=\"image/x-png,image/jpeg\"\r\n          [nzHeaders]=\"authHeader\"\r\n          nzAction=\"http://localhost:3000/patient/uploadFile\"\r\n  \r\n        >\r\n          <div>\r\n            <i nz-icon nzType=\"plus\"></i>\r\n            <div style=\"margin-top: 8px\">Upload</div>\r\n          </div>\r\n        </nz-upload>\r\n  \r\n        <nz-modal [nzVisible]=\"previewVisible\" [nzContent]=\"modalContent\" [nzFooter]=\"null\" (nzOnCancel)=\"previewVisible = false\">\r\n          <ng-template #modalContent>\r\n            <img [src]=\"previewImage\" [ngStyle]=\"{ width: '100%' }\" />\r\n          </ng-template>\r\n        </nz-modal>\r\n  \r\n                \r\n              \r\n          </div>\r\n          <!--end(Upload Images)  -->\r\n        </div>\r\n      \r\n      </div>\r\n  \r\n       <!-- fixed btn controls -->\r\n   <div class=\"fixed_btn_box\">\r\n      <div nz-row>\r\n          <div nz-col class=\"p-1\" [nzXs]=\"{ span: 12 }\">\r\n              <!-- <button  nz-button nzType=\"primary\" nzShape=\"round\" class=\"\" nzBlock (click)=\"skipNow()\">Skip for now</button> -->\r\n  \r\n              <button nz-button nzType=\"primary\" nzShape=\"round\" class=\"btn-success\" nzBlock  [nzLoading]=\"isLoading\" (click)=\"checkFile()\">Share with doctor</button>\r\n          </div>\r\n          <div nz-col class=\"p-1\" [nzXs]=\"{ span: 12 }\">\r\n              \r\n              <button  nz-button nzType=\"primary\" nzShape=\"round\" class=\"\" nzBlock (click)=\"skipNow()\">Skip for now</button>\r\n  \r\n  <!-- \r\n              <a [routerLink]=\"[ '../' ]\">\r\n                  <button class=\"fixed_btn\">Skip for now</button>\r\n              </a> -->\r\n  \r\n          </div>\r\n      </div>  \r\n    </div>\r\n    <!--end(fixed btn controls) -->\r\n  </div>\r\n  </div>\r\n</app-container>\r\n\r\n\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Patient } from '../../../../interface/patient';\r\nimport { MessageService} from '../../../../services/message.service'\r\n\r\n@Component({\r\n  selector: 'app-health-info',\r\n  templateUrl: './health-info.component.html',\r\n  styleUrls: ['./health-info.component.less'],\r\n})\r\nexport class HealthInfoComponent implements OnInit {\r\n  @Output() submitFinalForm = new EventEmitter<Boolean>();\r\n  @Input() patient:Patient;\r\n  selectedValue = null;\r\n  bloodGroups: string[] = ['O+', 'O-', 'A+', 'A-', 'B+', 'B-', 'AB+', 'AB-'];\r\n  healthForm: FormGroup;\r\n\r\n  weightArray: string[] = [];\r\n  heightArray: string[] = [];\r\n  isLoading:boolean = false;\r\n  \r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.healthForm = this.fb.group({\r\n      patient_weight_kgs: [this.patient.patient_weight_kgs],\r\n      patient_height: [this.patient.patient_height],\r\n      patient_blood_group: [this.patient.patient_blood_type],\r\n      isAllergic: [false],\r\n      isIllness: [false],\r\n      illnessBrief: [],\r\n      allergicData: [],\r\n      healthHistory: [],\r\n      agree:[true,[Validators.required,Validators.requiredTrue]]\r\n    });\r\n\r\n    for (let i = 3; i < 130; i++) {\r\n      this.weightArray.push(i.toString());\r\n    }\r\n    for (let i = 50; i < 200; i++) {\r\n      this.heightArray.push(i.toString());\r\n    }\r\n  }\r\n\r\n  async submitForm() {\r\n    console.log(this.healthForm.value);\r\n\r\n\r\n    this.isLoading = true;\r\n   const res =  await this.submitFinalForm.emit(this.healthForm.value);\r\n   console.log(res);\r\n  }\r\n}\r\n","<!-- Marital Status -->\r\n<form nz-form [formGroup]=\"healthForm\">\r\n  <nz-form-item class=\"bottom-5\">\r\n    <nz-form-label\r\n      [nzSm]=\"6\"\r\n      [nzXs]=\"24\"\r\n      class=\"form-label\"\r\n      nzFor=\"weight\"\r\n      >Weight (Kgs)</nz-form-label\r\n    >\r\n\r\n    <nz-form-control>\r\n      <nz-select\r\n        nzShowSearch\r\n        nzAllowClear\r\n        nzPlaceHolder=\"Select a weight\"\r\n        formControlName=\"patient_weight_kgs\"\r\n        autocomplete=\"false\"\r\n        id=\"weight\"\r\n      >\r\n        <nz-option\r\n          *ngFor=\"let item of weightArray\"\r\n          [nzLabel]=\"item\"\r\n          [nzValue]=\"item\"\r\n        ></nz-option>\r\n      </nz-select>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n\r\n  <nz-form-item class=\"bottom-5\">\r\n    <nz-form-label\r\n      [nzSm]=\"6\"\r\n      [nzXs]=\"24\"\r\n      class=\"form-label\"\r\n      >Height (CMs)</nz-form-label\r\n    >\r\n\r\n    <nz-form-control>\r\n      <nz-select\r\n        nzShowSearch\r\n        nzAllowClear\r\n        nzPlaceHolder=\"Select a height\"\r\n        formControlName=\"patient_height\"\r\n        autocomplete=\"false\"\r\n      >\r\n        <nz-option\r\n          *ngFor=\"let item of heightArray\"\r\n          [nzLabel]=\"item\"\r\n          [nzValue]=\"item\"\r\n        ></nz-option>\r\n      </nz-select>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n\r\n  <nz-form-item class=\"bottom-5\">\r\n    <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" class=\"form-label\"\r\n      >Blood Group</nz-form-label\r\n    >\r\n\r\n    <nz-form-control>\r\n      <nz-select\r\n        nzShowSearch\r\n        nzAllowClear\r\n        nzPlaceHolder=\"Select a Blood Group\"\r\n        formControlName=\"patient_blood_group\"\r\n        autocomplete=\"false\"\r\n      >\r\n        <nz-option\r\n          *ngFor=\"let item of bloodGroups\"\r\n          [nzLabel]=\"item\"\r\n          [nzValue]=\"item\"\r\n        ></nz-option>\r\n      </nz-select>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n\r\n  <nz-form-item class=\"bottom-5\">\r\n    <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" class=\"form-label\"\r\n      >Allergic Reaction</nz-form-label\r\n    >\r\n\r\n    <nz-form-control nzExtra=\"Please Select Yes/No\">\r\n      <nz-radio-group formControlName=\"isAllergic\" nzButtonStyle=\"solid\">\r\n        <label nz-radio-button [nzValue]=\"true\">Yes</label>\r\n        <label nz-radio-button [nzValue]=\"false\">No</label>\r\n      </nz-radio-group>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n\r\n  <ng-template [ngIf]=\"healthForm.get('isAllergic').value\">\r\n    <nz-form-item class=\"bottom-5\">\r\n      <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" class=\"form-label\"\r\n        >Add / Seletct Allergic</nz-form-label\r\n      >\r\n\r\n      <nz-form-control nzExtra=\"Select or add  allergic reaction.\">\r\n        <nz-select nzMode=\"tags\" nzPlaceHolder=\"Please select\" formControlName=\"allergicData\">\r\n          <nz-option\r\n            *ngFor=\"let option of bloodGroups\"\r\n            [nzLabel]=\"option\"\r\n            [nzValue]=\"option\"\r\n          ></nz-option>\r\n        </nz-select>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n  </ng-template>\r\n\r\n  <nz-form-item class=\"bottom-5\">\r\n    <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" class=\"form-label\"\r\n      >Mention History of your present</nz-form-label\r\n    >\r\n\r\n    <nz-form-control nzExtra=\"You can select or add History\">\r\n      <nz-select\r\n        nzMode=\"tags\"\r\n        nzPlaceHolder=\"Please select or add History\"\r\n        formControlName=\"healthHistory\"\r\n      >\r\n        <nz-option\r\n          *ngFor=\"let option of bloodGroups\"\r\n          [nzLabel]=\"option\"\r\n          [nzValue]=\"option\"\r\n        ></nz-option>\r\n      </nz-select>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n\r\n  <nz-form-item class=\"bottom-5\">\r\n    <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" class=\"form-label\"\r\n      >Any Current Illnesses</nz-form-label\r\n    >\r\n\r\n    <nz-form-control nzExtra=\"Please Select Yes/No\">\r\n      <nz-radio-group formControlName=\"isIllness\" nzButtonStyle=\"solid\">\r\n        <label nz-radio-button [nzValue]=\"true\">Yes</label>\r\n        <label nz-radio-button [nzValue]=\"false\">No</label>\r\n      </nz-radio-group>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n\r\n  <ng-template [ngIf]=\"healthForm.get('isIllness').value\">\r\n    <nz-form-item>\r\n      <nz-form-label [nzSpan]=\"7\"  class=\"form-label\">Write something about Illness</nz-form-label>\r\n      <nz-form-control [nzSpan]=\"12\" nzErrorTip=\"Please write something here!\">\r\n        <textarea formControlName=\"illnessBrief\" nz-input rows=\"3\"></textarea>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n  </ng-template>\r\n\r\n\r\n  <nz-form-item nz-row class=\"mar_15\">\r\n   <nz-form-control [nzSpan]=\"24\"    nzErrorTip=\"Accept T&C\">\r\n     <label nz-checkbox formControlName=\"agree\">\r\n       <span>\r\n         I have read the\r\n         <a>agreement</a>\r\n       </span>\r\n     </label>\r\n   </nz-form-control>\r\n </nz-form-item>\r\n\r\n  <!-- next btn -->\r\n  <div nz-row>\r\n    <div\r\n      nz-col\r\n      class=\"p-2 center_f_y\"\r\n      [nzXs]=\"{ span: 24 }\"\r\n      [nzMd]=\"{ span: 24 }\"\r\n    >\r\n\r\n    <button nz-button nzType=\"primary\" class=\"mt-3\" nzBlock  (click)=\"submitForm()\" [disabled]=\"!healthForm.valid\" [nzLoading]=\"isLoading\">  \r\n      Next <i nz-icon nzType=\"double-right\" nzTheme=\"outline\"   ></i></button>\r\n\r\n   \r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Patient } from 'src/app/interface/patient';\r\nimport { BaseHttpService } from 'src/app/services/base-http.service';\r\nimport { DoctorService } from 'src/app/services/doctor-service/doctor.service';\r\nimport { HttpConstants } from 'src/app/services/http-constants';\r\nimport { MessageService } from 'src/app/services/message.service';\r\nimport { MediaControlService } from 'src/app/shared/UI_service/media-control.service';\r\nimport { PatientService } from '../../../services/patient-service/patient.service';\r\n\r\n@Component({\r\n  selector: 'app-my-profile',\r\n  templateUrl: './my-profile.component.html',\r\n  styleUrls: ['./my-profile.component.less']\r\n})\r\nexport class MyProfileComponent implements OnInit {\r\n\r\n  thisDevice: boolean = true;\r\n  mobileNo: string;\r\n  selectedPatient:Patient;\r\n  patients:Patient[]= [];\r\n  constructor(private _mediaControl: MediaControlService, private activatedRoute: ActivatedRoute, private router: Router, private baseHttpService: BaseHttpService, private doctorService: DoctorService, private msg: MessageService,private patientService:PatientService) { }\r\n\r\n\r\n  personal_info: boolean = true;\r\n  tabSwitch(param) {\r\n    if (this.personalFormData) {\r\n      this.personal_info = param;\r\n    }\r\n\r\n  }\r\n  ngOnInit(): void {\r\n\r\n    this.patients = JSON.parse(localStorage.getItem(\"patients\" + this.doctorService.username));\r\n    this.selectedPatient = JSON.parse(localStorage.getItem(`${this.doctorService.username}-selectedPatient`));\r\n\r\n   \r\n  }\r\n  ngAfterContentChecked(): void {\r\n    this.thisDevice = this._mediaControl.mediaPort()\r\n  }\r\n  personalFormData: any;\r\n  nextForm(e) {\r\n    console.log(e);\r\n    this.personalFormData = e;\r\n    this.tabSwitch(false);\r\n  }\r\n  createPatient(e) {\r\n\r\n    this.selectedPatient.patient_title = this.personalFormData.patient_title;\r\n    this.selectedPatient.patient_name = this.personalFormData.patient_name;\r\n    this.selectedPatient.patient_last_name = `${this.personalFormData.patient_middle_name} ${this.personalFormData.patient_last_name}`;\r\n    this.selectedPatient.patient_gender = this.personalFormData.patient_gender;\r\n    this.selectedPatient.patient_marital_status = this.personalFormData.patient_marital_status;\r\n    this.selectedPatient.patient_address_line_1 = this.personalFormData.patient_address_line_1;\r\n    this.selectedPatient.patient_address_line_2 = this.personalFormData.patient_address_line_2;\r\n    this.selectedPatient.patient_city = this.personalFormData.patient_city;\r\n    this.selectedPatient.patient_state = this.personalFormData.patient_state;\r\n    this.selectedPatient.patient_email = this.personalFormData.patient_email;\r\n\r\n    this.selectedPatient.patient_pincode = this.personalFormData.patient_pincode;\r\n    this.selectedPatient.patient_phone = this.mobileNo;\r\n    this.selectedPatient.patient_age = this.personalFormData.patient_age;\r\n    this.selectedPatient.patient_age_month = this.personalFormData.patient_age_month;\r\n\r\n    if (e.allergicData) {\r\n      this.selectedPatient.knownAllergies = e.allergicData;\r\n    }\r\n\r\n    this.selectedPatient.patient_weight_kgs = (e.patient_weight_kgs) ? parseInt(e.patient_weight_kgs) : 0;\r\n    this.selectedPatient.patient_height = (e.patient_height) ? parseInt(e.patient_height) : 0;\r\n    this.selectedPatient.patient_blood_type = e.patient_blood_group;\r\n\r\n\r\n\r\n\r\n    this.baseHttpService.makeAuthRequest<boolean>(\"post\", HttpConstants.patient.updatePateint, this.selectedPatient).subscribe((response) => {\r\n      if (response.hasErrors()) {\r\n        this.msg.createNotification('error', 'something went wrong please try again');\r\n      } else {\r\n        if (response.data) {\r\n          this.msg.createMessage('info','Your profile is successfully updated')\r\n          this.patientService.updatePatient(this.selectedPatient);\r\n          localStorage.setItem( `${this.doctorService.username}-selectedPatient`, JSON.stringify(this.selectedPatient));\r\n        }\r\n        this.tabSwitch(true);\r\n\r\n        // this.router.navigate([\"../patient\"], {\r\n        //   relativeTo: this.activatedRoute,\r\n        // });\r\n\r\n      }\r\n    });\r\n\r\n  }\r\n}\r\n\r\ninterface SignUpInterface {\r\n  token: string;\r\n  patient: Patient;\r\n}","<app-container tabTitle=\"my profile\">\r\n  <div class=\"auth_container\">\r\n    <div class=\"dy_component_header\" nz-row>\r\n     <!-- TODO put header data-->\r\n      <app-header \r\n      [headerTitle]=\"'My Profile'\" \r\n      [isFixed]=\"true\">\r\n    </app-header>\r\n      <!-- TODO put header data-->\r\n  <!-- Your Health Records component -->\r\n      <div nz-row>\r\n          <div nz-col [nzXs]=\"{ span: 24 }\" [nzMd]=\"{ span: 12}\" *ngIf=\"!thisDevice\">\r\n              <img src=\"../../assets/img/Registration_bg.png\" class=\"img-res\" alt=\"\">\r\n          </div>\r\n          <div nz-col [nzXs]=\"{ span: 24 }\" [nzMd]=\"{ span: 12}\">\r\n            <!-- register card -->\r\n            <div class=\"register_container\">\r\n                <h4 *ngIf=\"!thisDevice\" class=\"register_heading\">Register To Healthcare center</h4>\r\n                <!-- tab panel title -->\r\n                <div nz-row class=\"tab-view\">\r\n                  <div nz-col [nzXs]=\"{ span: 12 }\" [nzMd]=\"{ span: 12}\">\r\n                    <div  class=\"tab_title\" [ngClass]=\"{'themes_border_bottom': personal_info}\">\r\n                      <h3 (click)=\"tabSwitch(true)\">Personal info</h3>\r\n                    </div>\r\n                  </div>\r\n                  <div nz-col [nzXs]=\"{ span: 12 }\" [nzMd]=\"{ span: 12}\">\r\n                    <div class=\"tab_title\" [ngClass]=\"{'themes_border_bottom': !personal_info}\">\r\n                      <h3 (click)=\"tabSwitch(false)\">Health info</h3>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                 <!-- tab panel title-->\r\n                 <!--switch tab -->\r\n                 <div class=\"main_tab\">\r\n                  \r\n                  <ng-template [ngIf]=\"personal_info\">\r\n                    <app-personal-info *ngIf=\"selectedPatient\" (nextForm)=\"nextForm($event)\" [patient]=\"selectedPatient\"> \r\n                    </app-personal-info>\r\n                  </ng-template>\r\n                   \r\n                  <ng-template [ngIf]=\"!personal_info\">\r\n                    <app-health-info (submitFinalForm)=\"createPatient($event)\" [patient]=\"selectedPatient\">\r\n                    </app-health-info>\r\n                    </ng-template>\r\n                 </div>\r\n                 <!--switch tab -->\r\n            </div>\r\n            <!-- register card -->\r\n          </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</app-container> \r\n","import { Component, Input, OnInit, Output } from '@angular/core';\r\nimport { MediaControlService } from 'src/app/shared/UI_service/media-control.service';\r\nimport * as moment from 'moment';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Patient } from '../../../../interface/patient';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { MessageService} from '../../../../services/message.service'\r\n@Component({\r\n  selector: 'app-personal-info',\r\n  templateUrl: './personal-info.component.html',\r\n  styleUrls: ['./personal-info.component.less'],\r\n})\r\nexport class PersonalInfoComponent implements OnInit {\r\n  thisDevice: boolean = true;\r\n  validateForm: FormGroup;\r\n  allTitle: string[] = [\"Mr\", \"Mrs\", \"Ms\", \"Dr\", \"Baby\"];\r\n  marriedStatus: string[] = [\"Single\", \"Married\", \"Widow\", \"Divorcee\"];\r\n  isLoading:boolean = false;\r\n  @Output() nextForm = new EventEmitter<Boolean>();\r\n  @Input() patient:Patient\r\n\r\n  constructor(\r\n    private _mediaControl: MediaControlService,\r\n    private fb: FormBuilder,\r\n    private activatedRoute:ActivatedRoute,\r\n    private msg:MessageService\r\n  ) {\r\n\r\n    this.activatedRoute.params.subscribe((params) => {\r\n      console.log(params);\r\n      const mobile = params.mobile;\r\n\r\n\r\n    })\r\n\r\n  }\r\n\r\n  allMonth: Array<{label:string,value:number}> = [\r\n    {label:'Jan',value:1},\r\n    {label:'Feb',value:2},\r\n    {label:'Mar',value:3},\r\n    {label:'Apr',value:4},\r\n    {label:'May',value:4},\r\n    {label:'June',value:6},\r\n    {label:'July',value:7},\r\n    {label:'Aug',value:8},\r\n    {label:'Sept',value:9},\r\n    {label:'Oct',value:10},\r\n    {label:'Nov',value:11},\r\n    {label:'Dec',value:12},\r\n  ];\r\n\r\n  all_year: any[] = [];\r\n  count = 1950;\r\n\r\n  // img url\r\n  imageUrl: string = 'assets/img/placeholder.png';\r\n  fileUpload: File = null;\r\n  // file upload\r\n  fileInput(file: FileList) {\r\n    this.fileUpload = file.item(0);\r\n    var reander = new FileReader();\r\n    reander.onload = (event: any) => {\r\n      this.imageUrl = event.target.result;\r\n    };\r\n    reander.readAsDataURL(this.fileUpload);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.years();\r\n\r\nconst currentYear:any = moment().format('yyyy')\r\n\r\n    const year  = (currentYear  - this.patient.patient_age);\r\n\r\n    this.validateForm = this.fb.group({\r\n      patient_title: [ this.patient.patient_title, [Validators.required]],\r\n      patient_marital_status: [this.patient.patient_marital_status],\r\n      patient_phone: [this.patient.patient_phone, [Validators.required,Validators.maxLength(10),Validators.minLength(10),Validators.pattern('^[0-9]*$')]],\r\n      patient_dob_year: [year.toString()],\r\n      patient_dob_month: [this.patient.patient_age_month,],\r\n      patient_email: ['', [Validators.required,Validators.email]],\r\n      patient_name: [this.patient.patient_name, [Validators.required]],\r\n      patient_middle_name: [''],\r\n      patient_last_name: [this.patient.patient_last_name, [Validators.required]],\r\n      patient_gender: [this.patient.patient_gender, [Validators.required]],\r\n      patient_address_line_1: [this.patient.patient_address_line_1],\r\n      patient_address_line_2: [this.patient.patient_address_line_2],\r\n      landmark: [''],\r\n      patient_state: [this.patient.patient_state, [Validators.required]],\r\n      patient_city: [this.patient.patient_city, [Validators.required]],\r\n      patient_pincode: [this.patient.patient_pincode, [Validators.required,Validators.maxLength(6),Validators.minLength(6),Validators.pattern('^[0-9]*$')]],\r\n      phoneNumberPrefix:['+91'],\r\n      notification:[true],\r\n      patient_age:[this.patient.patient_age],\r\n      patient_age_month:[this.patient.patient_age_month],\r\n      patient_age_days:[this.patient.patient_age_day],\r\n\r\n    });\r\n\r\n    if(this.patient.patient_img_path && this.patient.patient_img_path !=  '') {\r\n      this.imageUrl = this.patient.patient_img_path;\r\n    }\r\n\r\n  }\r\n\r\n  submitForm(): void {\r\n\r\n      const currentYear = moment().format('yyyy') ;\r\n      const year = this.validateForm.get('patient_dob_year').value;\r\n       const month = this.validateForm.get('patient_dob_month').value;\r\n        if(year) {\r\n         const years:any  = ( parseInt(currentYear) - parseInt(year))\r\n         this.validateForm.get('patient_age').setValue(years);\r\n      }    \r\n\r\n      if(month) {\r\n        const months:any  = ( 12 - parseInt(month))\r\n        this.validateForm.get('patient_age_month').setValue(months);\r\n     }    \r\n\r\n\r\n\r\n    for (const key in this.validateForm.controls) {\r\n      this.validateForm.controls[key].markAsDirty();\r\n      this.validateForm.controls[key].updateValueAndValidity();\r\n    }\r\n\r\n    if(this.validateForm.valid) {\r\n      console.log(this.validateForm.value);\r\n\r\n      this.nextForm.emit(this.validateForm.value);\r\n\r\n      \r\n    }\r\n  }\r\n\r\n\r\n\r\n  \r\n\r\n  years() {\r\n    const year = moment().format('yyyy');\r\n    const current: number = parseInt(year) - this.count;\r\n    for (let i = 0; i <= current; i++) {\r\n      this.all_year.push(`${this.count++}`);\r\n    }\r\n  }\r\n  ngAfterContentChecked(): void {\r\n    this.thisDevice = this._mediaControl.mediaPort();\r\n  }\r\n}\r\n","<h4 *ngIf=\"thisDevice\" style=\"font-size: 15px;color: #919CB4;\">Complete your profile, please. This info is useful\r\n   for your doctors</h4>\r\n\r\n<div nz-row class=\"pt-3 center_xy\" >\r\n <div nz-col [nzXs]=\"{ span: 24 }\" [nzMd]=\"{ span: 24}\">\r\n    <div class=\"uploadImg\">\r\n        <img [src]=\"imageUrl\" class=\"img-res\" alt=\"\">\r\n    </div>\r\n </div>\r\n <!-- <div nz-col [nzXs]=\"{ span: 12 }\" [nzMd]=\"{ span: 24}\">\r\n    <div class=\"inputBox center_xy\">\r\n        <label for=\"upload\" class=\"upload_btn\">\r\n            <i nz-icon nzType=\"upload\" nzTheme=\"outline\"></i>\r\n           &nbsp; Upload Photo\r\n        </label>\r\n        \r\n        <input type=\"file\" id=\"upload\" #image accept=\"image/*\"\r\n        (change)=\"fileInput($event.target.files)\">\r\n\r\n      </div>\r\n </div> -->\r\n\r\n <form nz-form [formGroup]=\"validateForm\" (ngSubmit)=\"submitForm()\" class=\"full-width mar_10\">\r\n\r\n\r\n   <nz-form-item class=\"bottom-5\">\r\n      <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" class=\"form-label\" nzRequired>First Name</nz-form-label>\r\n\r\n      <nz-form-control nzErrorTip=\"Please input your First name!\">\r\n        <nz-input-group [nzAddOnBefore]=\"addOnBeforeTemplateTitle\">\r\n          <ng-template #addOnBeforeTemplateTitle>\r\n            <nz-select formControlName=\"patient_title\" class=\"phone-select\">\r\n              <nz-option *ngFor=\"let item of allTitle\" [nzLabel]=\"item\" [nzValue]=\"item\"></nz-option>\r\n            </nz-select>\r\n          </ng-template>\r\n          <input type=\"text\" nz-input formControlName=\"patient_name\" name=\"patient_name\" placeholder=\"First Name\" />\r\n        </nz-input-group>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n\r\n    <nz-form-item class=\"bottom-5\">\r\n      <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\"   class=\"form-label\" >Middle Name</nz-form-label>\r\n\r\n      <nz-form-control>\r\n        <nz-input-group >\r\n        \r\n\r\n          <input type=\"text\" nz-input formControlName=\"patient_middle_name\" name=\"patient_last_name\" placeholder=\"Middle Name\" />\r\n        </nz-input-group>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n\r\n    <nz-form-item class=\"bottom-5\">\r\n      <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" class=\"form-label\" nzRequired>Last Name</nz-form-label>\r\n\r\n      <nz-form-control nzErrorTip=\"Please input your Last name!\">\r\n        <nz-input-group >\r\n          <input type=\"text\" nz-input formControlName=\"patient_last_name\" name=\"patient_last_name\" placeholder=\"Last Name\" />\r\n        </nz-input-group>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n\r\n    <nz-form-item class=\"bottom-5\">\r\n      <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" class=\"form-label\" nzRequired>Gender</nz-form-label>\r\n\r\n      <nz-form-control nzErrorTip=\"Please input your Last name!\">\r\n        <nz-input-group >\r\n         <nz-radio-group formControlName=\"patient_gender\" nzButtonStyle=\"solid\">\r\n            <label nz-radio-button nzValue=\"Male\">Male</label>\r\n            <label nz-radio-button nzValue=\"Female\">Female</label>\r\n            <label nz-radio-button nzValue=\"Other\">Other</label>\r\n          </nz-radio-group>      \r\n           </nz-input-group>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n\r\n\r\n    <div nz-row class=\"bottom-5\">\r\n      <div nz-col class=\"p-2 center_f_y\"  [nzXs]=\"{ span: 24 }\" [nzMd]=\"{ span: 6}\">\r\n         <nz-form-label  [nzXs]=\"24\" class=\"form-label\" >Date Of Birth</nz-form-label>\r\n      </div>\r\n      <div nz-col class=\"p-2 no-left-p\" [nzXs]=\"{ span: 12 }\" [nzMd]=\"{ span: 9}\">\r\n         <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Year\" formControlName=\"patient_dob_year\" name=\"year\" >\r\n            <nz-option *ngFor=\"let year of all_year\" [nzLabel]=\"year\" [nzValue]=\"year\"></nz-option>\r\n          </nz-select>\r\n       </div>\r\n       <div nz-col class=\"p-2\" [nzXs]=\"{ span: 12 }\" [nzMd]=\"{ span: 9}\">\r\n         <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"month\" formControlName=\"patient_dob_month\" name=\"momth\" >\r\n            <nz-option *ngFor=\"let Month of allMonth\" [nzLabel]=\"Month.label\" [nzValue]=\"Month.value\"></nz-option>\r\n          </nz-select>\r\n       </div>\r\n    </div>\r\n\r\n\r\n    <nz-form-item class=\"bottom-5\">\r\n      <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" class=\"form-label\" >Marital Status</nz-form-label>\r\n   \r\n      <nz-form-control >\r\n         <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Select a option\" formControlName=\"patient_marital_status\" autocomplete=\"false\">\r\n          <nz-option *ngFor=\"let item of marriedStatus\" [nzLabel]=\"item\" [nzValue]=\"item\"></nz-option>\r\n          </nz-select>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n\r\n    \r\n\r\n    \r\n    <nz-form-item class=\"bottom-5\">\r\n      <nz-form-label  [nzSm]=\"6\" [nzXs]=\"24\" class=\"form-label\" nzRequired>Mobile Number</nz-form-label>\r\n      <nz-form-control nzErrorTip=\"Please input your Last name!\">\r\n\r\n         <nz-input-group [nzAddOnBefore]=\"addOnBeforeTemplate\" >\r\n            <ng-template #addOnBeforeTemplate>\r\n              <nz-select formControlName=\"phoneNumberPrefix\" class=\"phone-select\">\r\n                <nz-option nzLabel=\"+91\" nzValue=\"+91\"></nz-option>\r\n              </nz-select>\r\n            </ng-template>\r\n            <input formControlName=\"patient_phone\" name=\"phone\" id=\"phoneNumber\" nz-input inputmode=\"numeric\" maxlength=\"10\"  />\r\n          </nz-input-group>\r\n        \r\n      </nz-form-control>\r\n         </nz-form-item>\r\n         \r\n\r\n  <div nz-row class=\"bottom-5\">        \r\n   <div nz-col class=\"p-2 text-center\" [nzXs]=\"{ span: 24 }\" [nzMd]=\"{ span: 24}\">\r\n      <label nz-checkbox formControlName=\"notification\">\r\n         <span class=\"checkbox_text\">Receive WhatsApp notifications from clinic & doctor\r\n         </span>\r\n      </label>\r\n    </div>\r\n </div>\r\n\r\n\r\n <nz-form-item class=\"bottom-5\">\r\n   <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" class=\"form-label\" nzRequired>Email-Id</nz-form-label>\r\n\r\n   <nz-form-control nzErrorTip=\"Please input your email!\" nzExtra=\"We Hate Spam! Email for Notifications\"\r\n   \r\n   >\r\n     <nz-input-group >\r\n       <input type=\"email\" nz-input formControlName=\"patient_email\" name=\"email\" placeholder=\"Email-Id\" />\r\n     </nz-input-group>\r\n   </nz-form-control>\r\n </nz-form-item>\r\n\r\n <nz-form-item class=\"bottom-5\">\r\n   <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" class=\"form-label\" >Location</nz-form-label>\r\n\r\n   <nz-form-control nzErrorTip=\"Please input your Last name!\">\r\n     <nz-input-group >\r\n       <input type=\"text\" nz-input formControlName=\"patient_address_line_1\" name=\"location\" placeholder=\"Location\"/>\r\n     </nz-input-group>\r\n   </nz-form-control>\r\n </nz-form-item>\r\n <nz-form-item class=\"bottom-5\">\r\n   <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" class=\"form-label\">House / Flat / Block No.</nz-form-label>\r\n\r\n   <nz-form-control >\r\n     <nz-input-group >\r\n       <input type=\"text\" nz-input formControlName=\"patient_address_line_2\" name=\"house_number\" placeholder=\"House / Flat / Block No\" />\r\n     </nz-input-group>\r\n   </nz-form-control>\r\n </nz-form-item>\r\n <nz-form-item class=\"bottom-5\">\r\n   <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" class=\"form-label\">Landmark</nz-form-label>\r\n\r\n   <nz-form-control >\r\n     <nz-input-group >\r\n       <input type=\"text\" nz-input formControlName=\"landmark\" name=\"landmark\" placeholder=\"Nearest Landmark\" />\r\n     </nz-input-group>\r\n   </nz-form-control>\r\n </nz-form-item>\r\n <nz-form-item class=\"bottom-5\">\r\n  <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" class=\"form-label\" nzRequired>State</nz-form-label>\r\n\r\n  <nz-form-control nzErrorTip=\"Please input your State Name!\">\r\n     <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Select a State\" formControlName=\"patient_state\" autocomplete=\"false\">\r\n        <nz-option nzLabel=\"single\" nzValue=\"single\"></nz-option>\r\n        <nz-option nzLabel=\"married\" nzValue=\"married\"></nz-option>\r\n      </nz-select>\r\n  </nz-form-control>\r\n</nz-form-item>\r\n <nz-form-item class=\"bottom-5\">\r\n   <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" class=\"form-label\" nzRequired>City</nz-form-label>\r\n\r\n   <nz-form-control nzErrorTip=\"Please input your City Name!\">\r\n      <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Select a City\" formControlName=\"patient_city\" autocomplete=\"false\">\r\n         <nz-option nzLabel=\"single\" nzValue=\"single\"></nz-option>\r\n         <nz-option nzLabel=\"married\" nzValue=\"married\"></nz-option>\r\n       </nz-select>\r\n   </nz-form-control>\r\n </nz-form-item>\r\n <nz-form-item class=\"bottom-5\">\r\n   <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" class=\"form-label\" nzRequired>Pincode</nz-form-label>\r\n\r\n   <nz-form-control nzErrorTip=\"Please input your pincode!\">\r\n     <nz-input-group >\r\n       <input type=\"number\" nz-input formControlName=\"patient_pincode\" maxlength=\"6\" minlength=\"6\" inputmode=\"numeric\" name=\"pincode\" placeholder=\"Pin Code\" autocomplete=\"false\" />\r\n     </nz-input-group>\r\n   </nz-form-control>\r\n </nz-form-item>\r\n\r\n\r\n <div nz-row>\r\n   <div nz-col class=\"p-2 center_f_y\"  [nzXs]=\"{ span: 24 }\" [nzMd]=\"{ span: 24}\">\r\n       <button nz-button nzType=\"primary\" class=\"mt-3\" nzBlock  [disabled]=\"!validateForm.valid\" [nzLoading]=\"isLoading\">  \r\n        Next <i nz-icon nzType=\"double-right\" nzTheme=\"outline\"></i></button>\r\n    </div>\r\n </div>\r\n\r\n\r\n </form>\r\n\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Appointment } from '../../../interface/appointment';\r\nimport { Clinic } from '../../../interface/clinic';\r\nimport { ClinicTime } from '../../../interface/clinic-timing';\r\nimport { LandingPageData } from '../../../interface/landingData';\r\nimport { Patient } from '../../../interface/patient';\r\nimport { DoctorService } from '../../../services/doctor-service/doctor.service';\r\nimport * as moment from \"moment\";\r\nimport { MessageService } from '../../../services/message.service';\r\nimport { Route } from '@angular/compiler/src/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PatientService } from '../../../services/patient-service/patient.service';\r\nimport { DynamicTitleService } from 'src/app/shared/UI_service/dynamic-title.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-select-time',\r\n  templateUrl: './select-time.component.html',\r\n  styleUrls: ['./select-time.component.less']\r\n})\r\nexport class SelectTimeComponent implements OnInit {\r\n  Pick_slot = 1;\r\n  radioValue_one = 1;\r\n  patients:Patient[]= [];\r\n  selectedPatient:Patient;\r\n  appointment:Appointment;\r\n  isTelemedicine:boolean = true;\r\n  allClinic:Clinic[]= [];\r\n  selectedClinic:Clinic;\r\n  selectedTime:ClinicTime;\r\n  currentStime: number;\r\n  loopTime: number;\r\n  currentTimeSlot: number = 15;\r\n  currentEtime: number;\r\n  doctorSlots: any[]= [];\r\n  selectedDateCalender = new Date();\r\n  clinicTimings:any[]= []\r\n  routerLinkData:any;\r\n  rescheduledDocId:string = '';\r\n  constructor(private doctorService:DoctorService,private msg:MessageService,public  router:Router,private route:ActivatedRoute,private patientService:PatientService) {\r\n\r\n    if(this.router.getCurrentNavigation().extras.state){\r\n      this.routerLinkData = this.router.getCurrentNavigation().extras.state.apptData;\r\n    }\r\n   }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.patients = JSON.parse(localStorage.getItem(\"patients\" + this.doctorService.username));\r\n    if(this.patients.length === 1) {\r\n      this.selectedPatient = this.patients[0];\r\n\r\n    } else  {\r\n\r\n      const selectedPatient:Patient = JSON.parse(localStorage.getItem(`${this.doctorService.username}-selectedPatient`));\r\n      const patient  = this.patients.filter((item) =>{\r\n          return item.patient_id === selectedPatient.patient_id\r\n       })\r\n      \r\n       this.selectedPatient = patient[0];\r\n    }\r\n\r\n   this.doctorService.data$.subscribe((d:LandingPageData) => {\r\n   this.allClinic = d.clinics;\r\n    \r\n   const clinic = this.allClinic.filter( (item) => {\r\n      return item.isVirtualClinic === true;\r\n\r\n    })\r\n    \r\n    this.selectedClinic = clinic[0];\r\n\r\n\r\n    if(this.routerLinkData){\r\n      this.selectedClinic = this.routerLinkData.clinic;\r\n      this.selectedTime= this.routerLinkData.time;\r\n      this.isTelemedicine= this.routerLinkData.isTelemedicine;\r\n      this.userSelectedSlot= this.routerLinkData.slot;\r\n      this.selectedDateCalender = new Date(this.routerLinkData.date);\r\n       this.rescheduledDocId  = this.routerLinkData.document_id;\r\n      const patient  = this.patients.filter((item) =>{\r\n        return item.patient_id === this.routerLinkData.patient.patient_id\r\n     })\r\n    \r\n     this.selectedPatient = patient[0];\r\n\r\n      \r\n    }\r\n\r\n    this.dateChanged(this.selectedDateCalender);\r\n\r\n    \r\n\r\n  });\r\n  }\r\n\r\n\r\n  toggleType() {\r\n    this.isTelemedicine = (this.isTelemedicine) ? false : true;\r\n\r\n    if(this.isTelemedicine){\r\n      const clinic = this.allClinic.filter( (item) => {\r\n        return item.isVirtualClinic === true;\r\n  \r\n      })\r\n       this.selectedClinic = clinic[0];\r\n\r\n    } else {\r\n    const clinic = this.allClinic.filter( (item) => {\r\n      return !item.isVirtualClinic;\r\n\r\n    })\r\n     this.selectedClinic = clinic[0];\r\n   \r\n  }\r\n\r\n  this.dateChanged(this.selectedDateCalender);\r\n  this.userSelectedSlot = null;\r\n  this.selectedTime = null;\r\n  this.finalSlots  = []; \r\n  }\r\n\r\n  dateChanged(date) {\r\n     this.clinicTimings = [];\r\n    this.selectedDateCalender = new Date(date);\r\n    const selectDay = moment(this.selectedDateCalender).weekday();\r\n    if(this.selectedClinic){\r\n    const clinicTimeOfDay  =  this.selectedClinic.clinicTimings.filter( (item) =>{\r\n        return  ( item.disableDays.indexOf(selectDay) !=  -1)        \r\n      })\r\n      this.clinicTimings  = clinicTimeOfDay;\r\n    }\r\n    if(this.selectedTime) {\r\n      this.showSlots(this.selectedTime);\r\n    }\r\n\r\n  }\r\n\r\n  getDoctorSlots(date:Date){\r\n\r\n\r\n  }\r\n\r\n  changePatient(item:Patient) {\r\n\r\n  this.selectedPatient = item;\r\n  //console.log(\"selectedPatientOnChange\");\r\n  this.patientService.setSelectedPatient(this.selectedPatient);\r\n\r\n  }\r\n\r\n  changeClinic(item:Clinic) {\r\n    console.log(item);\r\n    this.selectedClinic = item;\r\n    this.selectedTime = null;\r\n    this.userSelectedSlot = null;\r\n    this.dateChanged(this.selectedDateCalender);\r\n\r\n  }\r\n\r\n  changeTime(item:ClinicTime) {\r\n    if(item != this.selectedTime)\r\n    this.selectedTime = item;\r\n    this.showSlots(item);\r\n  }\r\n\r\n  selectSlot(slot:slotInterface){\r\n    this.userSelectedSlot = slot;\r\n  }\r\n\r\n\r\n  finalSlots:slotInterface[]= []\r\n  Slots:slotInterface[]= [];\r\n  userSelectedSlot:slotInterface;\r\n\r\n  showSlots(data) {\r\n    var dataClinic = data;\r\n    var disabledDay = [];\r\n    this.Slots = [];\r\n    this.finalSlots = [];\r\n    this.userSelectedSlot = null;\r\n\r\n    var currentDate = new Date(this.selectedDateCalender);\r\n    var day = moment(currentDate).format(\"DD\");\r\n    var month = moment(currentDate).format(\"MM\");\r\n\r\n    var year = moment(currentDate).format(\"YYYY\");\r\n\r\n    var combinationDate3 =\r\n      month + \"/\" + day + \"/\" + year + \" \" + data.starttime;\r\n    var combinationDate4 = month + \"/\" + day + \"/\" + year + \" \" + data.endtime;\r\n\r\n    var StartTime =\r\n      moment(combinationDate3, \"MM/DD/YYYY HH:mm\").valueOf() / 1000;\r\n    var EndTimeS =\r\n      moment(combinationDate4, \"MM/DD/YYYY HH:mm\").valueOf() / 1000;\r\n    var currentTimeDate = Math.floor(new Date().getTime()) / 1000;\r\n\r\n    if (currentTimeDate > EndTimeS) {\r\n      //$(\".time_all_slot\").fadeOut();\r\n      this.finalSlots = [];\r\n  this.msg.createMessage('info','Sorry Clinic closed for today');\r\n\r\n      //$(\".loading\").hide();\r\n      return false;\r\n    }\r\n\r\n    if (dataClinic.monStatus === false) {\r\n      disabledDay.push(1);\r\n    }\r\n    if (dataClinic.tueStatus === false) {\r\n      disabledDay.push(2);\r\n    }\r\n    if (dataClinic.wedStatus === false) {\r\n      disabledDay.push(3);\r\n    }\r\n    if (dataClinic.thuStatus === false) {\r\n      disabledDay.push(4);\r\n    }\r\n    if (dataClinic.friStatus === false) {\r\n      disabledDay.push(5);\r\n    }\r\n    if (dataClinic.satStatus === false) {\r\n      disabledDay.push(6);\r\n    }\r\n    if (dataClinic.sunStatus === false) {\r\n      disabledDay.push(7);\r\n    }\r\n\r\n    this.currentStime = StartTime;\r\n    this.currentEtime = EndTimeS;\r\n    this.loopTime = StartTime;\r\n\r\n    this.startLoop();\r\n  }\r\n\r\n  startLoop() {\r\n    var time = this.currentTimeSlot;\r\n\r\n    if (\r\n      this.loopTime == this.currentEtime - 60 * time ||\r\n      this.loopTime > this.currentEtime - 60 * time\r\n    ) {\r\n      this.Slots.push({ slotTime: this.currentStime, status: \"\" });\r\n\r\n      this.Slots.sort((x, y) => {\r\n        return x.slotTime - y.slotTime;\r\n      });\r\n\r\n      var data = this.Slots;\r\n\r\n      for (var c = 0; c < data.length; c++) {\r\n        var found = this.doctorSlots.some((el) => {\r\n          //    alert(data[c].slotTime);\r\n          return el.startDateTime === data[c].slotTime * 1000;\r\n        });\r\n        if (!found) {\r\n          if (new Date().getTime() / 1000 > data[c].slotTime) {\r\n          } else {\r\n            this.finalSlots.push({\r\n              slotTime: data[c].slotTime * 1000,\r\n              endSlot: data[c].slotTime + 60 * time * 1000,\r\n              status: \"avail\",\r\n            });\r\n          }\r\n        } else {\r\n          // finalSlots1.push({slotTime:data[c].slotTime,status:'block'});\r\n        }\r\n      }\r\n\r\n    } else {\r\n      time = this.currentTimeSlot;\r\n      this.Slots.push({ slotTime: this.loopTime + time * 60, status: \"block\" });\r\n\r\n      this.loopTime = this.loopTime + time * 60;\r\n      // this.setState({loopTime: this.state.loopTime + 15*60}, () => {\r\n\r\n      this.startLoop();\r\n      //});\r\n    }\r\n  }\r\n  \r\n\r\n  bookAppointment()\r\n  {\r\n\r\n    if(!this.selectedClinic) {\r\n      this.msg.createMessage('error','Please select clinic');\r\n      return false;\r\n    }\r\n\r\n    if(!this.selectedTime) {\r\n      this.msg.createMessage('error','Please select appointment time');\r\n      return false;\r\n    }\r\n    if(!this.userSelectedSlot) {\r\n      this.msg.createMessage('error','Please select appointment time');\r\n      return false;\r\n    }\r\n\r\n\r\n    const appData = {clinic:this.selectedClinic,time:this.selectedTime,slot:this.userSelectedSlot,date:this.selectedDateCalender,patient:this.selectedPatient,isTelemedicine:this.isTelemedicine,document_id:this.rescheduledDocId}\r\n    this.router.navigate(['../Confirm'], { \r\n      relativeTo: this.route,\r\n      replaceUrl: true,\r\n      state: { apptData: appData } \r\n    });  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport interface slotInterface{\r\n\r\n  slotTime:number;\r\n  endSlot?:number;\r\n  status:string;\r\n}","<app-container tabTitle=\"book appointment\">\r\n    <!-- TODO put header data-->\r\n    <app-header [headerTitle]=\"'book appointment'\" [isFixed]=\"true\">\r\n    </app-header>\r\n    <!-- TODO put header data-->\r\n    <div class=\"select-time-container\">\r\n        <!-- switcher -->\r\n        <div class=\"switcher\">\r\n            <div nz-row>\r\n                <div nz-col [nzXs]=\"{ span: 12, offset: 0}\">\r\n                    <button class=\"switcher_btn\" [ngClass]=\"{'active_btn': isTelemedicine === true}\"\r\n                        (click)=\"toggleType()\">Online Consult</button>\r\n                </div>\r\n                <div nz-col [nzXs]=\"{ span: 12, offset: 0}\">\r\n                    <button class=\"switcher_btn \" [ngClass]=\"{'active_btn': isTelemedicine === false}\"\r\n                        (click)=\"toggleType()\">Clinic Visit</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- end(switcher) -->\r\n\r\n        <!--1 select input -->\r\n        <ng-container *ngIf=\"patients.length > 1\">\r\n            <nz-select [nzSize]=\"'large'\" [nzPlaceHolder]=\"'Select Patient'\" [nzBorderless]=\"true\"\r\n                [ngModel]=\"selectedPatient\" (ngModelChange)=\"changePatient($event)\">\r\n\r\n                <ng-container *ngFor=\"let item of patients\">\r\n                    <nz-option nzLabel=\"{{item.patient_name}} {{item.patient_last_name}}  ({{item.patient_id}})\"\r\n                        [nzValue]=\"item\">\r\n                        <!-- <span class=\"custom_option\">\r\n            <img src=\"assets/icon/colorIcon/extra/patient.svg\" alt=\"\">&nbsp;&nbsp;\r\n            <span class=\"select_name\">{{item.patient_name}} {{item.patient_last_name}}</span>  \r\n            <span class=\"Digi_id\">{{item.patient_id}}</span> \r\n        </span>  -->\r\n                    </nz-option>\r\n                    <nz-divider></nz-divider>\r\n                </ng-container>\r\n\r\n\r\n                <nz-option [nzValue]=\"\" nzLabel=\"Add New Patient \"> </nz-option>\r\n            </nz-select>\r\n        </ng-container>\r\n\r\n        <!-- end (select input)-->\r\n        <ng-container *ngIf=\"!isTelemedicine\">\r\n\r\n            <!--2 select input -->\r\n            <nz-select [nzSize]=\"'large'\" [nzPlaceHolder]=\"'Select Address'\" [ngModel]=\"selectedClinic\"\r\n                [nzBorderless]=\"true\" (ngModelChange)=\"changeClinic($event)\">\r\n                <ng-container *ngFor=\"let item of allClinic\">\r\n                    <nz-option\r\n                        title=\"{{item.doc_clinic_name}}, {{item.address_line_1}}, {{item.address_line_2}},{{item.city}}\"\r\n                        nzLabel=\"{{item.doc_clinic_name}}, {{item.address_line_1}}, {{item.address_line_2}},{{item.city}}  \"\r\n                        *ngIf=\"!item.isVirtualClinic\" [nzValue]=\"item\"> </nz-option>\r\n                </ng-container>\r\n            </nz-select>\r\n        </ng-container>\r\n\r\n        <!-- end (select input)-->\r\n\r\n        <!--3 select input -->\r\n        <!-- <nz-select [nzSize]=\"'large'\" [nzPlaceHolder]=\"'Select Service'\" [nzBorderless]=\"true\">\r\n    <nz-option nzLabel=\"option.label\" [nzValue]=\"11\"></nz-option>\r\n</nz-select> -->\r\n        <!-- end (select input)-->\r\n\r\n        <!-- calendar -->\r\n        <app-calendar [datePicker]=\"true\" (dateChanged)=\"dateChanged($event)\" [activeDate]=\"selectedDateCalender\">\r\n        </app-calendar>\r\n        <!-- end (select input)-->\r\n\r\n\r\n        <!-- Pick a slot card-->\r\n        <ng-container *ngIf=\"selectedClinic\">\r\n            <div nz-row class=\"mb-2\">\r\n                <div nz-col [nzXs]=\"{ span: 24, offset: 0}\">\r\n                    <h2 class=\"card_heading\">Pick a Time</h2>\r\n                </div>\r\n\r\n            </div>\r\n            <div nz-row [nzGutter]=\"[16, 16]\" class=\"mb-2 full-width\">\r\n                <div nz-col class=\"gutter-row\" [nzSpan]=\"12\" *ngFor=\"let item of clinicTimings\"\r\n                    (click)=\"changeTime(item)\">\r\n                    <div class=\"grid-config active-time\" [ngClass]=\"{'active-time': item === selectedTime}\">\r\n                        {{item.starttime}} - {{item.endtime}}</div>\r\n                </div>\r\n                <nz-alert *ngIf=\"clinicTimings.length === 0\" nzType=\"info\"\r\n                    nzMessage=\"Sorry Clinic not open on this days. Please select another date.\" nzShowIcon></nz-alert>\r\n\r\n\r\n            </div>\r\n        </ng-container>\r\n\r\n        <!-- end (Pick a slot card) -->\r\n\r\n        <div nz-row class=\"mb-2\" *ngIf=\"selectedTime && this.finalSlots.length > 0\">\r\n            <div nz-col [nzXs]=\"{ span: 24, offset: 0}\">\r\n                <h2 class=\"card_heading\">Select Slot</h2>\r\n            </div>\r\n\r\n\r\n            <div nz-row [nzGutter]=\"[16, 8]\" class=\"mb-2\">\r\n                <div nz-col class=\"gutter-row\" [nzSpan]=\"8\" *ngFor=\"let item of finalSlots\" (click)=\"selectSlot(item)\">\r\n                    <div class=\"grid-config active-time\" [ngClass]=\"{'active-time': item === userSelectedSlot}\">\r\n                        {{item.slotTime | date:'h:mm a' }}</div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n        <!-- fixed btn -->\r\n        <!-- fixed btn -->\r\n        <!-- Book Appointment btn-->\r\n        <div class=\"fixed_btn_row p-2\">\r\n            <div nz-row class=\"fixed_btn themes_bg\" (click)=\"bookAppointment()\">\r\n                <div nz-col [nzXs]=\"{ span: 3 }\">\r\n                    <span class=\"btn_ico center_xy\">\r\n                        <img src=\"assets/icon/colorIcon/extra/bag.svg\" alt=\"\">\r\n                    </span>\r\n                </div>\r\n                <div nz-col [nzXs]=\"{ span: 21 }\" class=\"center_xy\">\r\n                    <span class=\"btn_text themes_text\">Book Appointment</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- end (Book Appointment btn)-->\r\n\r\n        <!-- fixed btn -->\r\n    </div>\r\n\r\n\r\n</app-container>","import { Component, OnInit } from '@angular/core';\r\nimport { Appointment } from '../../../interface/appointment';\r\nimport { BaseHttpService } from '../../../services/base-http.service';\r\nimport { HttpConstants } from '../../../services/http-constants';\r\nimport { todayAppt } from '../../patient-dashboard.component';\r\nimport * as moment from \"moment\";\r\nimport { MessageService } from '../../../services/message.service';\r\nimport { Patient } from '../../../interface/patient';\r\nimport { Clinic } from '../../../interface/clinic';\r\nimport { LandingPageData } from '../../../interface/landingData';\r\nimport { DoctorService } from '../../../services/doctor-service/doctor.service';\r\nimport { pairs } from 'rxjs';\r\nimport { DynamicTitleService } from 'src/app/shared/UI_service/dynamic-title.service';\r\n\r\n@Component({\r\n  selector: 'app-your-appointments',\r\n  templateUrl: './your-appointments.component.html',\r\n  styleUrls: ['./your-appointments.component.less']\r\n})\r\nexport class YourAppointmentsComponent implements OnInit {\r\n\r\n  todayDate: number;\r\n  allUpcomingAppt: Appointment[] = [];\r\n  allPastAppt: Appointment[] = [];\r\n  isLoadingPresc: boolean = false;\r\n  patients: Patient[] = [];\r\n  allClinics: Clinic[] = [];\r\n  selectedPatient: Patient;\r\n  constructor(private http: BaseHttpService, private msg: MessageService, private doctorService: DoctorService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.patients = JSON.parse(localStorage.getItem(\"patients\" + this.doctorService.username));\r\n    this.selectedPatient = JSON.parse(localStorage.getItem(`${this.doctorService.username}-selectedPatient`));\r\n\r\n\r\n    this.doctorService.data$.subscribe((d: LandingPageData) => {\r\n      this.allClinics = d.clinics;\r\n    })\r\n\r\n    this.todayDate = new Date(moment().startOf('day').toString()).getTime();\r\n    this.getUpcomingAppt(this.selectedPatient.patient_id);\r\n  }\r\n\r\n\r\n  patientChanged(item: Patient) {\r\n    if (this.selectedPatient.patient_id != item.patient_id) {\r\n      this.getUpcomingAppt(item.patient_id);\r\n      this.selectedPatient = item;\r\n    }\r\n  }\r\n\r\n\r\n  getUpcomingAppt(patientId: string) {\r\n    this.allUpcomingAppt = [];\r\n    this.allPastAppt = [];\r\n    const dataToPost = { patient_id: patientId }\r\n    this.http.makeAuthRequest<todayAppt>('POST', HttpConstants.appointment.getAllAppointments, dataToPost).subscribe(result => {\r\n\r\n      if (result.data) {\r\n        result.data.appointment.forEach(element => {\r\n\r\n          if (element.startDateTime >= this.todayDate) {\r\n\r\n            this.allUpcomingAppt = [...this.allUpcomingAppt, element];\r\n          } else {\r\n            this.allPastAppt = [...this.allPastAppt, element];\r\n          }\r\n\r\n        });\r\n      }\r\n\r\n    })\r\n\r\n  }\r\n\r\n  getPrescription(item: Appointment) {\r\n\r\n    this.isLoadingPresc = true;\r\n    const data = { doc_id: item.doc_id, patient_id: item.patient_id };\r\n\r\n    this.http.makeAuthRequest<todayAppt>('POST', HttpConstants.appointment.getPrescriptionById, data).subscribe(result => {\r\n      this.isLoadingPresc = false;\r\n\r\n      if (result.errors.length > 0) {\r\n        window.open(`https://migrate.digiscribe.in/downloadPdf/${item.doc_id}`, '_bank');\r\n        return true;\r\n      }\r\n\r\n      if (result.data.appointment && result.data.appointment.length > 0) {\r\n\r\n        console.log(`https://migrate.digiscribe.in/downloadPdf/${item.doc_id}`);\r\n\r\n        window.open(`https://migrate.digiscribe.in/downloadPdf/${item.doc_id}`, '_bank');\r\n        //  window.open(`https://migrate.digiscribe.in/pdf-renderer#/${item.doc_id}`,'_bank');\r\n      } else {\r\n\r\n        this.msg.createNotification('error', \"We did not found any prescription on this appointment, Kindly consult with your doctor for the same.\");\r\n      }\r\n\r\n    })\r\n\r\n  }\r\n\r\n}\r\n","<app-container tabTitle=\"Your appointments\">\r\n  <!-- TODO put header data-->\r\n  <app-header \r\n  [headerTitle]=\"'Your Appointments'\" \r\n  [isFixed]=\"true\">\r\n</app-header>\r\n  <!-- TODO put header data-->\r\n<div class=\"your_appoinment_container p-2\">\r\n    <br>\r\n    <br>\r\n<!-- date -->\r\n<h1 class=\"Today_date mt-3\">        Today, {{ todayDate | date: \"MMM, dd yyyy\" }} </h1>\r\n\r\n<app-patient-card  (patientChanged)=\"patientChanged($event)\"></app-patient-card>\r\n\r\n\r\n<!-- card doctor + Patient card-->\r\n<!-- <div nz-row class=\"card center_xy app_shadow_b mt-3\">\r\n    <div class=\"center_xy\" nz-col [nzXs]=\"{ span: 4 }\">\r\n     <img src=\"assets/icon/colorIcon/plane_patient.svg\" alt=\"\">\r\n    </div>\r\n    <div nz-col [nzXs]=\"{ span: 20 }\">\r\n        <div nz-row>\r\n            <div nz-col [nzXs]=\"{ span: 12 }\">\r\n               <h2 class=\"name\">Achint Sarkar</h2>\r\n               <h3 class=\"other_info\">Age : 32 Years</h3>\r\n               <h3 class=\"other_info\">Sex : Male</h3>\r\n            </div>\r\n            <div nz-col [nzXs]=\"{ span: 12 }\" style=\"position: relative;\">\r\n              <h3 class=\"card_id\">Digi-ID-123456</h3>\r\n              <button class=\"Edit\">Edit Profile <img src=\"assets/icon/colorIcon/pencil.png\" alt=\"\"></button>\r\n            </div>\r\n        </div>          \r\n    </div>\r\n</div>\r\n\r\n<div nz-row class=\"card center_xy app_shadow_b mt-3\">\r\n    <div class=\"center_xy\" nz-col [nzXs]=\"{ span: 5 }\">\r\n     <img src=\"https://www.elihealthemr.com/wp-content/uploads/2019/06/doctor-slider-img.jpg\" alt=\"\" class=\"dr_img\">\r\n    </div>\r\n    <div nz-col [nzXs]=\"{ span: 19 }\">\r\n        <div nz-row>\r\n            <div nz-col [nzXs]=\"{ span: 12 }\">\r\n               <h2 class=\"name\">Achint Sarkar</h2>\r\n               <h3 class=\"other_info\">Age : 32 Years</h3>\r\n               <h3 class=\"other_info\">Sex : Male</h3>\r\n            </div>\r\n            <div nz-col [nzXs]=\"{ span: 12 }\" style=\"position: relative;\">\r\n              <h3 class=\"card_id\">Digi-ID-123456</h3>\r\n              <button class=\"Edit\">Edit Profile <img src=\"assets/icon/colorIcon/pencil.png\" alt=\"\"></button>\r\n            </div>\r\n        </div>          \r\n    </div>\r\n</div> -->\r\n<!-- end( card doctor + Patient card ) -->\r\n\r\n<!-- Upcoming Appointments card-->\r\n<h2 class=\"upcoming_appointments_heading \" *ngIf=\"allUpcomingAppt.length > 0\">\r\n    Upcoming Appointments</h2>\r\n    <!-- ________________________________________________________ -->\r\n<!-- _______________________dynamic cards____________________-->\r\n<!-- ________________________________________________________ -->\r\n        <!-- Appointment status card 1.1 -->\r\n        <!-- card 1  -->\r\n\r\n        <app-appointment-card [todaysAppointment]='allUpcomingAppt' [patients]=\"patients\" [allClinics]=\"allClinics\" ></app-appointment-card>\r\n\r\n\r\n\r\n           <!-- card 5 -->\r\n        \r\n        <!-- end(Appointment status card)-->\r\n<!-- end (Upcoming Appointments card) -->\r\n\r\n<!-- Past Appointments card-->\r\n<div style=\"position: relative;\">\r\n  \r\n    <h2 class=\"Past_appointments_heading mt-3 mb-3\">\r\n        Appointment History</h2>\r\n\r\n\r\n        <nz-timeline>\r\n            <nz-timeline-item [nzDot]=\"dotTemplate\" *ngFor=\"let item of allPastAppt\" class=\"timeline-items-digi\">\r\n                <div class=\"status_card p-2\">\r\n                    <div nz-row>\r\n                       <div nz-col [nzXs]=\"{ span: 24 }\">\r\n                           <h4 class=\"mb-2\">{{item.startDateTime | date:'MMM, dd yyyy hh:mm a'}}</h4>\r\n                          <div nz-row>\r\n                              <div nz-col [nzXs]=\"{ span: 12 }\">\r\n                                 <div class=\"data_card_left\">\r\n                                     <h4>  {{\r\n                                        item.appointmentReason && item.appointmentReason != \"\"\r\n                                          ? item.appointmentReason\r\n                                          : \"Consultation\"\r\n                                      }}\r\n                                    </h4>\r\n\r\n                                    <h4>\r\n                                        {{\r\n                                          item.isTelimedicineAppointment &&\r\n                                          item.isTelimedicineAppointment === true\r\n                                            ? \"Online-Consult\"\r\n                                            : \"In-Clinic Consult\"\r\n                                        }}\r\n                                      </h4>\r\n                                 </div>\r\n                              </div> \r\n                              <div nz-col [nzXs]=\"{ span: 12 }\">\r\n                                  <div class=\"data_card_right\">\r\n                                    <h4\r\n                                    [ngClass]=\"\r\n                                      item.type === 'appointment' ? 'primary' : 'danger'\r\n                                    \"\r\n                                  >\r\n                                    {{\r\n                                      item.type === \"appointment\" ? \"Confirmed\" : \"Un-confirmed\"\r\n                                    }}\r\n                                  </h4>\r\n                                  \r\n                                  <h4 class=\"danger\" *ngIf=\"!item.isBillPaid\">\r\n                                    <i nz-icon nzType=\"warning\" nzTheme=\"fill\"></i>Un-Paid\r\n                                  </h4>\r\n                                  <h4\r\n                                    class=\"success\"\r\n                                    *ngIf=\"item.isBillPaid && item.isBillPaid === true\"\r\n                                  >\r\n                                    <i nz-icon nzType=\"check-circle\" nzTheme=\"fill\"></i> Paid\r\n                                    Checkup\r\n                                  </h4>\r\n                                \r\n\r\n                                  <!-- <h4 class=\"success\"><i nz-icon nzType=\"check-circle\" nzTheme=\"fill\"></i> Paid Checkup</h4>\r\n                                      <h4>In-Clinic Consult</h4> -->\r\n                                  </div>\r\n                              </div> \r\n                          </div> \r\n                       </div> \r\n                       <div nz-col [nzXs]=\"{ span: 24 }\">\r\n                           <div class=\"status_card_btn_row mt-3\" *ngIf=\"item.appointment_status\">\r\n                            <div nz-row [nzGutter]=\"[16, 8]\" >\r\n                                <div nz-col class=\"gutter-row\" [nzSpan]=\"12\">\r\n                                    <button\r\n                                      nz-button\r\n                                      nzType=\"default\"\r\n                                      class=\"btn-success full-width\"\r\n                                      [nzLoading]=\"isLoadingPresc\"\r\n                                      (click)=\"getPrescription(item)\"\r\n                                    >\r\n                                    <img src=\"assets/icon/colorIcon/extra/prescription.svg\" alt=\"\"> &nbsp; Prescription\r\n                                    </button>\r\n                                </div>\r\n\r\n                                <div nz-col class=\"gutter-row\" [nzSpan]=\"12\">\r\n                                    <button\r\n                                      nz-button\r\n                                      nzType=\"default\"\r\n                                      class=\"btn-info full-width\"\r\n                                    >\r\n                                    <img src=\"assets/icon/colorIcon/extra/receipt.svg\" alt=\"\"> &nbsp;  Invoice\r\n                                    </button>\r\n                   \r\n                                </div>\r\n                        \r\n                               </div> \r\n                             \r\n                           </div>\r\n\r\n                           <h3 class=\"extra_sub_history btn_danger\" *ngIf=\"item.isCancelled\">This appointment is cancelled.</h3>\r\n                           <h3 class=\"extra_sub_history missed\" *ngIf=\"!item.isCancelled && !item.appointment_status\">You missed this appointment.</h3>\r\n                           <h3 class=\"extra_sub_history\" *ngIf=\"item.appointment_status\">Click here to book your lab & medicine</h3>\r\n\r\n                       </div>\r\n                       \r\n                        \r\n                    </div>  \r\n                </div> \r\n                <ng-template #dotTemplate>\r\n                <div class=\"History_date center_xy\">\r\n                    <span>\r\n                      <h4>{{item.startDateTime | date:'dd'}}</h4>\r\n                      <h4>{{item.startDateTime | date:'MMM'}}</h4>\r\n                    </span>\r\n                </div>  \r\n                </ng-template>\r\n\r\n                </nz-timeline-item>\r\n\r\n    </nz-timeline>\r\n\r\n\r\n        <!-- end (all time line card here) -->\r\n</div>\r\n\r\n<!-- end ( Past Appointments card) -->\r\n<br><br><br>\r\n<!-- fixed btn -->\r\n<div class=\"fixed_btn_row p-2\">\r\n  <div nz-row class=\"fixed_btn themes_bg\" [routerLink]=\"[ '../book-appointment' ]\">\r\n      <div nz-col [nzXs]=\"{ span: 3 }\">\r\n          <span class=\"btn_ico center_xy\">\r\n              <img src=\"assets/icon/colorIcon/extra/bag.svg\" alt=\"\">\r\n          </span>\r\n      </div>\r\n      <div nz-col [nzXs]=\"{ span: 21 }\" class=\"center_xy\">\r\n          <span class=\"btn_text themes_text\">Book Appointment</span>\r\n      </div>\r\n  </div>\r\n</div>\r\n<!-- end (fixed btn) -->\r\n</div>\r\n</app-container>\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-cart-root',\r\n  templateUrl: './cart-root.component.html',\r\n  styleUrls: ['./cart-root.component.less']\r\n})\r\nexport class CartRootComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\r\nimport { CustomIconsService } from '../../../../shared/UI_service/custom-icons.service';\r\nimport { allIcons } from '../../../../shared/icon/custom-icon';\r\nimport { customerAddressDetails } from '../../../../interface/orderDetails';\r\nimport { Patient } from '../../../../interface/patient';\r\nimport { DoctorService } from '../../../../services/doctor-service/doctor.service';\r\nimport { BaseHttpService } from '../../../../services/base-http.service';\r\nimport { customerDetails } from '../../../../interface/customerDetails';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\n\r\n\r\n@Component({\r\n  selector: 'app-confirm-address',\r\n  templateUrl: './confirm-address.component.html',\r\n  styleUrls: ['./confirm-address.component.less']\r\n})\r\nexport class ConfirmAddressComponent implements OnInit {\r\n\r\npatientAddress:customerDetails\r\nselectedPatient:Patient; \r\n\r\n  location = this._CustomIcons.setIcon(allIcons.location);\r\n  Edit = this._CustomIcons.setIcon(allIcons.Edit)\r\n  trash = this._CustomIcons.setIcon(allIcons.trash)\r\n  isSpining: boolean;\r\n  selectedAddress:any;\r\n  constructor(private _CustomIcons: CustomIconsService,private doctorService:DoctorService,private http:BaseHttpService, private router:Router,private activedRouter:ActivatedRoute,private modal: NzModalService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.selectedPatient = JSON.parse(localStorage.getItem(`${this.doctorService.username}-selectedPatient`));\r\n    this.getPatientAddress(this.selectedPatient.patient_id);\r\n\r\n    this.selectedAddress = JSON.parse(localStorage.getItem(`selectedAddress-${this.selectedPatient.patient_id}`)) || '';\r\n  }\r\n\r\n  getPatientAddress(patientId:string){\r\n\r\n    this.isSpining = true;\r\n    const data = {\"patientId\":\"digi-10005\"}\r\n\r\n    this.http.makePartnerRequest<customerDetails>({method:'POST',url:'/v1/customer/findAllAddressByDigiId',data:data}).subscribe(res => {\r\n      this.isSpining  = false;\r\n      this.patientAddress = res.data;\r\n    })\r\n\r\n  }\r\n\r\n\r\n  selectedThis(item) {\r\n\r\n    localStorage.setItem(`selectedAddress-${this.selectedPatient.patient_id}`,JSON.stringify(item));\r\n\r\n    this.router.navigate(['../apptTime'], { \r\n      relativeTo: this.activedRouter,\r\n      replaceUrl: true,\r\n    }); \r\n  }\r\n\r\n  addNewAddress(){\r\n\r\n    this.router.navigate(['../addAddress/'+this.patientAddress.customerId], { \r\n      relativeTo: this.activedRouter,\r\n      replaceUrl: true,\r\n    }); \r\n\r\n\r\n\r\n  }\r\n\r\n  editAddress(item){\r\n\r\n    this.router.navigate(['../addAddress/'+this.patientAddress.customerId], { \r\n      relativeTo: this.activedRouter,\r\n      replaceUrl: true,\r\n      state: { apptData: item }\r\n\r\n    }); \r\n  }\r\n  \r\n\r\n  showDeleteConfirm(item): void {\r\n    this.modal.confirm({\r\n      nzTitle: 'Are you sure delete this Address?',\r\n      nzOkText: 'Yes',\r\n      nzOkType: 'danger',\r\n      nzOnOk: () => this.deletePatientAddress(item),\r\n      nzCancelText: 'No',\r\n      nzOnCancel: () => console.log('Cancel')\r\n    });\r\n  }\r\n\r\n  deletePatientAddress(item) {\r\n\r\n    this.isSpining = true;\r\n\r\n    this.http.makePartnerRequest<customerDetails>({method:'POST',url:'/v1/customer/deleteCustomerAddressById',data:{\"customerAddressId\":item.customerAddressId}}).subscribe(res => {\r\n      this.isSpining  = false;\r\n      const index = this.patientAddress.customerAddresses.indexOf(item);\r\n      if (index >= 0) {\r\n        this.patientAddress.customerAddresses.splice(index, 1);\r\n      }\r\n\r\n\r\n    })\r\n\r\n\r\n  }\r\n\r\n}\r\n","\r\n<nz-spin nzTip=\"Please wait..\" [nzSpinning]=\"isSpining\" >\r\n\r\n<div class=\"Dy-Component-Container_2\">\r\n    <!-- TODO put header data-->\r\n<app-header \r\n[headerTitle]=\"'Confirm address'\" \r\n[isFixed]=\"false\">\r\n</app-header>\r\n<!-- TODO put header data-->\r\n <!-- container -->\r\n <div class=\"p-2\">\r\n       <!-- heading -->\r\n   <h3 class=\"Select_address mt-2 mb-2\">\r\n    Select a delivery & Service address\r\n</h3>\r\n<!--  -->\r\n<!-- recently_used_address -->\r\n <div class=\"recently_used_address app_shadow_b\">\r\n     <h3 class=\"recently_used_heading\">Recently Used</h3>\r\n     <ng-container *ngFor=\"let item of patientAddress?.customerAddresses\">\r\n        <div nz-row class=\"mt-3\">\r\n            <div nz-col [nzXs]=\"{ span: 3 }\" style=\"display: flex;justify-content: center;\">\r\n                <label class=\"checkbox_container ml-2\">\r\n                    <input type=\"checkbox\" [checked]=\"item === selectedAddress\">\r\n                    <span class=\"checkmark\"></span>\r\n                </label> \r\n            </div>\r\n            <div nz-col [nzXs]=\"{ span: 17 }\">\r\n                <div class=\"address_card\">\r\n                    <h2>{{item.customerAddressLine1}}</h2>\r\n                    <h4>{{item.customerAddressLine2}}</h4>\r\n                    <h4>{{item.customerCity}}</h4>\r\n                    <h4>{{item.customerPincode}}</h4>\r\n                    <h4>Landmark : {{item.customerState}}</h4>\r\n                </div>\r\n            </div>\r\n            <div nz-col [nzXs]=\"{ span: 4 }\">\r\n                <h2 class=\"at_address\">{{item?.customerAddressType.CustomerAddressTypeName}}</h2>\r\n            </div>\r\n            <div nz-col [nzXs]=\"{ span: 24 }\" class=\"Hr\">\r\n                <div nz-row class=\"mt-2 mb-2\">\r\n                    <div nz-col [nzXs]=\"{ span: 24 }\" class=\"center_xy\">\r\n                        <span>\r\n                           <button class=\"Deliver_Here_btn\" (click)=\"selectedThis(item)\" >\r\n                                <i nz-icon class=\"nz_ico\" [innerHTML]=\"location\" style=\"width: 12px;\"></i>\r\n                                &nbsp;&nbsp; \r\n                                <span>Deliver Here</span>\r\n                            </button>\r\n                            &nbsp;\r\n                            <button class=\"btn_2 btn_warn\" (click)=\"editAddress(item)\">\r\n                                <i nz-icon class=\"nz_ico\" [innerHTML]=\"Edit\" style=\"width: 12px;\"></i>\r\n                                &nbsp;&nbsp;\r\n                                Edit Address\r\n                            </button>\r\n                            &nbsp;\r\n                            <button class=\"btn_2 btn_danger\" (click)=\"showDeleteConfirm(item)\">\r\n                                <i nz-icon class=\"nz_ico\" [innerHTML]=\"trash\" style=\"width: 12px;\"></i>\r\n                                &nbsp;&nbsp;Remove\r\n                            </button>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     </ng-container>\r\n     <br>\r\n </div>\r\n </div>\r\n <!-- container -->\r\n<br><br><br>\r\n <!-- fixed btn--> \r\n<div class=\"fixed_btn_row p-2\">\r\n    <div nz-row class=\"fixed_btn themes_bg\" (click)=\"addNewAddress()\">\r\n        <div nz-col [nzXs]=\"{ span: 3 }\">\r\n            <span class=\"btn_ico center_xy\">\r\n                <img src=\"assets/img/address/01-home.svg\" alt=\"\">\r\n            </span>\r\n        </div>\r\n        <div nz-col [nzXs]=\"{ span: 21 }\" class=\"center_xy\">\r\n            <span class=\"btn_text themes_text\">ADD NEW ADDRESS</span>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- end (fixed btn)-->\r\n\r\n</div>\r\n\r\n<ng-template #indicatorTemplate><i nz-icon nzType=\"loading\"></i></ng-template>\r\n\r\n\r\n</nz-spin>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CustomIconsService } from 'src/app/shared/UI_service/custom-icons.service';\r\nimport { orderDetails, orderItems } from '../../../../interface/orderDetails';\r\nimport { Patient } from '../../../../interface/patient';\r\nimport { DoctorService } from '../../../../services/doctor-service/doctor.service';\r\nimport { allIcons } from '../../../../shared/icon/custom-icon';\r\n\r\n@Component({\r\n  selector: 'app-confirm-cart',\r\n  templateUrl: './confirm-cart.component.html',\r\n  styleUrls: ['./confirm-cart.component.less']\r\n})\r\nexport class ConfirmCartComponent implements OnInit {\r\n  \r\n  selectedPatient:Patient;\r\n  itemsAddedCart:orderDetails[] = [];\r\n  finalTotalAmount:number = 0;\r\n  constructor(private _IconsService: CustomIconsService,private doctorService:DoctorService) { }\r\n  ngOnInit(): void {\r\n    \r\n    this.selectedPatient = JSON.parse(localStorage.getItem(`${this.doctorService.username}-selectedPatient`));\r\n    this.itemsAddedCart =  JSON.parse(localStorage.getItem('cartData-'+this.selectedPatient.patient_id)) || []\r\n      \r\n    this.itemsAddedCart.forEach(element => {\r\n      this.count(element.orders);\r\n    });\r\n    \r\n  }\r\n\r\n  count(array: orderItems[]) {\r\n\r\n    this.finalTotalAmount = this.finalTotalAmount  + array.reduce((r, a) => {\r\n      return r + a.amountRecieveable;\r\n    }, 0);\r\n  }\r\n\r\n  trash = this._IconsService.setIcon(allIcons.trash);\r\n  heart = this._IconsService.setIcon(allIcons.heart);\r\n  Edit = this._IconsService.setIcon(allIcons.Edit);\r\n}\r\n","<div class=\"Dy-Component-Container\">\r\n    <!-- TODO put header data-->\r\n<app-header \r\n[headerTitle]=\"'Confirm Cart'\" \r\n[isFixed]=\"false\">\r\n</app-header>\r\n<!-- TODO put header data-->\r\n    <div class=\"p-2\">\r\n        <!-- switcher -->\r\n    <div class=\"switcher mt-2 app_shadow_b\">\r\n        <div nz-row>\r\n            <div nz-col [nzXs]=\"{ span: 12 }\">\r\n                <div class=\"switcher_price center_xy\">\r\n                    <span>\r\n                        <h4>Sub- Total</h4>\r\n                        <h4>INR {{finalTotalAmount}}</h4>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div nz-col [nzXs]=\"{ span: 12 }\">\r\n                <div class=\"NEXT center_xy\" [routerLink]=\"[ '../address']\">\r\n                    NEXT\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- end (switcher) -->\r\n    \r\n    <!-- dropdown header templale -->\r\n    <!-- <ng-template #Medications>\r\n     <div nz-row class=\"center_xy\">\r\n        <div nz-col [nzXs]=\"{ span: 3 }\" class=\"center_xy\">\r\n            <img src=\"assets/img/Confirm_Cart/medicine.svg\" alt=\"\">\r\n        </div>\r\n        <div nz-col [nzXs]=\"{ span: 21 }\">\r\n           <h3>\r\n               <span class=\"medications\">Medications</span>\r\n               <span class=\"medications_price\">INR 3100</span>\r\n            </h3>\r\n        </div>\r\n     </div>\r\n    </ng-template> -->\r\n\r\n    <ng-template #Investigations>\r\n        <div nz-row class=\"center_xy\">\r\n            <div nz-col [nzXs]=\"{ span: 3 }\" class=\"center_xy\">\r\n                <img src=\"assets/img/Confirm_Cart/blood-test.svg\" alt=\"\">\r\n            </div>\r\n            <div nz-col [nzXs]=\"{ span: 21 }\">\r\n               <h3>\r\n                   <span class=\"medications\">Investigations</span>\r\n                   <span class=\"medications_price\">INR {{finalTotalAmount}}</span>\r\n                </h3>\r\n            </div>\r\n         </div>\r\n    </ng-template>\r\n    <!-- end (dropdown header templale) -->\r\n    \r\n    <!-- dropdown -->\r\n    <!-- 1 -->\r\n    <nz-collapse nzAccordion [nzBordered]=\"false\" [nzGhost]=\"true\" [nzExpandIconPosition]=\"'right'\">\r\n        <!-- <nz-collapse-panel class=\"card app_shadow_b mt-3\" [nzHeader]=\"Medications\" [nzActive]=\"false\" [nzShowArrow]=\"true\">\r\n            <ng-container *ngFor=\"let item of medications\">\r\n                <div nz-col [nzXs]=\"{ span: 24 }\">\r\n                    <div nz-row class=\"CRUD_Card mt-2\">\r\n                      <div nz-col [nzXs]=\"{ span: 14 }\" class=\"center_f_y\">\r\n                          <span>\r\n                            <h3 class=\"tabletName\">{{item.name}}</h3>\r\n                            <h4 class=\"tabletBrand\">({{item.brand}})</h4>\r\n                            <h4 class=\"tabletContains\">\r\n                                {{item.Tablet_contains}}</h4>\r\n                          </span>\r\n                      </div> \r\n                      <div nz-col [nzXs]=\"{ span: 10 }\">\r\n                          <div class=\"tablet_right\">\r\n                            <h2 class=\"tabletPrice\">Rs. {{item.price}} / Strip</h2>\r\n                            <div class=\"delivered\">\r\n                              <div class=\"center_xy p-2\">\r\n                                  <img src=\"assets/img/Confirm_Cart/Flat.svg\" width=\"19px\" alt=\"\">\r\n                              </div>\r\n                              <div class=\"delivered_text\">\r\n                                  will be delivered by <br>\r\n                                  Bombay Medico\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                      </div> \r\n                      <div nz-col [nzXs]=\"{ span: 24 }\">\r\n                         <div nz-row class=\"mt-2\">\r\n                            <div nz-col [nzXs]=\"{ span: 24 }\">\r\n                                <nz-select  [nzSize]=\"'small'\" class=\"custom_select\" ngModel=\"lucys\"\r\n                                    [nzBorderless]=\"true\">\r\n    \r\n                                    <nz-option *ngFor=\"let item of items\" [nzValue]=\"item\" [nzLabel]=\"item\">\r\n                                    </nz-option>\r\n                                </nz-select><span class=\"Qty\">Strip(s)</span>\r\n                            </div> \r\n                            <div nz-col [nzXs]=\"{ span: 24 }\">\r\n                                <span class=\"btn_Row mt-2 mb-3\">\r\n                                    <button class=\"Custom_btn btn_danger\">\r\n                                        <i nz-icon class=\"nz_ico\" [innerHTML]=\"trash\" style=\"width: 12px;\"></i>&nbsp;Remove \r\n                                        </button>&nbsp;\r\n                                        <button class=\"Custom_btn btn_warn\">\r\n                                            <i nz-icon style=\"width: 12px;\" class=\"nz_ico\"[innerHTML]=\"heart\"></i>&nbsp;\r\n                                            &nbsp;Save for later\r\n                                    </button>\r\n                                </span>\r\n                            </div> \r\n                             <div nz-col [nzXs]=\"{ span: 24 }\" style=\"border-bottom: 1px solid #707070;\">\r\n                             </div>\r\n                         </div> \r\n                      </div> \r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </nz-collapse-panel> -->\r\n     \r\n     \r\n        <nz-collapse-panel class=\"card app_shadow_b mt-3\" [nzHeader]=\"Investigations\" [nzActive]=\"false\" [nzShowArrow]=\"true\">\r\n            <ng-container *ngFor=\"let item of itemsAddedCart\">\r\n            \r\n                <ng-container *ngFor=\"let data of item?.orders\">\r\n                    \r\n                <div nz-col [nzXs]=\"{ span: 24 }\">\r\n                    <div nz-row class=\"CRUD_Card mt-2\">\r\n                      <div nz-col [nzXs]=\"{ span: 15 }\" class=\"center_f_y\">\r\n                          <span>\r\n                            <h3 class=\"tabletName\">{{data.labName}}</h3>\r\n                            <h4 class=\"tabletBrand\">(Serviced from  {{item?.partnerDetails?.partnerName}})</h4>\r\n                          </span>\r\n                      </div> \r\n                      <div nz-col [nzXs]=\"{ span: 8 }\">\r\n                          <div class=\"tablet_right\">\r\n                            <h2 class=\"tabletPrice\">Rs. {{data.amountRecieveable}} / Test</h2>\r\n                          </div>\r\n                      </div> \r\n                      <div nz-col [nzXs]=\"{ span: 24 }\">\r\n                          <h3 class=\"testFor mt-2\">\r\n                             <img src=\"assets/img/Confirm_Cart/center_visit.svg\" width=\"24px\" alt=\"\">  {{ data.partnerServicesType?.partnerServiceName }} </h3>\r\n                      </div>\r\n                      <div nz-col [nzXs]=\"{ span: 24 }\">\r\n                     \r\n\r\n                        <div nz-row [nzGutter]=\"[16, 8]\">\r\n                            <div nz-col class=\"gutter-row\" [nzSpan]=\"6\">\r\n\r\n                            </div>\r\n                            <div nz-col class=\"gutter-row\" [nzSpan]=\"6\">\r\n\r\n                            </div>\r\n                            <div nz-col class=\"gutter-row\" [nzSpan]=\"12\">\r\n                                <button nz-button class=\"btn_warn\">\r\n                                    <i nz-icon style=\"width: 12px;\" class=\"nz_ico\"[innerHTML]=\"heart\"></i>&nbsp;\r\n                                    &nbsp;Save for later\r\n                            </button>\r\n                            </div>\r\n\r\n                           \r\n                         </div> \r\n                      </div> \r\n                    </div>\r\n                </div>\r\n                </ng-container>\r\n\r\n            </ng-container>\r\n        </nz-collapse-panel>\r\n      </nz-collapse>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- TODO custom icon -->\r\n\r\n\r\n\r\n\r\n\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { orderDetails } from '../../../../interface/orderDetails';\r\nimport { Patient } from '../../../../interface/patient';\r\nimport { BaseHttpService } from '../../../../services/base-http.service';\r\nimport { DoctorService } from '../../../../services/doctor-service/doctor.service';\r\n\r\n@Component({\r\n  selector: 'app-confirm-timing',\r\n  templateUrl: './confirm-timing.component.html',\r\n  styleUrls: ['./confirm-timing.component.less']\r\n})\r\nexport class ConfirmTimingComponent implements OnInit {\r\n\r\n  constructor(private doctorService:DoctorService,private http:BaseHttpService,private router:Router,private activedRouter :ActivatedRoute) { }\r\n  public Drug: boolean = false;\r\n  itemsAddedCart:orderDetails[]= [];\r\n  selectedPatient:Patient;\r\n  finalSlots:remotimeSlots;\r\n  isSpining:boolean;\r\n  ngOnInit(): void {\r\n\r\n    this.selectedPatient = JSON.parse(localStorage.getItem(`${this.doctorService.username}-selectedPatient`));\r\n    this.itemsAddedCart =  JSON.parse(localStorage.getItem('cartData-'+this.selectedPatient.patient_id)) || []\r\n\r\n    \r\n    //this.itemsAddedCart[0].partnerDetails.isRemoteAPI\r\n    if(this.itemsAddedCart.length > 0) {\r\n       this.getSlotFromServer(this.itemsAddedCart[0],this.itemsAddedCart[0].selectedSlotDateTime.selectedDate);\r\n    }\r\n\r\n  }\r\n  dateChanged(date,item:orderDetails,i:number) {\r\n\r\n\r\n    this.getSlotFromServer(item,date);\r\n\r\n  }\r\n\r\n  selectSlot(item:orderDetails,time) {\r\n\r\n    item.selectedSlotDateTime.slotStartTime = time;\r\n\r\n    console.log(this.itemsAddedCart);\r\n\r\n  }\r\n\r\n\r\n  getSlotFromServer(item,date) {\r\n\r\n    this.isSpining = true;\r\n    const data  = {\"partnerCityId\":4,\"locality\":\"ASIF NAGAR\",\"visitDate\":date}\r\n\r\n    this.http.makePartnerRequest<remotimeSlots>({ method: 'POST', url: '/v1/lalpath/getAllAvailableSlot', data: data }).subscribe(res => {\r\n      this.isSpining = false;\r\n     this.finalSlots = res.data;\r\n\r\n    })\r\n\r\n  }\r\n\r\n\r\n  finalOrder() {\r\n\r\n  localStorage.setItem('cartData-'+this.selectedPatient.patient_id, JSON.stringify(this.itemsAddedCart))\r\n\r\n    this.router.navigate(['../orderSummary'], { \r\n      relativeTo: this.activedRouter,\r\n      replaceUrl: true,\r\n        \r\n    }); \r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\nexport interface remotimeSlots {\r\n\r\n    date:string;\r\n    phlebo_slots:Array<{slot:string,name:string,price:number,type:string,count:number}>\r\n\r\n}","\r\n<div class=\"Dy-Component-Container_2\">\r\n     <!-- TODO put header data-->\r\n<app-header \r\n[headerTitle]=\"'Confirm Timing'\" \r\n[isFixed]=\"false\">\r\n</app-header>\r\n<!-- TODO put header data-->\r\n <!-- container -->\r\n <nz-spin [nzSpinning]=\"isSpining\">\r\n\r\n\r\n <div class=\"p-2\">\r\n   <ng-template #SelectDateOne>\r\n       <div nz-row>\r\n           <div nz-col [nzXs]=\"{ span: 3 }\">\r\n               <img src=\"assets/img/ConfirmTiming/medicines.svg\" alt=\"\">  \r\n           </div>\r\n           <div nz-col [nzXs]=\"{ span: 21 }\">\r\n               <h3 class=\"panel_heading\">Select Date For Home Collection</h3>\r\n           </div>\r\n       </div>\r\n   </ng-template>\r\n   <ng-template #DrugDelivery>\r\n    <div nz-row>\r\n        <div nz-col [nzXs]=\"{ span: 3 }\">\r\n            <img src=\"assets/img/ConfirmTiming/medicine.svg\" alt=\"\">  \r\n        </div>\r\n        <div nz-col [nzXs]=\"{ span: 21 }\">\r\n            <h3 class=\"panel_heading\">Select Schedule For Drug Delivery</h3>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n \r\n   <nz-collapse  nzAccordion [nzExpandIconPosition] [nzBordered]=\"false\" [nzGhost]=\"true\" [nzExpandIconPosition]=\"'right'\">\r\n     \r\n    <nz-collapse-panel class=\"card app_shadow_b mt-3\" [nzHeader]=\"SelectDateOne\" [nzActive]=\"(i === 0) ? true : false\" [nzShowArrow]=\"true\" *ngFor=\"let item of itemsAddedCart;let i = index\">\r\n       <ng-container>\r\n           <div class=\"calendar_container\">\r\n            <app-calendar [datePicker]=\"true\" (dateChanged)=\"dateChanged($event,item,i)\" ></app-calendar>\r\n            <div class=\"mt-3\">\r\n                <h3 class=\"Pick_time\">Pick a time</h3>\r\n\r\n\r\n                <div nz-row [nzGutter]=\"[16, 8]\"  class=\"mb-2\">\r\n\r\n                    <ng-container *ngIf=\"finalSlots\">\r\n                    \r\n                    <div nz-col class=\"gutter-row\" [nzSpan]=\"8\"  *ngFor=\"let slot of finalSlots.phlebo_slots\" (click)=\"selectSlot(item,slot.slot)\">\r\n                      <div class=\"grid-config-box active-time\" [ngClass]=\"{'active-time': slot.slot ===  item?.selectedSlotDateTime.slotStartTime }\">{{slot.slot}}</div>\r\n                    </div>\r\n                </ng-container>\r\n                  </div>\r\n\r\n              \r\n            </div>\r\n           </div>\r\n       </ng-container>\r\n       <div>\r\n           <h3 class=\"dropdown_footer\">\r\n              <span>\r\n                  <img src=\"assets/img/ConfirmTiming//hospital (1).svg\" alt=\"\">\r\n              </span>&nbsp; Home Collection will be done by {{item.partnerDetails.partnerName}} </h3>\r\n       </div>\r\n    </nz-collapse-panel>\r\n\r\n\r\n\r\n   </nz-collapse>\r\n   <br><br><br>\r\n </div>\r\n <!-- container -->\r\n\r\n  <!-- fixed btn -->\r\n<div class=\"fixed_btn_row p-2\">\r\n    <div nz-row class=\"fixed_btn themes_bg\" (click)=\"finalOrder()\">\r\n        <div nz-col [nzXs]=\"{ span: 3 }\">\r\n            <span class=\"btn_ico center_xy\">\r\n                <img src=\"assets/img/ConfirmTiming/Group 1829.svg\" alt=\"\">\r\n            </span>\r\n        </div>\r\n        <div nz-col [nzXs]=\"{ span: 21 }\" class=\"center_xy\">\r\n            <span class=\"btn_text themes_text\">PROCEED TO PAY</span>\r\n        </div>\r\n    </div>\r\n</div>\r\n</nz-spin>\r\n<!-- end (fixed btn)-->\r\n</div>\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Patient } from '../../../../interface/patient';\r\nimport { BaseHttpService } from '../../../../services/base-http.service';\r\nimport { DoctorService } from '../../../../services/doctor-service/doctor.service';\r\nimport { customerAddressDetails } from '../../../../interface/orderDetails'\r\nimport { MessageService } from '../../../../services/message.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-new-address',\r\n  templateUrl: './new-address.component.html',\r\n  styleUrls: ['./new-address.component.less']\r\n})\r\nexport class NewAddressComponent implements OnInit {\r\n  radioValue = 'A';\r\n  addressForm: FormGroup;\r\n  selectedPatient:Patient;\r\n  initData:addressType[];\r\n  stateData:stateData[] ;\r\n  cityData:cityData[] ;\r\n  localityData:any[]= []\r\n  customerId:number;\r\n  isSpining:boolean;\r\n  constructor( private fb: FormBuilder,private http:BaseHttpService,private doctorService:DoctorService,\r\n    private cdf: ChangeDetectorRef,private router:Router,private activedRouter:ActivatedRoute,private msg:MessageService\r\n\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.getAddressInitData();\r\n    \r\n     this.activedRouter.params.subscribe(params => {\r\n      this.customerId = +params['id']; //\r\n\r\n   });\r\n\r\n    this.addressForm = this.fb.group({\r\n     \r\n      patient_address_line_1: ['',[Validators.required]],\r\n      patient_address_line_2: ['',[Validators.required]],\r\n      landmark: [''],\r\n      patient_state: ['', [Validators.required]],\r\n      patient_city: ['', [Validators.required]],\r\n      patient_pincode: [null, [Validators.required,Validators.maxLength(6),Validators.minLength(6),Validators.pattern('^[0-9]*$')]],\r\n      locality:[''],\r\n      addressType:['',[Validators.required]]\r\n\r\n\r\n    });\r\n\r\n  }\r\n  selectedValue:string= '';\r\n\r\n\r\n\r\n  requiredChange(required: boolean): void {\r\n    if (!required) {\r\n      this.addressForm.get('locality')!.clearValidators();\r\n      this.addressForm.get('locality')!.markAsPristine();\r\n    } else {\r\n      this.addressForm.get('locality')!.setValidators(Validators.required);\r\n      this.addressForm.get('locality')!.markAsDirty();\r\n    }\r\n    this.addressForm.get('locality')!.updateValueAndValidity();\r\n  }\r\n\r\n\r\n\r\n  getAddressInitData() {\r\n\r\n   this.http.makePartnerRequest<stateData[]>({method:'GET',url:'/v1/store/findAllState'}).subscribe(res => {\r\n    \r\n    if(res && res.data) {\r\n          this.stateData = res.data;\r\n        }\r\n\r\n        this.cdf.detectChanges()\r\n    })\r\n\r\n\r\n\r\n    this.http.makePartnerRequest<any>({method:'GET',url:'/v1/customer/getPatientPortalInitData'}).subscribe(res => {\r\n      \r\n        if(res && res.data) {\r\n          this.initData = res.data.addressType;\r\n        }\r\n    })\r\n\r\n\r\n  }\r\n\r\n\r\n  getCityByStateId(item:stateData) {\r\n\r\n      this.cityData = [];\r\n      this.http.makePartnerRequest<cityData[]>({method:'POST',url:'/v1/store/findAllCityByStateId',data:{\"stateId\":item.stateId}}).subscribe(res => {\r\n       if(res && res.data) {\r\n        this.cityData = res.data;\r\n        this.cdf.detectChanges()\r\n      }\r\n  })\r\n\r\n  }\r\n\r\n\r\n  getLocalityByCityId(item:cityData) {\r\n\r\n      if(item.cityId === 1) {\r\n        this.requiredChange(true);\r\n      }  else {\r\n        this.requiredChange(false);\r\n\r\n      }\r\n\r\n\r\n    console.log(item);\r\n    \r\n      this.localityData = [];\r\n      this.http.makePartnerRequest<cityData[]>({method:'POST',url:'/v1/store/findAllLocalityByCityId',data:{\"cityId\":item.cityId}}).subscribe(res => {\r\n       if(res && res.data) {\r\n        this.localityData = res.data;\r\n        if(res.data.length === 0) {\r\n          this.requiredChange(false);\r\n\r\n        }\r\n        this.cdf.detectChanges()\r\n      }\r\n  })\r\n\r\n  }\r\n\r\n\r\n  submitForm(): void {\r\n    for (const i in this.addressForm.controls) {\r\n      this.addressForm.controls[i].markAsDirty();\r\n      this.addressForm.controls[i].updateValueAndValidity();\r\n    }\r\n\r\n\r\n    if(this.addressForm.valid) {\r\n      console.log(this.addressForm.value);\r\n      this.isSpining = true;\r\n\r\n      const dataToPost = {\r\n        customerId:this.customerId,\r\n        patient_address_line_1:this.addressForm.value.patient_address_line_1,\r\n        patient_address_line_2:this.addressForm.value.patient_address_line_2,\r\n        patient_city:this.addressForm.value.patient_city.cityName,\r\n        patient_state:this.addressForm.value.patient_state.stateName,\r\n        patient_pincode:this.addressForm.value.patient_pincode.toString(),\r\n        customerAddressTypeId:this.addressForm.value.addressType.customerAddressTypeId\r\n      };\r\n      console.log(dataToPost);\r\n\r\n      this.http.makePartnerRequest({method:'POST',url:'/v1/customer/createPatientAddress',data:dataToPost}).subscribe(res => {\r\n        this.isSpining = false;\r\n\r\n        if(res && res.data) {\r\n          \r\n          this.router.navigate(['../../address'], { \r\n            relativeTo: this.activedRouter,\r\n            replaceUrl: true,\r\n              \r\n          }); \r\n       } else {\r\n\r\n        this.msg.createMessage('error','Error while update data please try again');\r\n        return false;\r\n       }\r\n    })\r\n\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\nexport interface stateData {\r\n\r\n  stateId:number;\r\n  stateName:string\r\n\r\n}\r\n\r\n\r\nexport interface cityData {\r\n\r\n  cityId:number;\r\n  cityName:string\r\n\r\n}\r\nexport interface addressType { \r\n\r\nCustomerAddressTypeName:string,customerAddressTypeId:number,\r\n}\r\n\r\n","<div class=\"Dy-Component-Container_2\">\r\n  <!-- TODO put header data-->\r\n  <app-header \r\n[headerTitle]=\"'Address'\" \r\n[isFixed]=\"false\">\r\n</app-header>\r\n<!-- TODO put header data-->\r\n <!-- container -->\r\n\r\n <nz-spin  [nzSpinning]=\"isSpining\" >\r\n\r\n <div class=\"p-3\">\r\n\r\n<!-- form Card --> \r\n<div class=\"form_Card app_shadow_b\">\r\n<h3 class=\"form_Card_heading\">Provide accurate address for better services </h3>\r\n\r\n\r\n<form  class=\"full-width mar_10\" nz-form [formGroup]=\"addressForm\" >\r\n\r\n    <nz-form-item class=\"bottom-5\">\r\n        <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" class=\"form-label\" nzRequired>House / Flat / Block No.</nz-form-label>\r\n     \r\n        <nz-form-control nzErrorTip=\"Please input your address!\">\r\n          <nz-input-group >\r\n            <input type=\"text\" formControlName=\"patient_address_line_1\" nz-input name=\"house_number\" placeholder=\"House / Flat / Block No\" />\r\n          </nz-input-group>\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n    \r\n <nz-form-item class=\"bottom-5\">\r\n    <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" class=\"form-label\" nzRequired>Address Line 2 </nz-form-label>\r\n \r\n    <nz-form-control nzErrorTip=\"Please input your address!\">\r\n      <nz-input-group >\r\n        <input type=\"text\" nz-input  formControlName=\"patient_address_line_2\" name=\"location\" placeholder=\"Location\"/>\r\n      </nz-input-group>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n\r\n  <nz-form-item class=\"bottom-5\">\r\n    <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" class=\"form-label\">Landmark</nz-form-label>\r\n \r\n    <nz-form-control >\r\n      <nz-input-group >\r\n        <input type=\"text\" nz-input  formControlName=\"landmark\"  name=\"landmark\" placeholder=\"Nearest Landmark\" />\r\n      </nz-input-group>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n\r\n\r\n  <nz-form-item class=\"bottom-5\">\r\n    <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" class=\"form-label\" nzRequired>State</nz-form-label>\r\n  \r\n    <nz-form-control nzErrorTip=\"Please input your state Name!\">\r\n       <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Select a State\" formControlName=\"patient_state\"  autocomplete=\"false\" (ngModelChange)=\"getCityByStateId($event)\" >\r\n          <nz-option  *ngFor=\"let item of stateData\" [nzLabel]=\"item.stateName\" [nzValue]=\"item\"></nz-option>\r\n        </nz-select>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n\r\n  <nz-form-item class=\"bottom-5\">\r\n    <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" class=\"form-label\" nzRequired>City</nz-form-label>\r\n \r\n    <nz-form-control nzErrorTip=\"Please input your City Name!\">\r\n       <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Select a City\" formControlName=\"patient_city\"  autocomplete=\"false\" (ngModelChange)=\"getLocalityByCityId($event)\">\r\n          <nz-option *ngFor=\"let item of cityData\"  [nzLabel]=\"item.cityName\" [nzValue]=\"item\"></nz-option>\r\n        </nz-select>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n  <nz-form-item class=\"bottom-5\">\r\n    <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" class=\"form-label\" nzRequired>Pincode</nz-form-label>\r\n \r\n    <nz-form-control nzErrorTip=\"Please input your pincode!\">\r\n      <nz-input-group >\r\n        <input type=\"number\" nz-input  maxlength=\"6\" minlength=\"6\" formControlName=\"patient_pincode\" inputmode=\"numeric\" name=\"pincode\" placeholder=\"Pin Code\" autocomplete=\"false\" />\r\n      </nz-input-group>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n\r\n  <nz-form-item  class=\"bottom-5\">\r\n    <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzFor=\"locality\" [nzRequired]=\"addressForm.get('required')?.value\">Locality</nz-form-label>\r\n    <nz-form-control  nzErrorTip=\"Please input your locality\">\r\n      <input type=\"text\" nz-input formControlName=\"locality\" placeholder=\"Please input your locality\" />\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n\r\n  <nz-form-item class=\"bottom-5\">\r\n    <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" class=\"form-label\" nzRequired>Address Type</nz-form-label>\r\n        <nz-form-control  nzErrorTip=\"Please input your Address type\">\r\n\r\n  <nz-radio-group  formControlName=\"addressType\" nzButtonStyle=\"solid\">\r\n   \r\n    <label nz-radio-button *ngFor=\"let item of initData\" [nzValue]=\"item\">{{item.CustomerAddressTypeName}}</label>\r\n\r\n  </nz-radio-group>\r\n  </nz-form-control>\r\n\r\n  </nz-form-item>\r\n  \r\n</form>\r\n\r\n\r\n\r\n\r\n</div>\r\n<!-- end (form Card) -->\r\n </div>\r\n <!-- container -->\r\n<br><br>\r\n <!-- fixed btn -->\r\n<div class=\"fixed_btn_row p-2\">\r\n    <div nz-row class=\"fixed_btn themes_bg\"  (click)=\"submitForm()\">\r\n        <div nz-col [nzXs]=\"{ span: 3 }\">\r\n            <span class=\"btn_ico center_xy\">\r\n                <img src=\"assets/img/address/01-home.svg\" alt=\"\">\r\n            </span>\r\n        </div>\r\n        <div nz-col [nzXs]=\"{ span: 21 }\" class=\"center_xy\">\r\n            <span class=\"btn_text themes_text\">CONFIRM ADDRESS</span>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- end (fixed btn)-->\r\n\r\n</nz-spin>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { orderDetails, orderItems } from '../../../../interface/orderDetails';\r\nimport { Patient } from '../../../../interface/patient';\r\nimport { DoctorService } from '../../../../services/doctor-service/doctor.service';\r\nimport { CustomIconsService } from '../../../../shared/UI_service/custom-icons.service';\r\n\r\n@Component({\r\n  selector: 'app-order-summary',\r\n  templateUrl: './order-summary.component.html',\r\n  styleUrls: ['./order-summary.component.less']\r\n})\r\nexport class OrderSummaryComponent implements OnInit {\r\n  medications_data: any[] = [\r\n    {\r\n      name: 'D3 HD 60K Tablet',\r\n      quantity: '3 strips x Rs 350 / strip',\r\n      price: 1050\r\n    },\r\n    {\r\n      name: 'Mintop 10 Hair Restore Formula',\r\n      quantity: '1 pack x Rs 1350 / pack',\r\n      price: 1350\r\n    },\r\n    {\r\n      name: 'Lacto Calamine Oil Balance Lotion',\r\n      quantity: '1 bottle x Rs 350 / bottle',\r\n      price: 350\r\n    },\r\n    {\r\n      name: 'Zincovit Tablet',\r\n      quantity: '1 strip x Rs 350 / strip',\r\n      price: 350\r\n    },\r\n    {\r\n      name: 'Telma 80 CT',\r\n      quantity: '1 strip x Rs 350 / strip',\r\n      price: 350\r\n    },\r\n  ]\r\n  diagnosticsTest: any[] = [\r\n    {\r\n      name: '17 OH Progesterone',\r\n      quantity: 'Home Collection by Dr Lal Path Labs',\r\n      price: 350\r\n    },\r\n    {\r\n      name: 'VENOUS COLOUR DOPPLER BOTH LEG',\r\n      quantity: 'Center Visit at Shaksham Imaging and Diagnostics ',\r\n      price: 3150\r\n    },\r\n  ]\r\n\r\n  selectedPatient:Patient;\r\n  itemsAddedCart:orderDetails[] = [];\r\n  finalTotalAmount:number = 0;\r\n  homeCollectionCharges:number = 100;\r\n  platFormFee:number = 0;\r\n  isActiveList:boolean = true;\r\n  constructor(private _IconsService: CustomIconsService,private doctorService:DoctorService) { }\r\n  ngOnInit(): void {\r\n    \r\n    this.selectedPatient = JSON.parse(localStorage.getItem(`${this.doctorService.username}-selectedPatient`));\r\n    this.itemsAddedCart =  JSON.parse(localStorage.getItem('cartData-'+this.selectedPatient.patient_id)) || []\r\n      \r\n    this.itemsAddedCart.forEach(element => {\r\n      this.count(element.orders);\r\n    });\r\n    \r\n  }\r\n\r\n  count(array: orderItems[]) {\r\n\r\n    this.finalTotalAmount = this.finalTotalAmount  + array.reduce((r, a) => {\r\n      return r + a.amountRecieveable;\r\n    }, 0);\r\n\r\n    this.calculateFee()\r\n  }\r\n  public PaymentPage: number;\r\n  paymentMetod:string;\r\n  \r\n\r\n  calculateFee(){\r\n\r\n    var platFormPrice = Number(this.finalTotalAmount + this.homeCollectionCharges + 14.75);\r\n    var platFormPriceFee = (platFormPrice * 2) / 100;\r\n    var tax = platFormPriceFee * 0.18;\r\n    this.platFormFee =\r\n      Number(platFormPriceFee.toFixed(2)) + Number(tax.toFixed(2));\r\n  }\r\n\r\n  next() {\r\n    this.isActiveList = false;\r\n    this.PaymentPage = 1;\r\n  }\r\n}\r\n","<div class=\"Dy-Component-Container_2\">\r\n    <!-- TODO put header data-->\r\n  <app-header \r\n  [headerTitle]=\"(PaymentPage)?'Select Payment Method':'Order Summary'\" \r\n  [isFixed]=\"false\">\r\n  </app-header>\r\n  <!-- TODO put header data-->\r\n    \r\n<!-- fixed btn top -->\r\n <div class=\"fixed_btn_container p-2\">\r\n    <!-- switcher -->\r\n   <div class=\"switcher mt-2 app_shadow_b\">\r\n       <div nz-row>\r\n           <div nz-col [nzXs]=\"{ span: 12 }\">\r\n               <div class=\"switcher_price center_xy\">\r\n                   <span>\r\n                       <h4>Sub- Total</h4>\r\n                       <h4>INR {{finalTotalAmount + homeCollectionCharges + platFormFee}}</h4>\r\n                   </span>\r\n               </div>\r\n           </div>\r\n           <div nz-col [nzXs]=\"{ span: 12 }\">\r\n               <div class=\"NEXT center_xy\" (click)=\"next()\">\r\n                   NEXT\r\n               </div>\r\n           </div>\r\n       </div>\r\n   </div>\r\n   <!-- end (switcher) -->\r\n</div>\r\n<!-- end (fixed btn top) -->\r\n\r\n <!-- container -->\r\n <div class=\"p-2 mt-5\">\r\n   <ng-template #SelectDateOne>\r\n       <div nz-row>\r\n           <div nz-col [nzXs]=\"{ span: 3 }\">\r\n               <img src=\"assets/img/ConfirmTiming/medicines.svg\" alt=\"\">  \r\n           </div>\r\n           <div nz-col [nzXs]=\"{ span: 21 }\">\r\n               <h3 class=\"panel_heading\">Select Date For Home Collection</h3>\r\n           </div>\r\n       </div>\r\n   </ng-template>\r\n   <ng-template #Medications>\r\n    <div nz-row>\r\n        <div nz-col [nzXs]=\"{ span: 3 }\" class=\"center_xy\">\r\n            <img src=\"assets/img/OrderSummary/medicine.svg\" alt=\"\">  \r\n        </div>\r\n        <div nz-col [nzXs]=\"{ span: 14 }\">\r\n            <span>\r\n                <h3 class=\"panel_heading\">Medications</h3>\r\n                <h4 class=\"panel_taxes\">Inclusive of services + govt. taxes</h4>\r\n            </span>\r\n        </div>\r\n        <div nz-col [nzXs]=\"{ span: 7 }\" class=\"center_xy\">\r\n            <h2 class=\"panel_price\">INR 3320.00</h2>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<ng-template #DiagnosticsTest>\r\n    <div nz-row>\r\n        <div nz-col [nzXs]=\"{ span: 3 }\" class=\"center_xy\">\r\n            <img src=\"assets/img/OrderSummary/medicine.svg\" alt=\"\">  \r\n        </div>\r\n        <div nz-col [nzXs]=\"{ span: 14 }\">\r\n            <span>\r\n                <h3 class=\"panel_heading\">Diagnostics Test</h3>\r\n                <h4 class=\"panel_taxes\">Inclusive of services + govt. taxes</h4>\r\n            </span>\r\n        </div>\r\n        <div nz-col [nzXs]=\"{ span: 7 }\" class=\"center_xy\">\r\n            <h2 class=\"panel_price\">INR {{finalTotalAmount + homeCollectionCharges + platFormFee}}</h2>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<nz-collapse nzAccordion [nzBordered]=\"false\" [nzGhost]=\"true\">\r\n    <!-- <nz-collapse-panel class=\"card app_shadow_b mt-3\" [nzHeader]=\"Medications\" [nzActive]=\"false\" [nzShowArrow]=\"false\">\r\n        <div class=\"hr\"></div>\r\n      <ng-container *ngFor=\"let item of medications_data\">\r\n        <div nz-row class=\"mt-2\">\r\n            <div nz-col [nzXs]=\"{ span: 17 }\">\r\n                <span>\r\n                    <h2 class=\"name\">{{item.name}}</h2>\r\n                    <h3 class=\"quantity\">{{item.name}}</h3>\r\n                </span>\r\n            </div>\r\n            <div nz-col [nzXs]=\"{ span: 7 }\">\r\n                <h3 class=\"price\">INR {{item.price}}.00</h3>\r\n            </div>\r\n        </div>\r\n      </ng-container> \r\n      <div class=\"hr mt-2\"></div>\r\n      <div class=\"Charges_Taxes\">\r\n        <div nz-row class=\"mt-2\">\r\n            <div nz-col [nzXs]=\"{ span: 17 }\">\r\n                <span>\r\n                  <h3 class=\"Sub_Total\">Sub Total</h3>  \r\n                </span>\r\n            </div>\r\n            <div nz-col [nzXs]=\"{ span: 7 }\">\r\n                <h3 class=\"Sub_Total_price\">INR 3100.00</h3>\r\n            </div>\r\n        </div>\r\n        <div nz-row class=\"mt-2\">\r\n            <div nz-col [nzXs]=\"{ span: 17 }\">\r\n                <span>\r\n                  <h3 class=\"Sub_Total\">Delivery Charges</h3> \r\n                  <h4 class=\"Sub_sm_text\">Free Delivery above Rs 1000</h4> \r\n                </span>\r\n            </div>\r\n            <div nz-col [nzXs]=\"{ span: 7 }\">\r\n                <h3 class=\"Sub_Total_price\">INR 3100.00</h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div nz-row class=\"mt-2\">\r\n            <div nz-col [nzXs]=\"{ span: 17 }\">\r\n                <span>\r\n                  <h3 class=\"Sub_Total\">Taxes & Platform Fee</h3> \r\n                  <h4 class=\"Sub_sm_text\">Including 2% processing fee+ GST </h4> \r\n                </span>\r\n            </div>\r\n            <div nz-col [nzXs]=\"{ span: 7 }\">\r\n                <h3 class=\"Sub_Total_price\">INR 220.10</h3>\r\n            </div>\r\n        </div>\r\n        <div class=\"hr mt-2\"></div>\r\n        <div nz-row class=\"mt-2\">\r\n            <div nz-col [nzXs]=\"{ span: 17 }\">\r\n                <span>\r\n                  <h3 class=\"Sub_Total\">TOTAL</h3>\r\n                </span>\r\n            </div>\r\n            <div nz-col [nzXs]=\"{ span: 7 }\">\r\n                <h3 class=\"Sub_Total_price\">INR 3320.00</h3>\r\n            </div>\r\n        </div>\r\n\r\n         <div nz-row class=\"mt-2\">\r\n            <div nz-col [nzXs]=\"{ span: 3 }\" class=\"center_xy\">\r\n                <img src=\"assets/img/OrderSummary/Flat.svg\" alt=\"\">\r\n            </div>\r\n            <div nz-col [nzXs]=\"{ span: 21 }\">\r\n                <h3 class=\"icon_text\">Goods will be delivered by Bombay Medico LLP</h3>\r\n            </div>\r\n        </div>\r\n        <div nz-row class=\"mt-2\">\r\n            <div nz-col [nzXs]=\"{ span: 3 }\" class=\"center_xy\">\r\n                <img src=\"assets/img/OrderSummary/receipt.svg\" alt=\"\">\r\n            </div>\r\n            <div nz-col [nzXs]=\"{ span: 21 }\">\r\n                <h3 class=\"icon_text\">Final invoice will be provided by Bombay medico at time of delivery</h3>\r\n            </div>\r\n        </div>\r\n      </div>\r\n      \r\n    </nz-collapse-panel> -->\r\n\r\n    <nz-collapse-panel  class=\"card app_shadow_b mt-3\" [nzHeader]=\"DiagnosticsTest\"   [nzActive]=\"isActiveList\" [nzShowArrow]=\"false\">\r\n        <div class=\"hr\"></div>\r\n\r\n      <ng-container *ngFor=\"let item of itemsAddedCart\">\r\n        <div nz-row class=\"mt-2\" *ngFor=\"let lab of item.orders\">\r\n            <div nz-col [nzXs]=\"{ span: 17 }\">\r\n                <span> \r\n                    <h2 class=\"name\">{{lab.labName}}</h2>\r\n                    <h3 class=\"quantity\">{{lab.labName}}</h3>\r\n                </span>\r\n            </div>\r\n            <div nz-col [nzXs]=\"{ span: 7 }\">\r\n                <h3 class=\"price\">INR {{lab.amountRecieveable}}</h3>\r\n            </div>\r\n        </div>\r\n      </ng-container> \r\n      <div class=\"hr mt-2\"></div>\r\n      <div class=\"Charges_Taxes\">\r\n        <div nz-row class=\"mt-2\">\r\n            <div nz-col [nzXs]=\"{ span: 17 }\">\r\n                <span>\r\n                  <h3 class=\"Sub_Total\">Sub Total</h3>  \r\n                </span>\r\n            </div>\r\n            <div nz-col [nzXs]=\"{ span: 7 }\">\r\n                <h3 class=\"Sub_Total_price\">INR {{finalTotalAmount}}</h3>\r\n            </div>\r\n        </div>\r\n        <div nz-row class=\"mt-2\">\r\n            <div nz-col [nzXs]=\"{ span: 17 }\">\r\n                <span>\r\n                  <h3 class=\"Sub_Total\">Home Collection Charges</h3> \r\n                  <h4 class=\"Sub_sm_text\">Free Delivery above Rs 500</h4> \r\n                </span>\r\n            </div>\r\n            <div nz-col [nzXs]=\"{ span: 7 }\">\r\n                <h3 class=\"Sub_Total_price\">INR {{homeCollectionCharges}}</h3>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- <div nz-row class=\"mt-2\">\r\n            <div nz-col [nzXs]=\"{ span: 17 }\">\r\n                <span>\r\n                  <h3 class=\"Sub_Total\">Two-way pick up service</h3> \r\n                  <h4 class=\"Sub_sm_text\">To and from from imaging centre</h4> \r\n                </span>\r\n            </div>\r\n            <div nz-col [nzXs]=\"{ span: 7 }\">\r\n                <h3 class=\"Sub_Total_price\">INR 300.00</h3>\r\n            </div>\r\n        </div> -->\r\n\r\n        <div nz-row class=\"mt-2\">\r\n            <div nz-col [nzXs]=\"{ span: 17 }\">\r\n                <span>\r\n                  <h3 class=\"Sub_Total\">Taxes & Platform Fee</h3> \r\n                  <h4 class=\"Sub_sm_text\">Including 2% processing fee+ GST </h4> \r\n                </span>\r\n            </div>\r\n            <div nz-col [nzXs]=\"{ span: 7 }\">\r\n                <h3 class=\"Sub_Total_price\">INR {{platFormFee}}</h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"hr mt-2\"></div>\r\n        <!-- all TOTAL -->\r\n        <div nz-row class=\"mt-2\">\r\n            <div nz-col [nzXs]=\"{ span: 17 }\">\r\n                <span>\r\n                  <h3 class=\"Sub_Total\">TOTAL</h3>\r\n                </span>\r\n            </div>\r\n            <div nz-col [nzXs]=\"{ span: 7 }\">\r\n                <h3 class=\"Sub_Total_price\">INR {{finalTotalAmount + homeCollectionCharges + platFormFee}}</h3>\r\n            </div>\r\n        </div>\r\n\r\n         <!-- icon text 1-->\r\n         <div nz-row class=\"mt-3\">\r\n            <div nz-col [nzXs]=\"{ span: 3 }\" class=\"center_xy\">\r\n                <img src=\"assets/icon/colorIcon/extra/hospital (1).svg\" alt=\"\">\r\n            </div>\r\n            <div nz-col [nzXs]=\"{ span: 21 }\">\r\n                <h3 class=\"icon_text\">Home Collection will be done by Dr Lal path labs</h3>\r\n            </div>\r\n        </div>\r\n <!-- icon text 2 -->\r\n        <div nz-row class=\"mt-2\">\r\n            <div nz-col [nzXs]=\"{ span: 3 }\" class=\"center_xy\">\r\n                <img src=\"assets/img/OrderSummary/Group 1916.svg\" alt=\"\">\r\n            </div>\r\n            <div nz-col [nzXs]=\"{ span: 21 }\">\r\n                <h3 class=\"icon_text\">Visit Saksham imaging & diagnostics for radiology test</h3>\r\n            </div>\r\n        </div>\r\n        <!-- icon text 3 -->\r\n        <div nz-row class=\"mt-2\">\r\n            <div nz-col [nzXs]=\"{ span: 3 }\" class=\"center_xy\">\r\n                <img src=\"assets/img/OrderSummary/Group 1916.svg\" alt=\"\">\r\n            </div>\r\n            <div nz-col [nzXs]=\"{ span: 21 }\">\r\n                <h3 class=\"icon_text\"> Any contrast and anesthesist charges will be additional and to be paid at the diagnostic center</h3>\r\n            </div>\r\n        </div>\r\n       \r\n        <!-- check box -->\r\n        <div nz-row class=\"mt-2\">\r\n            <div nz-col [nzXs]=\"{ span: 3 }\" class=\"\">\r\n                <label class=\"check_container\">\r\n                    <input type=\"checkbox\" name=\"radio\">\r\n                    <span class=\"checkmark\"></span>\r\n                  </label>\r\n            </div>\r\n            <div nz-col [nzXs]=\"{ span: 21 }\" class=\"center_f_y\">\r\n                <h3 class=\"icon_text\">Avail safe and sanitised pick up and drop from your doorstep to lab centre at just Rs 300</h3>\r\n            </div>\r\n        </div>\r\n      </div>\r\n      \r\n    </nz-collapse-panel>\r\n</nz-collapse>\r\n\r\n<!-- payment_card -->\r\n<ng-template [ngIf]=\"PaymentPage\">\r\n    <div nz-row class=\"Method_payment_card center_xy app_shadow_b mt-3\">\r\n        <div nz-col [nzXs]=\"{ span: 24 }\">\r\n          <div nz-row class=\"mt-2\">\r\n              <div nz-col [nzXs]=\"{ span: 4 }\" class=\"center_xy\">\r\n                  <img src=\"assets/img/pay/online-payment.svg\" alt=\"\">\r\n              </div>\r\n              <div nz-col [nzXs]=\"{ span: 20 }\" class=\"center_f_y\">\r\n                  <h3 class=\"pay_heading\">Select Method of payment </h3>\r\n              </div>\r\n          </div>\r\n      \r\n\r\n\r\n          <nz-radio-group [(ngModel)]=\"paymentMetod\" style=\"margin-left: 7%;margin-top: 3%;\">\r\n\r\n            <label nz-radio nzValue=\"COD\" class=\"mb-2 pay_Method\">\r\n               Pay at home / centre visit\r\n        </label>\r\n        <label nz-radio nzValue=\"Online\" class=\"mb-2 pay_Method\">\r\n            Pay Online\r\n            <br>\r\n            <small style=\"font-family: Poppins-Regular;margin-left: 5%;\">Get additional flat 10% cash back </small>\r\n\r\n     </label>\r\n            \r\n          </nz-radio-group>\r\n\r\n\r\n      \r\n      \r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<!-- end (payment_card) -->\r\n </div>\r\n <!-- container -->\r\n\r\n\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-payment-method',\r\n  templateUrl: './payment-method.component.html',\r\n  styleUrls: ['./payment-method.component.less']\r\n})\r\nexport class PaymentMethodComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"Dy-Component-Container_2\">\r\n    <div class=\"dy_component_header\" nz-row>\r\n        <div nz-col [nzXs]=\"{ span: 24 }\" class=\"center_xy\">\r\n           <div class=\"p-2\" style=\"width: 100%;\">\r\n            <h2 class=\"component_heading\">\r\n                <span class=\"icon\">\r\n                    <i nz-icon nzType=\"left\" nzTheme=\"outline\" style=\"width: 18px;\"></i>\r\n                </span>\r\n                Select Payment Method\r\n            </h2>\r\n           </div>\r\n        </div>\r\n    </div>\r\n <!-- container -->\r\n <div class=\"p-2\">\r\n   <ng-template #SelectDateOne>\r\n       <div nz-row>\r\n           <div nz-col [nzXs]=\"{ span: 3 }\">\r\n               <img src=\"assets/img/ConfirmTiming/medicines.svg\" alt=\"\">  \r\n           </div>\r\n           <div nz-col [nzXs]=\"{ span: 21 }\">\r\n               <h3 class=\"panel_heading\">Select Date For Home Collection</h3>\r\n           </div>\r\n       </div>\r\n   </ng-template>\r\n   <ng-template #Medications>\r\n    <div nz-row>\r\n        <div nz-col [nzXs]=\"{ span: 3 }\" class=\"center_xy\">\r\n            <img src=\"assets/img/OrderSummary/medicine.svg\" alt=\"\">  \r\n        </div>\r\n        <div nz-col [nzXs]=\"{ span: 14 }\">\r\n            <span>\r\n                <h3 class=\"panel_heading\">Medications</h3>\r\n                <h4 class=\"panel_taxes\">Inclusive of services + govt. taxes</h4>\r\n            </span>\r\n        </div>\r\n        <div nz-col [nzXs]=\"{ span: 7 }\" class=\"center_xy\">\r\n            <h2 class=\"panel_price\">INR 3320.00</h2>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<ng-template #DiagnosticsTest>\r\n    <div nz-row>\r\n        <div nz-col [nzXs]=\"{ span: 3 }\" class=\"center_xy\">\r\n            <img src=\"assets/img/OrderSummary/medicine.svg\" alt=\"\">  \r\n        </div>\r\n        <div nz-col [nzXs]=\"{ span: 14 }\">\r\n            <span>\r\n                <h3 class=\"panel_heading\">Diagnostics Test</h3>\r\n                <h4 class=\"panel_taxes\">Inclusive of services + govt. taxes</h4>\r\n            </span>\r\n        </div>\r\n        <div nz-col [nzXs]=\"{ span: 7 }\" class=\"center_xy\">\r\n            <h2 class=\"panel_price\">INR 4185.00</h2>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<nz-collapse class=\"card app_shadow_b mt-3\" [nzBordered]=\"false\" [nzGhost]=\"true\">\r\n    <nz-collapse-panel  [nzHeader]=\"Medications\" [nzActive]=\"false\" [nzShowArrow]=\"false\">\r\n    </nz-collapse-panel>\r\n</nz-collapse>\r\n\r\n<nz-collapse class=\"card app_shadow_b mt-3\" [nzBordered]=\"false\" [nzGhost]=\"true\">\r\n    <nz-collapse-panel  [nzHeader]=\"DiagnosticsTest\" [nzActive]=\"false\" [nzShowArrow]=\"false\">\r\n    </nz-collapse-panel>\r\n</nz-collapse>\r\n\r\n<div nz-row class=\"Method_payment_card center_xy app_shadow_b mt-3\">\r\n  <div nz-col [nzXs]=\"{ span: 24 }\">\r\n    <div nz-row class=\"mt-2\">\r\n        <div nz-col [nzXs]=\"{ span: 4 }\" class=\"center_xy\">\r\n            <img src=\"assets/img/pay/online-payment.svg\" alt=\"\">\r\n        </div>\r\n        <div nz-col [nzXs]=\"{ span: 20 }\" class=\"center_f_y\">\r\n            <h3 class=\"pay_heading\">Select Method of payment </h3>\r\n        </div>\r\n    </div>\r\n\r\n    <div nz-row class=\"mt-3\">\r\n        <div nz-col [nzXs]=\"{ span: 4 }\" class=\"center_xy\">\r\n            <label class=\"Radio_container\">\r\n                <input type=\"radio\" name=\"radio\">\r\n                <span class=\"checkmark\"></span>\r\n              </label>\r\n        </div>\r\n        <div nz-col [nzXs]=\"{ span: 20 }\" class=\"center_f_y\">\r\n            <h3 class=\"pay_Method\">Pay at home / centre visit</h3>\r\n        </div>\r\n    </div>\r\n\r\n    <div nz-row class=\"mt-3\">\r\n        <div nz-col [nzXs]=\"{ span: 4 }\" class=\"center_xy\">\r\n            <label class=\"Radio_container\">\r\n                <input type=\"radio\" checked=\"checked\" name=\"radio\">\r\n                <span class=\"checkmark\"></span>\r\n              </label>  \r\n        </div>\r\n        <div nz-col [nzXs]=\"{ span: 20 }\" class=\"center_f_y\">\r\n            <span>\r\n                <h3 class=\"pay_Method\">Select Method of payment </h3>\r\n                <h5>Get additional flat 10% cash back </h5>\r\n            </span>\r\n        </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n\r\n </div>\r\n <!-- container -->\r\n\r\n \r\n <!-- fixed btn -->\r\n <div class=\"fixed_btn_container p-2\">\r\n     <!-- switcher -->\r\n    <div class=\"switcher mt-2 app_shadow_b\">\r\n        <div nz-row>\r\n            <div nz-col [nzXs]=\"{ span: 12 }\">\r\n                <div class=\"switcher_price center_xy\">\r\n                    <span>\r\n                        <h4>TO BE PAID</h4>\r\n                        <h4>INR 6600</h4>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div nz-col [nzXs]=\"{ span: 12 }\">\r\n                <div class=\"NEXT center_xy\" [routerLink]=\"[ '../Payment_Method']\">\r\n                    NEXT\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- end (switcher) -->\r\n </div>\r\n <!-- fixed btn -->\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Doctor } from '../../../interface/doctor';\r\nimport { LandingPageData } from '../../../interface/landingData';\r\nimport { Patient } from '../../../interface/patient';\r\nimport { orderDetails } from '../../../interface/orderDetails';\r\n\r\nimport { BaseHttpService } from '../../../services/base-http.service';\r\nimport { DoctorService } from '../../../services/doctor-service/doctor.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CustomIconsService } from 'src/app/shared/UI_service/custom-icons.service';\r\nimport * as moment from \"moment\";\r\n\r\n@Component({\r\n  selector: 'app-your-heal-cart',\r\n  templateUrl: './your-heal-cart.component.html',\r\n  styleUrls: [\r\n    './your-heal-cart.component.less',\r\n    './style/add-to-cart.less'\r\n  ]\r\n})\r\nexport class YourHealCartComponent implements OnInit {\r\n\r\n\r\n\r\n  constructor(private router: Router, private activedRouter: ActivatedRoute, private doctorService: DoctorService, private http: BaseHttpService, private CustomIcons: CustomIconsService) {\r\n\r\n  }\r\n\r\n  public tab: number = 2;\r\n  selectedPatient: Patient;\r\n  doctor: Doctor;\r\n  isSpining: boolean = false;\r\n  labCart: orderDetails[] = [];\r\n  customStyle = {\r\n    'background-color': '#fff',\r\n    'border-radius': '4px',\r\n    'margin-bottom': '10px',\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.selectedPatient = JSON.parse(localStorage.getItem(`${this.doctorService.username}-selectedPatient`));\r\n    this.doctorService.data$.subscribe((d: LandingPageData) => {\r\n      this.doctor = d.doctor;\r\n     this.getHealCart(this.selectedPatient.patient_id);\r\n\r\n    })\r\n\r\n\r\n  }\r\n\r\n  patientChanged(item:Patient){\r\n\r\n    if(this.selectedPatient.patient_id != item.patient_id) {\r\n    this.getHealCart(item.patient_id);\r\n    this.selectedPatient = item;\r\n\r\n    }\r\n  }\r\n\r\n\r\n  getHealCart(patientId: string) {\r\n    this.isSpining = true;\r\n\r\n    const data = { \"patientId\": patientId, \"doctorId\": this.doctor.uid }\r\n    this.http.makePartnerRequest<orderDetails[]>({ method: 'POST', url: '/v1/prescription/getPatientCart', data: data }).subscribe(res => {\r\n      if(res.errors) {\r\n        this.isSpining = false;\r\n        return false;\r\n      }      \r\n      \r\n      this.isSpining = false;\r\n      this.labCart = res.data;\r\n    })\r\n\r\n\r\n  }\r\n\r\n  itemsAddedCart: orderDetails[] = [];\r\n  addItemToCart(orderItem: orderDetails) {\r\n\r\n    const found = this.itemsAddedCart.some((el) => {\r\n      return el.prescriptionId === orderItem.prescriptionId;\r\n\r\n    })\r\n\r\n    if (!found) {\r\n      orderItem.isAddedTocart = true;\r\n      orderItem.selectedSlotDateTime = {selectedDate:moment(new Date()).format(\"yyyy-MM-DD\"),slotStartTime:'',slotEndTime:''}\r\n      this.itemsAddedCart.push(orderItem);\r\n    }\r\n\r\n\r\n  }\r\n\r\n  processToCheckout() {\r\n\r\n    if (this.itemsAddedCart.length > 0) {\r\n\r\n      localStorage.setItem('cartData-'+this.selectedPatient.patient_id,JSON.stringify(this.itemsAddedCart));\r\n\r\n      this.router.navigate(['./confirm-order'], {\r\n        relativeTo: this.activedRouter\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"your-heal-cart\">\r\n    <br>\r\n    <br>\r\n    <br>\r\n    <!-- tab control -->\r\n    <ng-container>\r\n        <div nz-row class=\"mt-2\">\r\n            <!-- <div class=\"center_xy\" nz-col [nzXs]=\"{ span: 12 }\"\r\n                [ngClass]=\"{'notActiveTab': tab,'themes_border_bottom': 1==tab}\">\r\n                <h5 data-added=\"Newly added\" (click)=\"tab_control(1)\" class=\"tab_name\">Order Medicines</h5>\r\n            </div> -->\r\n            <div class=\"center_xy\" nz-col [nzXs]=\"{ span: 12 }\"\r\n                [ngClass]=\"{'notActiveTab': tab,'themes_border_bottom': 2==tab}\">\r\n                <h5 data-added=\"Newly added\" class=\"tab_name\">Diagnostic Test</h5>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <!-- end (tab control) -->\r\n\r\n    <!-- search bar -->\r\n    <!-- <div nz-row class=\"searchBar_container\">\r\n        <div nz-col [nzXs]=\"{ span: 12 }\" class=\"center_xy\">\r\n            <h5 class=\"Deliver_heading\">Deliver Services Here</h5>\r\n        </div>\r\n        <div nz-col [nzXs]=\"{ span: 12 }\" class=\"center_xy\">\r\n            <div class=\"searchBar\">\r\n                <span>\r\n                    <img src=\"assets/img/heal_cart/glyph.svg\" alt=\"\" width=\"15px\"\r\n                        style=\"margin-right: 2px;\">\r\n                </span>\r\n                <input type=\"text\" placeholder=\"Search Area/ Locality\">\r\n            </div>\r\n        </div>\r\n    </div> -->\r\n    <!-- end ( search bar ) -->\r\n\r\n    <!-- status cart -->\r\n<app-patient-card  (patientChanged)=\"patientChanged($event)\"></app-patient-card>\r\n   \r\n\r\n     \r\n    <!-- end (status cart) -->\r\n\r\n    <!-- main tab 1 -->\r\n    <!-- <ng-container *ngIf=\"1 == tab\">\r\n        <div class=\"tab\">\r\n            <h3 class=\"heading_type\">Latest Medicine Prescribed</h3>\r\n            <ng-template #dropdown>\r\n                <div nz-row>\r\n                    <div nz-col [nzXs]=\"{ span: 3 }\">\r\n                        <img src=\"assets/img/heal_cart/medicine.svg\" alt=\"\" class=\"medicine_img\">\r\n                    </div>\r\n                    <div nz-col [nzXs]=\"{ span: 13 }\">\r\n                        <div>\r\n                            <h2 class=\"Medicine_heading\">Medications</h2>\r\n                            <h3 class=\"Medicine_other\">From : Dr Sanjay Gokale </h3>\r\n                            <h3 class=\"Medicine_other\">Date : Friday 29 Nov 2020 </h3>\r\n                            <h3 class=\"Medicine_other\">Time : 11:30 PM</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div nz-col [nzXs]=\"{ span: 8 }\">\r\n                        <div class=\"pos_rel\">\r\n                            <div class=\"O_num center_xy\">5</div>\r\n                            <br>\r\n                            <button class=\"Process_btn btn_primary\">Process Order</button>\r\n                        </div>\r\n                    </div> \r\n                </div>\r\n            </ng-template>\r\n            \r\n            <nz-collapse [nzAccordion]=\"true\" class=\"card app_shadow_b mt-3\" [nzBordered]=\"false\" [nzGhost]=\"true\" >\r\n                <nz-collapse-panel  [nzHeader]=\"dropdown\" [nzActive]=\"true\" [nzShowArrow]=\"false\">\r\n                    <ng-container>\r\n                        <div nz-col [nzXs]=\"{ span: 24 }\">\r\n                            <div class=\"dropdown_box\"></div>\r\n                            <h5 class=\"dropdownList mb-2\">Drug List</h5>\r\n                            <div class=\"dropdown_box_scroll\">\r\n                            <ng-container *ngFor=\"let item of medicine_cards\">\r\n                                <div nz-row class=\"mt-3\">\r\n                                    <div nz-col [nzXs]=\"{ span: 15 }\">\r\n                                        <div>\r\n                                            <h3 class=\"Tablet_name\">\r\n                                                {{item.name}}\r\n                                                </h3>\r\n                                            <h4 class=\"brand\">\r\n                                                ({{item.brand}})\r\n                                                </h4>\r\n                                            <h3 class=\"Tablet_contains\">\r\n                                                {{item.Tablet_contains}}\r\n                                            </h3>\r\n                                            <h3 class=\"day_time\">\r\n                                                {{item.time}}\r\n                                            </h3>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div nz-col [nzXs]=\"{ span: 9 }\">\r\n                                        <div class=\"price_section\">\r\n                                            <h3 class=\"price_cut\">\r\n                                                Rs . {{item.price}}\r\n                                                </h3>\r\n                                            <h3 class=\"price\">\r\n                                                Rs . {{item.cut_price}}</h3>\r\n            \r\n                                            <span class=\"Qty\">Qty&nbsp;</span>\r\n                                            <nz-select [nzSize]=\"'small'\" class=\"custom_select\" ngModel=\"lucy\"\r\n                                                [nzBorderless]=\"true\">\r\n            \r\n                                                <nz-option *ngFor=\"let item of items\" [nzValue]=\"item\" [nzLabel]=\"item\">\r\n                                                </nz-option>\r\n                                            </nz-select>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-container>\r\n                            </div>\r\n                        </div>\r\n                        <div nz-col [nzXs]=\"{ span: 24 }\">\r\n                            <span class=\"btn_row pt-2 mb-2\">\r\n                                <button class=\"Process_btn_2 btn_success\"  (click)=\"add_to_cart_now(true)\" >Add More Medicine</button>&nbsp;\r\n                                <ng-container *ngIf=\"!current_item\">\r\n                                    <button class=\"Process_btn_2 btn_primary\" (click)=\"add_current_item(true)\">Add To Cart</button>\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"current_item\">\r\n                                    <button class=\"Process_btn_3 btn_primary\">\r\n                                        <img src=\"assets/img/heal_cart/check.svg\" width=\"17px\" alt=\"\">&nbsp;Added to checkout\r\n                                    </button>\r\n                                </ng-container>\r\n                            </span>\r\n                        </div>\r\n                    </ng-container>\r\n                </nz-collapse-panel>\r\n              </nz-collapse>\r\n            <h3 class=\"heading_type mt-3\">Past Medicines Prescribed</h3>\r\n            <ng-template #PastDropDown>\r\n                <div nz-row>\r\n                    <div nz-col [nzXs]=\"{ span: 3 }\">\r\n                        <img src=\"assets/img/heal_cart/medicine.svg\" alt=\"\" class=\"medicine_img\">\r\n                    </div>\r\n                    <div nz-col [nzXs]=\"{ span: 13 }\">\r\n                        <div>\r\n                            <h2 class=\"Medicine_heading\">Medications</h2>\r\n                            <h3 class=\"Medicine_other\">From : Dr Sanjay Gokale </h3>\r\n                            <h3 class=\"Medicine_other\">Date : Friday 29 Nov 2020 </h3>\r\n                            <h3 class=\"Medicine_other\">Time : 11:30 PM</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div nz-col [nzXs]=\"{ span: 8 }\">\r\n                        <div class=\"pos_rel\">\r\n                            <h2 class=\"status\">Delivered</h2>\r\n                            <h3 class=\"DTL\">Nov 30, Wed, 2020</h3>\r\n                            <h3 class=\"DTL\">10:30 AM</h3>\r\n                            <h3 class=\"DTL\">Sion , Mumbai</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div nz-col [nzXs]=\"{ span: 24 }\">\r\n                        <span class=\"btn_row pt-2\">\r\n                            <button class=\"Process_btn_2 btn_success\">View Medicines</button>&nbsp;\r\n                            <button class=\"Process_btn_2 btn_primary\">Re-Order</button>\r\n                        </span>\r\n                    </div>\r\n                </div>  \r\n            </ng-template>\r\n            <nz-collapse class=\"card app_shadow_b mt-3\" [nzBordered]=\"false\" [nzGhost]=\"true\">\r\n                <nz-collapse-panel  [nzHeader]=\"PastDropDown\" [nzActive]=\"false\" [nzShowArrow]=\"false\">\r\n                    <ng-container>\r\n                        <div nz-col [nzXs]=\"{ span: 24 }\">\r\n                            <div class=\"dropdown_box\"></div>\r\n                            <h5 class=\"dropdownList mb-2\">Drug List</h5>\r\n                            <div class=\"dropdown_box_scroll\">\r\n                            <ng-container *ngFor=\"let item of medicine_cards\">\r\n                                <div nz-row class=\"mt-3\">\r\n                                    <div nz-col [nzXs]=\"{ span: 16 }\">\r\n                                        <div>\r\n                                            <h3 class=\"Tablet_name\">\r\n                                                {{item.name}}\r\n                                                </h3>\r\n                                            <h4 class=\"brand\">\r\n                                                ({{item.brand}})\r\n                                                </h4>\r\n                                            <h3 class=\"Tablet_contains\">\r\n                                                {{item.Tablet_contains}}\r\n                                            </h3>\r\n                                            <h3 class=\"day_time\">\r\n                                                {{item.time}}\r\n                                            </h3>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div nz-col [nzXs]=\"{ span: 8 }\">\r\n                                        <div class=\"price_section\">\r\n                                            <h3 class=\"price_cut\">\r\n                                                Rs . {{item.price}}\r\n                                                </h3>\r\n                                            <h3 class=\"price\">\r\n                                                Rs . {{item.cut_price}}</h3>\r\n            \r\n                                            <span class=\"Qty\">Qty&nbsp;</span>\r\n                                            <nz-select [nzSize]=\"'small'\" class=\"custom_select\" ngModel=\"lucy\"\r\n                                                [nzBorderless]=\"true\">\r\n            \r\n                                                <nz-option *ngFor=\"let item of items\" [nzValue]=\"item\" [nzLabel]=\"item\">\r\n                                                </nz-option>\r\n                                            </nz-select>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-container>\r\n                            </div>\r\n                        </div>\r\n                        <div nz-col [nzXs]=\"{ span: 24 }\">\r\n                            <span class=\"btn_row pt-2\">\r\n                                <button class=\"Process_btn_2 btn_success\"  (click)=\"add_to_cart_now(true)\" >Add More Medicine</button>&nbsp;\r\n                                <ng-container *ngIf=\"!current_item\">\r\n                                    <button class=\"Process_btn_2 btn_primary\" (click)=\"add_current_item(true)\">Add To Cart</button>\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"current_item\">\r\n                                    <button class=\"Process_btn_3 btn_primary\">\r\n                                        <img src=\"assets/img/heal_cart/check.svg\" width=\"16px\" alt=\"\">&nbsp;Added to checkout\r\n                                    </button>\r\n                                </ng-container>\r\n                            </span>\r\n                        </div>\r\n                    </ng-container>\r\n                </nz-collapse-panel>\r\n            </nz-collapse>  \r\n            <br><br><br><br>     \r\n        </div>\r\n    </ng-container> -->\r\n    <!-- end (main tab 1) -->\r\n\r\n    <!-- main tab 2 -->\r\n    <ng-container *ngIf=\"2 == tab\">\r\n\r\n\r\n        <nz-result nzStatus=\"403\" nzTitle=\"No Heal cart Found\" nzSubTitle=\"Sorry, we are not found any Cart.\" *ngIf=\"labCart.length === 0\">\r\n           \r\n          </nz-result>\r\n\r\n    <div class=\"tab\" *ngIf=\"labCart.length > 0\">\r\n    <!-- heading -->\r\n    <h3 class=\"heading_type\">Latest Diagnostics Suggested</h3>\r\n\r\n    \r\n    \r\n    <nz-collapse class=\"card app_shadow_b mt-3\" [nzBordered]=\"false\" [nzGhost]=\"false\">\r\n\r\n     \r\n\r\n        <nz-collapse-panel *ngFor=\"let item of labCart; let isFirst = first;let i = index\"  [nzHeader]=\"dropdown\" [nzActive]=\"item.active\" [nzShowArrow]=\"false\"  [ngStyle]=\"customStyle\" >\r\n     \r\n            <ng-template #dropdown>\r\n                <div nz-row>\r\n                    <div nz-col [nzXs]=\"{ span: 3 }\">\r\n                        <img src=\"assets/img/heal_cart/medicine.svg\" alt=\"\" class=\"medicine_img\">\r\n                    </div>\r\n                    <div nz-col [nzXs]=\"{ span: 13 }\">\r\n                        <div>\r\n                            <h2 class=\"Medicine_heading\">Suggested investigations</h2>\r\n                            <h3 class=\"Medicine_other\">From : Dr {{item?.doctorDetails.doctorName}} </h3>\r\n                            <h3 class=\"Medicine_other\">Date : {{ item.invoiceTimestamp | date:'mediumDate'}} </h3>\r\n                            <h3 class=\"Medicine_other\">Time : {{ item.invoiceTimestamp | date:'shortTime'}} </h3>\r\n                        </div>\r\n                    </div>\r\n                    <div nz-col [nzXs]=\"{ span: 8 }\">\r\n                        <div class=\"pos_rel\">\r\n                            <div class=\"O_num center_xy\"> {{item.orders.length}}</div>\r\n                            <br>\r\n                            <button  class=\"Process_btn btn_primary\">Process Order</button>\r\n                        </div>\r\n                    </div> \r\n                </div>\r\n            </ng-template>\r\n            <div nz-col [nzXs]=\"{ span: 24 }\" class=\"dropdown_box\">\r\n                <h5 class=\"dropdownList mb-2\">Lab Test List</h5>\r\n                <div class=\"dropdown_box_scroll\">\r\n                  <ng-container *ngFor=\"let lab of item?.orders\">\r\n                    <div nz-row class=\"mt-3\">\r\n                        <div nz-col [nzXs]=\"{ span: 16 }\">\r\n                            <div>\r\n                                <h3 class=\"Tablet_name\">\r\n                                    {{lab.labName}}\r\n                                    </h3>\r\n                                <h4 class=\"brand\">\r\n                                  <span class=\"lab_logo\">\r\n                                      <img src=\"assets/img/heal_cart/DrLal_Logo.png\" alt=\"\">\r\n                                  </span>  {{lab.labName}}\r\n                                </h4>\r\n                            </div>\r\n                        </div>\r\n                        <div nz-col [nzXs]=\"{ span: 8 }\">\r\n                            <div class=\"price_section\">\r\n                                <h3 class=\"price_cut\">\r\n                                    Rs . {{lab.amountRecieveable}}\r\n                                    </h3>\r\n                                <h3 class=\"price\">\r\n                                    Rs . {{lab.amountRecieveable - lab.discountOffered}}\r\n                                </h3>\r\n                            </div>\r\n                        </div>\r\n                        <div nz-col [nzXs]=\"{ span: 24 }\">\r\n                            <span class=\"btn_row pt-2 mb-2\">\r\n                                <!-- when added -->\r\n                                <button class=\"Process_btn_4 btn_primary\">\r\n                                    <img src=\"assets/img/heal_cart/check.svg\" width=\"16px\" alt=\"\">&nbsp;Selected\r\n                                </button>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n                </div>\r\n            </div>\r\n            <div nz-col [nzXs]=\"{ span: 24 }\">\r\n                <span class=\"btn_row pt-2 mb-2\">\r\n                    <!-- when Add To Cart -->\r\n                    <ng-template *ngIf=\"item.isAddedTocart then addedToCart;else addToCart\"> \r\n                      \r\n                    </ng-template>\r\n                    <ng-template #addedToCart>  \r\n\r\n                    <button class=\"Process_btn_3 btn_primary\">\r\n                        <img src=\"assets/img/heal_cart/check.svg\" width=\"16px\" alt=\"\">&nbsp;Added to checkout\r\n                    </button>\r\n                    </ng-template>\r\n\r\n                    <ng-template #addToCart>  \r\n                        <button  class=\"Process_btn_2 btn_primary\" (click)=\"addItemToCart(item)\">Add To Cart</button>\r\n\r\n                    </ng-template>\r\n\r\n                  \r\n                </span>\r\n            </div>\r\n        </nz-collapse-panel>\r\n\r\n      </nz-collapse>\r\n    \r\n        </div>\r\n    </ng-container>\r\n    <!-- end (main tab 2) -->\r\n\r\n       <!-- switcher -->\r\n       <div class=\"switcher mt-2\" *ngIf=\"labCart.length > 0\">\r\n        <div nz-row>\r\n            <div nz-col [nzXs]=\"{ span: 24 }\">\r\n\r\n                <div class=\"switcher_price center_xy\">\r\n                   <div class=\"icons full-width\">\r\n                        <button class=\"floting_btn\" [disabled]=\"(itemsAddedCart.length  === 0) ? true : false\"\r\n                        (click)=\"processToCheckout()\"\r\n                        [attr.data-order-num]=\"itemsAddedCart.length\">\r\n                            <img src=\"assets/img/heal_cart/orderIco.svg\" alt=\"\" srcset=\"\">\r\n                            Proceed to Checkout\r\n\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         \r\n        </div>\r\n    </div>\r\n    <!-- end (switcher)  [disabled]=\" (itemsAddedCart.length === 0) ? true : false\" -->\r\n\r\n</div>\r\n\r\n \r\n    \r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-your-messages',\r\n  templateUrl: './your-messages.component.html',\r\n  styleUrls: ['./your-messages.component.less']\r\n})\r\nexport class YourMessagesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  public tab: number = 1;\r\n  tab_control(param) {\r\n    this.tab = param;\r\n  }\r\n}\r\n","<div class=\"your-messages-container\">\r\n    <br>\r\n    <br>\r\n    <!-- search bar -->\r\n    <ng-template #icon>\r\n        <div class=\"icon_ac center_xy app_shadow_b\">\r\n            <span>Ac</span>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <nz-input-group class=\"iocns\" [nzSuffix]=\"icon\">\r\n        <input class=\"customInput\" [nzBorderless]=\"true\" [nzSize]=\"'large'\" type=\"text\" placeholder=\"Search Messages or by date\"\r\n            nz-input />\r\n    </nz-input-group>\r\n    <!-- end (search bar) -->\r\n\r\n    <!-- tab section -->\r\n\r\n    <!-- tab control -->\r\n    <div nz-row class=\"mt-3 mb-3\">\r\n        <div nz-col class=\"center_xy\" \r\n        [ngClass]=\"{'notTabActive': 1!=tab ,'themes_border_bottom': 1==tab}\" \r\n        [nzXs]=\"{ span: 12 }\">\r\n            <h3 class=\"tab_name\" (click)=\"tab_control(1)\">Your Inbox</h3>\r\n        </div>\r\n        <div nz-col class=\"center_xy\" \r\n        [ngClass]=\"{'notTabActive': 2!=tab ,'themes_border_bottom': 2==tab}\" \r\n        [nzXs]=\"{ span: 12 }\">\r\n            <h3 class=\"tab_name\" (click)=\"tab_control(2)\">Sent Messages</h3>\r\n        </div>\r\n    </div>\r\n    <!-- end( tab control) -->\r\n    \r\n    <!-- tab 1 -->\r\n    <ng-container *ngIf=\"1==tab\">\r\n       <div class=\"reply_card app_shadow_b\">\r\n          <div class=\"reply_card_header\">\r\n              <h2>\r\n                  <img src=\"assets/icon/colorIcon/extra/doctor.svg\" alt=\"\">\r\n                  <span class=\"name\">&nbsp; Dr Sanjay Bhide</span>\r\n                  <span class=\"date\">&nbsp; 30 oct , 12:30 PM</span>\r\n              </h2>\r\n          </div>\r\n          <div class=\"reply_card_main mt-1\">\r\n              <div nz-row>\r\n                  <div nz-col [nzXs]=\"{ span: 20 }\">\r\n                      <h3 class=\"Messages\">I saw your just saw your messages regarding your elevated high blood…</h3>\r\n                  </div>\r\n                  <div nz-col [nzXs]=\"{ span: 4 }\" class=\"messages_control center_xy\">\r\n                      <span>\r\n                        <i class=\"mb-2\" nz-icon nzType=\"right\" nzTheme=\"outline\"></i>\r\n                        <button class=\"Reply_btn themes_text themes_bg\">Reply</button>\r\n                      </span>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n       </div>\r\n\r\n       <div class=\"reply_card app_shadow_b mt-3\">\r\n        <div class=\"reply_card_header\">\r\n            <h2>\r\n                <img src=\"assets/icon/colorIcon/extra/mkit.svg\" alt=\"\">\r\n                <span class=\"name\">&nbsp; 1mg.com</span>\r\n                <span class=\"date\">&nbsp; 30 oct , 12:30 PM</span>\r\n            </h2>\r\n        </div>\r\n        <div class=\"reply_card_main mt-1\">\r\n            <div nz-row>\r\n                <div nz-col [nzXs]=\"{ span: 20 }\">\r\n                    <h3 class=\"Messages\">Your Cart is ready to be ordered, please click on proceed or reply to us…</h3>\r\n                </div>\r\n                <div nz-col [nzXs]=\"{ span: 4 }\" class=\"messages_control center_xy\">\r\n                    <span>\r\n                      <i class=\"mb-2\" nz-icon nzType=\"right\" nzTheme=\"outline\"></i>\r\n                      <button class=\"Reply_btn themes_text themes_bg\">Reply</button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     </div>\r\n\r\n     <div class=\"reply_card app_shadow_b mt-3\">\r\n        <div class=\"reply_card_header\">\r\n            <h2>\r\n                <img src=\"assets/icon/colorIcon/extra/lab.svg\" alt=\"\">\r\n                <span class=\"name\">&nbsp; Saksham Labs</span>\r\n                <span class=\"date\">&nbsp; 30 oct , 12:30 PM</span>\r\n            </h2>\r\n        </div>\r\n        <div class=\"reply_card_main mt-1\">\r\n            <div nz-row>\r\n                <div nz-col [nzXs]=\"{ span: 20 }\">\r\n                    <h3 class=\"Messages\">Your request to change the lab test date is approved Kindly proceed to order…</h3>\r\n                </div>\r\n                <div nz-col [nzXs]=\"{ span: 4 }\" class=\"messages_control center_xy\">\r\n                    <span>\r\n                      <i class=\"mb-2\" nz-icon nzType=\"right\" nzTheme=\"outline\"></i>\r\n                      <button class=\"Reply_btn themes_text themes_bg\">Reply</button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     </div>\r\n\r\n     <!-- card rep -->\r\n     <div class=\"reply_card app_shadow_b mt-3\">\r\n        <div class=\"reply_card_header\">\r\n            <h2>\r\n                <img src=\"assets/icon/colorIcon/extra/doctor.svg\" alt=\"\">\r\n                <span class=\"name\">&nbsp; Dr Sanjay Bhide</span>\r\n                <span class=\"date\">&nbsp; 30 oct , 12:30 PM</span>\r\n            </h2>\r\n        </div>\r\n        <div class=\"reply_card_main mt-1\">\r\n            <div nz-row>\r\n                <div nz-col [nzXs]=\"{ span: 20 }\">\r\n                    <h3 class=\"Messages\">I saw your just saw your messages regarding your elevated high blood…</h3>\r\n                </div>\r\n                <div nz-col [nzXs]=\"{ span: 4 }\" class=\"messages_control center_xy\">\r\n                    <span>\r\n                      <i class=\"mb-2\" nz-icon nzType=\"right\" nzTheme=\"outline\"></i>\r\n                      <button class=\"Reply_btn themes_text themes_bg\">Reply</button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     </div>\r\n     \r\n     <div class=\"reply_card app_shadow_b mt-3\">\r\n        <div class=\"reply_card_header\">\r\n            <h2>\r\n                <img src=\"assets/icon/colorIcon/extra/doctor.svg\" alt=\"\">\r\n                <span class=\"name\">&nbsp; Dr Sanjay Bhide</span>\r\n                <span class=\"date\">&nbsp; 30 oct , 12:30 PM</span>\r\n            </h2>\r\n        </div>\r\n        <div class=\"reply_card_main mt-1\">\r\n            <div nz-row>\r\n                <div nz-col [nzXs]=\"{ span: 20 }\">\r\n                    <h3 class=\"Messages\">I saw your just saw your messages regarding your elevated high blood…</h3>\r\n                </div>\r\n                <div nz-col [nzXs]=\"{ span: 4 }\" class=\"messages_control center_xy\">\r\n                    <span>\r\n                      <i class=\"mb-2\" nz-icon nzType=\"right\" nzTheme=\"outline\"></i>\r\n                      <button class=\"Reply_btn themes_text themes_bg\">Reply</button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     </div>\r\n\r\n     <div class=\"reply_card app_shadow_b mt-3\">\r\n        <div class=\"reply_card_header\">\r\n            <h2>\r\n                <img src=\"assets/icon/colorIcon/extra/doctor.svg\" alt=\"\">\r\n                <span class=\"name\">&nbsp; Dr Sanjay Bhide</span>\r\n                <span class=\"date\">&nbsp; 30 oct , 12:30 PM</span>\r\n            </h2>\r\n        </div>\r\n        <div class=\"reply_card_main mt-1\">\r\n            <div nz-row>\r\n                <div nz-col [nzXs]=\"{ span: 20 }\">\r\n                    <h3 class=\"Messages\">I saw your just saw your messages regarding your elevated high blood…</h3>\r\n                </div>\r\n                <div nz-col [nzXs]=\"{ span: 4 }\" class=\"messages_control center_xy\">\r\n                    <span>\r\n                      <i class=\"mb-2\" nz-icon nzType=\"right\" nzTheme=\"outline\"></i>\r\n                      <button class=\"Reply_btn themes_text themes_bg\">Reply</button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     </div>\r\n    </ng-container>\r\n     <!-- end (tab 1) -->\r\n\r\n    <!-- tab 2 -->\r\n    <ng-container *ngIf=\"2==tab\">\r\n        <p>tab 2 : Sent Messages here</p>\r\n    </ng-container>\r\n   <!-- end (tab 2) -->\r\n\r\n    <!-- end (tab section) -->\r\n</div>\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { OwlOptions, SlidesOutputData } from 'ngx-owl-carousel-o';\r\nimport { Patient } from '../../interface/patient';\r\nimport { DoctorService } from '../../services/doctor-service/doctor.service';\r\nimport { PatientService } from '../../services/patient-service/patient.service';\r\nimport { allIcons } from '../../shared/icon/custom-icon';\r\nimport { CustomIconsService } from '../../shared/UI_service/custom-icons.service';\r\n\r\n@Component({\r\n  selector: 'app-patient-card',\r\n  templateUrl: './patient-card.component.html',\r\n  styleUrls: ['./patient-card.component.less']\r\n})\r\nexport class PatientCardComponent implements OnInit {\r\n\r\n  @Output() patientChanged = new EventEmitter<Patient>();\r\n  Edit = this.CustomIcons.setIcon(allIcons.pen)\r\n  patients:Patient[]= [];\r\n  constructor( private CustomIcons: CustomIconsService,private doctorService:DoctorService,private patientService:PatientService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.patients = JSON.parse(localStorage.getItem(\"patients\" + this.doctorService.username));\r\n\r\n    const selectedPatient:Patient = JSON.parse(localStorage.getItem(`${this.doctorService.username}-selectedPatient`));\r\n    const index =  this.patients.map(  (x) => {return x.patient_id; }).indexOf(selectedPatient.patient_id);\r\n    this.customOptions.startPosition = index;\r\n  }\r\n\r\n\r\n  \r\n  getData(data: SlidesOutputData) {\r\n    this.patientService.setSelectedPatient(this.patients[data.startPosition]);\r\n    this.patientChanged.emit(this.patients[data.startPosition]); \r\n\r\n  }\r\n\r\n\r\n  customOptions: OwlOptions = {\r\n    loop: false,\r\n    mouseDrag: true,\r\n    touchDrag: true,\r\n    pullDrag: true,\r\n    dots: false,\r\n    navSpeed: 700,\r\n    navText: ['', ''],\r\n    responsive: {\r\n      0: {\r\n        items: 1\r\n      },\r\n      400: {\r\n        items: 1\r\n      },\r\n      740: {\r\n        items: 2\r\n      },\r\n      940: {\r\n        items: 4\r\n      }\r\n    },\r\n    startPosition:0,\r\n    nav: false\r\n  }\r\n  \r\n  \r\n}\r\n","\r\n<ng-container *ngIf=\"patients && patients.length > 0\"> \r\n\r\n<owl-carousel-o [options]=\"customOptions\" (changed)=\"getData($event)\" >\r\n    <ng-template carouselSlide   *ngFor=\"let item of patients\" [width]=\"390\" [id]=\"item.patient_id\" class=\"owl-patient-item\">   \r\n        <div nz-row class=\"card center_xy app_shadow_b mt-3\"> \r\n        <div class=\"center_xy\" nz-col [nzXs]=\"{ span: 4 }\">\r\n         <img src=\"assets/icon/colorIcon/plane_patient.svg\"     class=\"slideIco_img\" alt=\"\">\r\n        </div>\r\n        <div nz-col [nzXs]=\"{ span: 20 }\">\r\n            <div nz-row>\r\n                <div nz-col [nzXs]=\"{ span: 12 }\">\r\n                   <h2 class=\"name\">{{item.patient_name}} {{item.patient_last_name}}</h2>\r\n                   <h3 class=\"other_info\">Age : {{item.patient_age}}</h3>\r\n                   <h3 class=\"other_info\">Sex : {{item.patient_gender}}</h3>\r\n                </div>\r\n                <div nz-col [nzXs]=\"{ span: 12 }\" style=\"position: relative;\">\r\n                  <h3 class=\"card_id\">{{item.patient_id}}</h3>\r\n                  <button class=\"Edit\">Edit Profile <i nz-icon  [innerHTML]=\"Edit\"></i></button>\r\n                </div>\r\n            </div>          \r\n        </div>\r\n    </div>\r\n</ng-template>  \r\n   \r\n  </owl-carousel-o>\r\n\r\n</ng-container>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FirstTimeVisitorComponent } from './page/first-time-visitor/first-time-visitor.component';\r\nimport { SelectTimeComponent } from './page/select-time/select-time.component';\r\nimport { PatientDashboardComponent } from './patient-dashboard.component';\r\nimport { ConfirmAppointmentComponent } from './page/confirm-appointment/confirm-appointment.component';\r\nimport { HealthUpdateComponent } from './page/health-update/health-update.component';\r\nimport { YourAppointmentsComponent } from './page/your-appointments/your-appointments.component';\r\nimport { HealthRecordsComponent } from './page/health-records/health-records.component';\r\nimport { YourMessagesComponent } from './page/your-messages/your-messages.component';\r\nimport { YourHealCartComponent } from '../patient-dashboard/page/your-heal-cart/your-heal-cart.component';\r\nimport { ConfirmCartComponent } from './page/your-heal-cart/confirm-cart/confirm-cart.component';\r\nimport { ConfirmAddressComponent } from './page/your-heal-cart/confirm-address/confirm-address.component';\r\nimport { NewAddressComponent } from './page/your-heal-cart/new-address/new-address.component';\r\nimport { ConfirmTimingComponent } from './page/your-heal-cart/confirm-timing/confirm-timing.component';\r\nimport { OrderSummaryComponent } from './page/your-heal-cart/order-summary/order-summary.component';\r\nimport { PaymentMethodComponent } from './page/your-heal-cart/payment-method/payment-method.component';\r\nimport { PatientRootComponent } from './patient-root/patient-root.component'\r\nimport { CartRootComponent } from './page/your-heal-cart/cart-root/cart-root.component';\r\nimport { MyProfileComponent } from './page/my-profile/my-profile.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: PatientRootComponent,\r\n    children: [\r\n  { path: '', component: PatientDashboardComponent},\r\n  { path: 'Visitor', component: FirstTimeVisitorComponent },\r\n  { path: 'book-appointment', component: SelectTimeComponent },\r\n  { path: 'book-appointment/:id', component: SelectTimeComponent },\r\n\r\n  { path: 'Confirm', component: ConfirmAppointmentComponent },\r\n  { path: 'Health-Update', component: HealthUpdateComponent },\r\n  { path: 'Your-Appointments', component: YourAppointmentsComponent },\r\n  { path: 'Health-Records', component: HealthRecordsComponent },\r\n  { path: 'Your-Messages', component: YourMessagesComponent },\r\n  { path: 'payment', component: PaymentMethodComponent },\r\n\r\n      { path: 'Confirm', component: ConfirmAppointmentComponent },\r\n      { path: 'Health-Update', component: HealthUpdateComponent },\r\n      { path: 'Your-Appointments', component: YourAppointmentsComponent },\r\n      { path: 'Health-Records', component: HealthRecordsComponent },\r\n      { path: 'Your-Messages', component: YourMessagesComponent },\r\n      { path: 'myProfile', component: MyProfileComponent },\r\n      { path: 'confirm-order', component: ConfirmCartComponent },\r\n      { path: 'address', component: ConfirmAddressComponent },\r\n      { path: 'addAddress', component: NewAddressComponent },\r\n      { path: 'apptTime', component: ConfirmTimingComponent },\r\n      { path: 'orderSummary', component: OrderSummaryComponent },\r\n      { path: 'payment', component: PaymentMethodComponent },\r\n\r\n      {\r\n        path: 'cart', component: CartRootComponent, children: [\r\n          { path: '', component: YourHealCartComponent },\r\n          { path: 'confirm-order', component: ConfirmCartComponent },\r\n          { path: 'address', component: ConfirmAddressComponent },\r\n          { path: 'addAddress/:id', component: NewAddressComponent },\r\n          { path: 'apptTime', component: ConfirmTimingComponent },\r\n          { path: 'orderSummary', component: OrderSummaryComponent },\r\n          { path: 'payment', component: PaymentMethodComponent },\r\n\r\n          { path: 'confirm-order', component: ConfirmCartComponent },\r\n          { path: 'Confirm_Address', component: ConfirmAddressComponent },\r\n          { path: 'add-Address', component: NewAddressComponent },\r\n          { path: 'Confirm_Timing', component: ConfirmTimingComponent },\r\n          { path: 'confirm_timing', component: ConfirmTimingComponent },\r\n          { path: 'Order_Summary', component: OrderSummaryComponent },\r\n          { path: 'Payment_Method', component: PaymentMethodComponent }\r\n        ]\r\n      },\r\n    ]\r\n  }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PatientDashboardRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Appointment } from '../interface/appointment';\r\nimport { BaseHttpService } from '../services/base-http.service';\r\nimport { HttpConstants } from '../services/http-constants';\r\nimport * as moment from \"moment\";\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\nimport { DoctorService } from '../services/doctor-service/doctor.service';\r\nimport { Patient } from '../interface/patient';\r\nimport { Clinic } from '../interface/clinic';\r\nimport { LandingPageData } from '../interface/landingData';\r\nimport { DynamicTitleService } from '../shared/UI_service/dynamic-title.service';\r\n\r\n@Component({\r\n  selector: 'app-patient-dashboard',\r\n  templateUrl: './patient-dashboard.component.html',\r\n  styleUrls: ['./patient-dashboard.component.less']\r\n})\r\nexport class PatientDashboardComponent implements OnInit {\r\n  todayDate = moment().format('ll');\r\n  todaysAppointment: Appointment[] = [];\r\n  isSpinning: boolean = false;\r\n  patients: Patient[] = [];\r\n  allClinics: Clinic[] = [];\r\n  selectedPatient: Patient;\r\n  constructor(private _router: Router, private http: BaseHttpService, private modal: NzModalService, private doctorService: DoctorService) { }\r\n  scroll_cards: any[] = [\r\n    {\r\n      id: 1,\r\n      title: 'Appointments',\r\n      icon: 'Group 1694.svg',\r\n      path: './Your-Appointments'\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Health Records',\r\n      icon: 'health-check.svg',\r\n      path: './Health-Records'\r\n    },\r\n    // {\r\n    //   id: 3,\r\n    //   title: 'Message',\r\n    // icon: 'communication.svg',\r\n    // path: './Your-Messages'\r\n    // },\r\n    // {\r\n    //   id: 4,\r\n    //   title: 'My invoices',\r\n    // icon: 'card_4.png',\r\n    //   path: ''\r\n    // },\r\n    // {\r\n    //   id: 5,\r\n    //   title: 'My Health',\r\n    //     icon: 'heart-rate.svg',\r\n    //   path: ''\r\n    // },\r\n    {\r\n      id: 6,\r\n      title: 'my Heal Cart',\r\n      icon: 'briefcase.svg',\r\n      path: './cart'\r\n    },\r\n    {\r\n      id: 7,\r\n      title: 'My Orders',\r\n      icon: 'Group 1698.svg',\r\n      path: ''\r\n    },\r\n    {\r\n      id: 8,\r\n      title: 'My Profile',\r\n      icon: 'Patient.svg',\r\n      path: './myProfile'\r\n    }\r\n  ]\r\n  ngOnInit(): void {\r\n\r\n    this.doctorService.data$.subscribe((d: LandingPageData) => {\r\n      this.allClinics = d.clinics;\r\n\r\n    })\r\n    this.patients = JSON.parse(localStorage.getItem(\"patients\" + this.doctorService.username));\r\n    this.selectedPatient = JSON.parse(localStorage.getItem(`${this.doctorService.username}-selectedPatient`));\r\n    this.getUpcomingAppt(this.selectedPatient.patient_id);\r\n  }\r\n\r\n  getUpcomingAppt(patientId: string) {\r\n    this.isSpinning = true;\r\n\r\n    let now = moment().startOf('day').toString();\r\n    const dataToPost = { timestamp: new Date(now).getTime(), patient_id: patientId }\r\n\r\n    this.http.makeAuthRequest<todayAppt>('POST', HttpConstants.appointment.getTodaysAppointment, dataToPost).subscribe(result => {\r\n      this.isSpinning = false;\r\n\r\n      if (result.data) {\r\n        this.todaysAppointment = result.data.appointment;\r\n      }\r\n\r\n    })\r\n\r\n  }\r\n\r\n\r\n  cards_page() {\r\n    this._router.navigate(['./Select-Time'])\r\n\r\n  }\r\n\r\n  getApptTitle(item: Appointment) {\r\n\r\n    console.log('11--')\r\n    if (item.type == 'followup') {\r\n      return 'Follow-up Reminder'\r\n    } else if (item.isTelimedicineAppointment && item.isTelimedicineAppointment === true) {\r\n      return 'Online Appt Reminder'\r\n    } else {\r\n      return 'Appointment Reminder'\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  getData(e: Event) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport interface todayAppt {\r\n  appointment: Appointment[]\r\n} \r\n","<!-- patient-dashboard-container -->\r\n<app-container tabTitle=\"Patient dashboard\">\r\n  <nz-spin [nzSpinning]=\"isSpinning\">\r\n   <!-- [setMeta]=\"{name:'',content:''}\" -->\r\n    <div class=\"patient-dashboard-container\">\r\n      <!-- scroll card --> \r\n      <div class=\"scroll_container\">\r\n        <div class=\"card-row\">\r\n          <ng-container *ngFor=\"let card of scroll_cards\">\r\n            <div class=\"scroll_card center_xy noselect\" [routerLink]=\"[card.path]\">\r\n                <span>\r\n                    <div class=\"center_xy scroll_card_ico_shadow\">\r\n                        <a href=\"javascript:void(0)\">\r\n                            <img src=\"assets/icon/colorIcon/swipe_card/{{card.icon}}\" alt=\"\">\r\n                        </a>\r\n                    </div>\r\n                    <h3>{{card.title}}</h3>\r\n                    \r\n                </span>\r\n            </div>\r\n        </ng-container>\r\n        </div>\r\n      </div>\r\n      <!-- end(scroll card)-->\r\n      <div class=\"patient-dashboard-components\">\r\n        <!-- date -->\r\n        <h3 class=\"dashboard_date\">\r\n         Today, {{ todayDate }} \r\n        </h3>\r\n        <!-- end(date)-->\r\n  \r\n  \r\n        <!-- Doctor on-line / off-line status card-->\r\n        <!-- off-line -->\r\n        <ng-container>\r\n          <div class=\"status_card app_shadow_b center_xy\" style=\"display: none\">\r\n            <div nz-row>\r\n              <div nz-col [nzXs]=\"{ span: 4 }\">\r\n                <img\r\n                  src=\"assets/icon/colorIcon/doctor.png\"\r\n                  alt=\"\"\r\n                  class=\"doctor_img\"\r\n                />\r\n              </div>\r\n              <div nz-col [nzXs]=\"{ span: 16 }\">\r\n                <h3 class=\"status_card_heading\">\r\n                  Doctor Krishnan is currently offline. Leave you msg\r\n                </h3>\r\n              </div>\r\n              <div class=\"center_xy\" nz-col [nzXs]=\"{ span: 4 }\">\r\n                <span>\r\n                  <div class=\"chatbot_bg_offline center_xy\">\r\n                    <img\r\n                      src=\"assets/icon/colorIcon/chatbot.svg\"\r\n                      alt=\"\"\r\n                      class=\"doctor_img chatbot\"\r\n                    />\r\n                  </div>\r\n                  <span style=\"font-size: 11px; text-align: center\">Offline</span>\r\n                </span>\r\n              </div>\r\n              <div class=\"center_xy\" nz-col [nzXs]=\"{ span: 4 }\">\r\n                <span>\r\n                  <div class=\"chatbot_bg_online center_xy\">\r\n                    <img\r\n                      src=\"assets/icon/colorIcon/chatbot.svg\"\r\n                      alt=\"\"\r\n                      class=\"doctor_img chatbot\"\r\n                    />\r\n                  </div>\r\n                  <span style=\"font-size: 11px; text-align: center\">Online</span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n        <!-- on-line -->\r\n  \r\n        <!-- end(Doctor on-line / off-line status card) -->\r\n        <br />\r\n        <!-- ________________________________________________________ -->\r\n        <!-- _______________________dynamic cards____________________-->\r\n        <!-- ________________________________________________________ -->\r\n        <!-- Appointment status card 1.1 -->\r\n        <!-- card 1  -->\r\n       \r\n        <app-appointment-card [todaysAppointment]='todaysAppointment' [patients]=\"patients\" [allClinics]=\"allClinics\" ></app-appointment-card>\r\n       \r\n  \r\n        <!-- end(Appointment status card)-->\r\n  \r\n        <ng-template [ngIf]=\"todaysAppointment.length === 0\">\r\n          <div class=\"dashboard_card card_types_1 app_shadow_b center_xy\">\r\n            <div nz-row>\r\n              <div nz-col [nzXs]=\"{ span: 4 }\">\r\n                <img\r\n                  src=\"assets/icon/colorIcon/card_1.png\"\r\n                  class=\"dashboard_card_icon\"\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              <div nz-col [nzXs]=\"{ span: 20 }\">\r\n                <span class=\"card_data\">\r\n                  <h1>Appointment</h1>\r\n                  <h3>\r\n                    You have no appointment , Click on Book Appointment to book\r\n                    your first online or in-clinic visit\r\n                  </h3>\r\n                </span>\r\n              </div>\r\n              <div nz-col [nzXs]=\"{ span: 24 }\">\r\n                <a [routerLink]=\"['./book-appointment']\">\r\n                  <button class=\"card_btn\">\r\n                    <img src=\"assets/icon/colorIcon/book.svg\" alt=\"\" /> &nbsp;\r\n                    Book Now\r\n                  </button>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n        <!-- end(Appointment card) -->\r\n        \r\n        <!-- Inform doctor-->\r\n        <div class=\"dashboard_card card_types_2 app_shadow_b center_xy\">\r\n          <div nz-row>\r\n              <div nz-col [nzXs]=\"{ span: 4 }\">\r\n                  <img src=\"assets/icon/colorIcon/followUp.svg\" class=\"dashboard_card_icon\" alt=\"\">\r\n              </div>\r\n              <div nz-col [nzXs]=\"{ span: 20 }\">\r\n                  <span class=\"card_data\">\r\n                      <h1>Inform doctor about your condition</h1>\r\n                      <h3>Before your appointment with doctor at 10:30 A.M. inform the doctor about your complaints , upload audio, video & old records so doctor can diagnose you better</h3>\r\n                  </span>\r\n              </div>\r\n              <div nz-col [nzXs]=\"{ span: 14 , offset: 10}\">\r\n                  <button class=\"btn_3 btn_purple\" [routerLink]=\"[ '../Health-Update' ]\" >\r\n                      <img src=\"assets/icon/colorIcon/Icon awesome-file-medical-alt.svg\" alt=\"\">&nbsp;Tell doctor how you feel?\r\n                  </button>\r\n              </div>\r\n          </div>\r\n      </div>\r\n         <!-- end( Inform doctor) -->\r\n  \r\n        <!-- My Health Profile card-->\r\n        <div class=\"dashboard_card card_types_2 app_shadow_b center_xy\">\r\n          <div nz-row>\r\n            <div nz-col [nzXs]=\"{ span: 4 }\">\r\n              <img\r\n                src=\"assets/icon/colorIcon/Patient.svg\"\r\n                class=\"dashboard_card_icon\"\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <div nz-col [nzXs]=\"{ span: 20 }\">\r\n              <span class=\"card_data\">\r\n                <h1>My Health Profile</h1>\r\n                <h3>\r\n                  Complete your profile before your appointment and update your\r\n                  health information so doctor can treat you better.\r\n                </h3>\r\n              </span>\r\n            </div>\r\n            <div nz-col [nzXs]=\"{ span: 24 }\">\r\n  \r\n              <button\r\n              [routerLink]=\"['../Health-Update']\"\r\n             class=\"card_btn themes_bg\">\r\n              Update Now\r\n            </button>\r\n  \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- end(My Health Profile card) -->\r\n  \r\n        <!-- Upload Old Records card -->\r\n        <div class=\"dashboard_card card_types_2 app_shadow_b center_xy\">\r\n          <div nz-row>\r\n            <div nz-col [nzXs]=\"{ span: 4 }\">\r\n              <img\r\n                src=\"assets/icon/colorIcon/healthcheck.svg\"\r\n                class=\"dashboard_card_icon\"\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <div nz-col [nzXs]=\"{ span: 18 }\">\r\n              <span class=\"card_data\">\r\n                <h1>Upload Old Records</h1>\r\n                <h3>\r\n                  Scan old records and keep a track of your health along with your\r\n                  doctor for a better outcome\r\n                </h3>\r\n              </span>\r\n            </div>\r\n            <div nz-col [nzXs]=\"{ span: 2 }\"></div>\r\n            <div nz-col [nzXs]=\"{ span: 24 }\">\r\n              <div nz-row>\r\n                <div class=\"p-1\" nz-col [nzXs]=\"{ span: 11 }\">\r\n                  <button class=\"uplaod_btn_1\">\r\n                    <img src=\"assets/icon/colorIcon/Gdrive.svg\" alt=\"\" />\r\n                    &nbsp;Google Drive\r\n                  </button>\r\n                </div>\r\n                <div class=\"p-1\" nz-col [nzXs]=\"{ span: 13 }\">\r\n                  <button class=\"uplaod_btn_2 themes_bg\"    [routerLink]=\"['../Health-Update']\">\r\n                    <img src=\"assets/icon/colorIcon/file-upload.svg\" alt=\"\" />\r\n                    &nbsp; Add New Records\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- end(Upload Old Records card) -->\r\n        <br /><br />\r\n      </div>\r\n    </div>\r\n  </nz-spin>\r\n</app-container>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PatientDashboardRoutingModule } from './patient-dashboard-routing.module';\r\nimport { FirstTimeVisitorComponent } from './page/first-time-visitor/first-time-visitor.component';\r\nimport { ZorroAntComponentsModule } from '../shared/themes/zorro-ant-components.module';\r\nimport { SelectTimeComponent } from './page/select-time/select-time.component';\r\nimport { ShareComponentsModule } from '../shared/components/share-components.module';\r\nimport { ConfirmAppointmentComponent } from './page/confirm-appointment/confirm-appointment.component';\r\nimport { HealthUpdateComponent } from './page/health-update/health-update.component';\r\nimport { YourAppointmentsComponent } from './page/your-appointments/your-appointments.component';\r\nimport { HealthRecordsComponent } from './page/health-records/health-records.component';\r\nimport { YourMessagesComponent } from './page/your-messages/your-messages.component';\r\nimport { YourHealCartComponent } from './page/your-heal-cart/your-heal-cart.component';\r\nimport { ConfirmCartComponent } from './page/your-heal-cart/confirm-cart/confirm-cart.component';\r\nimport { ConfirmAddressComponent } from './page/your-heal-cart/confirm-address/confirm-address.component';\r\nimport { CustomIconsService } from '../shared/UI_service/custom-icons.service'\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NewAddressComponent } from './page/your-heal-cart/new-address/new-address.component';\r\nimport { ConfirmTimingComponent } from './page/your-heal-cart/confirm-timing/confirm-timing.component';\r\nimport { OrderSummaryComponent } from './page/your-heal-cart/order-summary/order-summary.component';\r\nimport { PaymentMethodComponent } from './page/your-heal-cart/payment-method/payment-method.component';\r\nimport { PatientRootComponent } from './patient-root/patient-root.component';\r\nimport { AppointmentCardComponent } from './appointment-card/appointment-card.component';\r\nimport { PatientDashboardComponent } from './patient-dashboard.component'\r\nimport { AudioRecordingService } from '../services/patient-service/audio-recording.service';\r\nimport { CartRootComponent } from './page/your-heal-cart/cart-root/cart-root.component';\r\nimport { MyProfileComponent } from './page/my-profile/my-profile.component';\r\nimport { HealthInfoComponent } from './page/my-profile/health-info/health-info.component';\r\nimport { PersonalInfoComponent } from './page/my-profile/personal-info/personal-info.component';\r\n\r\nimport { CarouselModule } from 'ngx-owl-carousel-o';\r\nimport { PatientCardComponent } from './patient-card/patient-card.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    PatientDashboardRoutingModule,\r\n    ZorroAntComponentsModule,\r\n    ShareComponentsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CarouselModule\r\n  ],\r\n  exports: [CommonModule],\r\n  declarations: [PatientDashboardComponent, FirstTimeVisitorComponent, SelectTimeComponent, ConfirmAppointmentComponent, HealthUpdateComponent, YourAppointmentsComponent, HealthRecordsComponent, YourMessagesComponent, YourHealCartComponent, ConfirmCartComponent, ConfirmAddressComponent, NewAddressComponent, ConfirmTimingComponent, OrderSummaryComponent, PaymentMethodComponent, PatientRootComponent, AppointmentCardComponent, CartRootComponent, PatientCardComponent, MyProfileComponent, PersonalInfoComponent, HealthInfoComponent],\r\n  providers: [CustomIconsService, AudioRecordingService]\r\n})\r\nexport class PatientDashboardModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-patient-root',\r\n  templateUrl: './patient-root.component.html',\r\n  styleUrls: ['./patient-root.component.less']\r\n})\r\nexport class PatientRootComponent implements OnInit {\r\n\r\n  title = 'digiDoctor';\r\n  isCollapsed = true;\r\n  hamburger: boolean;\r\n  side_page_nav: boolean;\r\n  isport: boolean;\r\n  haveChatBox: boolean = true;\r\n  loading = false;\r\n  loading$: Observable<boolean>;\r\n  \r\n  constructor(public router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- <nz-layout class=\"layout\">\r\n    <nz-sider [nzWidth]=\"300\" class=\"themes_bg_invert\" nzCollapsible [(nzCollapsed)]=\"isCollapsed\" [nzTrigger]=\"null\"\r\n        [nzCollapsedWidth]=\"0\">\r\n        <div style=\"height:52px\"></div>\r\n    \r\n        <div nz-row *ngIf=\"!isport\">\r\n            <div nz-col class=\"p-1\" [nzXs]=\"{ span: 12 }\" [nzMd]=\"{ span: 12}\">\r\n                <button class=\"themes_bg themes_text\" nz-button nzBlock>Book Appointments</button>\r\n            </div>\r\n            <div nz-col class=\"p-1\" [nzXs]=\"{ span: 12 }\" [nzMd]=\"{ span: 12}\">\r\n                <button class=\"themes_bg themes_text\" nz-button nzBlock>Login</button>\r\n            </div>\r\n        </div>\r\n\r\n        <ul class=\"list_bar\" nz-menu nzMode=\"inline\">\r\n            <li nz-menu-item [routerLink]=\"[ '/PatientDashboard']\">\r\n                <i nz-icon nzType=\"dashboard\"></i>\r\n                <span>My Dashboard </span>\r\n            </li>\r\n            <li nz-menu-item>\r\n                <i nz-icon nzType=\"picture\"></i>\r\n                <span>Gallery\r\n                </span>\r\n            </li>\r\n            <li nz-menu-item>\r\n                <i nz-icon nzType=\"video-camera\"></i>\r\n                <span>Treatements</span>\r\n            </li>\r\n            <li nz-menu-item>\r\n                <i nz-icon nzType=\"project\"></i>\r\n                <span>Testimonial</span>\r\n            </li>\r\n            <li nz-menu-item>\r\n                <i nz-icon nzType=\"environment\"></i>\r\n                <span>Clinic Location</span>\r\n            </li>\r\n        </ul>\r\n        <div class=\"footer_list\">\r\n            <p>\r\n                <i class=\"fa fa-mobile\"></i>\r\n                <i class=\"fa fa-facebook-square\"></i>\r\n                <i class=\"fa fa-whatsapp\"></i>\r\n                <i class=\"fa fa-twitter-square\"></i>\r\n                <i class=\"fa fa-envelope-o\"></i>\r\n            </p>\r\n        </div>\r\n    </nz-sider>\r\n    <nz-layout>\r\n        <nz-content>\r\n            <div>\r\n                <div class=\"Dr_header\" \r\n                [ngClass]=\"{'d-none': router.url == '/','navFixed':true}\">\r\n                    <div nz-row> \r\n                        <div class=\"navbtn center_y\" nz-col [nzXs]=\"{ span: 24 }\" [nzMd]=\"{ span: 10}\">\r\n\r\n                            <ng-container *ngIf=\"hamburger\">\r\n                                <img src=\"assets/icon/menu.svg\" width=\"20px\" class=\"hamburger\"\r\n                                    (click)=\"isCollapsed = !isCollapsed\" alt=\"\">\r\n                            </ng-container>\r\n\r\n                            <ng-container *ngIf=\"!hamburger\">\r\n                                <img src=\"assets/icon/menuWhite.svg\" width=\"20px\" class=\"hamburger\"\r\n                                    (click)=\"isCollapsed = !isCollapsed\" alt=\"\">\r\n                            </ng-container>\r\n                            \r\n                            <h3 >Welcome Dr./ Clinic</h3>\r\n                        </div>\r\n                        <div nz-col [nzXs]=\"{ span: 14 }\" [nzMd]=\"{ span: 14}\">\r\n                            <div class=\"navBar p-2 true_desktop\">\r\n                                <span>\r\n                                    <button [routerLink]=\"[ '/PatientDashboard']\" nz-button nzType=\"text\">my dashboard</button>\r\n                                    <button \r\n                                    [routerLink]=\"[ '/PatientDashboard/Your-Appointments']\" nz-button nzType=\"text\">book Appointments</button>\r\n                                    <a [routerLink]=\"[ '/doctorPortal/Login' ]\">\r\n                                        <button nz-button nzType=\"text\">login</button>\r\n                                    </a>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                 \r\n                </div>\r\n            </div>\r\n            <router-outlet></router-outlet>\r\n\r\n           \r\n\r\n        </nz-content>\r\n    </nz-layout>\r\n</nz-layout> -->\r\n\r\n\r\n<router-outlet></router-outlet>\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport * as RecordRTC from 'recordrtc';\r\nimport * as moment from 'moment';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { isNullOrUndefined } from 'util';\r\n\r\ninterface RecordedAudioOutput {\r\n  blob: Blob;\r\n  title: string;\r\n}\r\n\r\n@Injectable()\r\nexport class AudioRecordingService {\r\n\r\n\r\n  private stream;\r\n  private recorder;\r\n  private interval;\r\n  private startTime;\r\n  private _recorded = new Subject<RecordedAudioOutput>();\r\n  private _recordingTime = new Subject<string>();\r\n  private _recordingFailed = new Subject<string>();\r\n\r\n\r\n  getRecordedBlob(): Observable<RecordedAudioOutput> {\r\n    return this._recorded.asObservable();\r\n  }\r\n\r\n  getRecordedTime(): Observable<string> {\r\n    return this._recordingTime.asObservable();\r\n  }\r\n\r\n  recordingFailed(): Observable<string> {\r\n    return this._recordingFailed.asObservable();\r\n  }\r\n\r\n\r\n  startRecording() {\r\n\r\n    if (this.recorder) {\r\n      // It means recording is already started or it is already recording something\r\n      return;\r\n    }\r\n\r\n    this._recordingTime.next('00:00');\r\n    navigator.mediaDevices.getUserMedia({ audio: true }).then(s => {\r\n      this.stream = s;\r\n      this.record();\r\n    }).catch(error => {\r\n      this._recordingFailed.next();\r\n    });\r\n\r\n  }\r\n\r\n  abortRecording() {\r\n    this.stopMedia();\r\n  }\r\n\r\n  private record() {\r\n\r\n    this.recorder = new RecordRTC.StereoAudioRecorder(this.stream, {\r\n      type: 'audio',\r\n      mimeType: 'audio/webm'\r\n    });\r\n\r\n    this.recorder.record();\r\n    this.startTime = moment();\r\n    this.interval = setInterval(\r\n      () => {\r\n        const currentTime = moment();\r\n        const diffTime = moment.duration(currentTime.diff(this.startTime));\r\n        const time = this.toString(diffTime.minutes()) + ':' + this.toString(diffTime.seconds());\r\n        this._recordingTime.next(time);\r\n      },\r\n      1000\r\n    );\r\n  }\r\n\r\n  private toString(value) {\r\n    let val = value;\r\n    if (!value) {\r\n      val = '00';\r\n    }\r\n    if (value < 10) {\r\n      val = '0' + value;\r\n    }\r\n    return val;\r\n  }\r\n\r\n  stopRecording() {\r\n\r\n    if (this.recorder) {\r\n      this.recorder.stop((blob) => {\r\n        if (this.startTime) {\r\n          const mp3Name = encodeURIComponent('audio_' + new Date().getTime() + '.mp3');\r\n          this.stopMedia();\r\n          this._recorded.next({ blob: blob, title: mp3Name });\r\n        }\r\n      }, () => {\r\n        this.stopMedia();\r\n        this._recordingFailed.next();\r\n      });\r\n    }\r\n  }\r\n\r\n  private stopMedia() {\r\n    if (this.recorder) {\r\n      this.recorder = null;\r\n      clearInterval(this.interval);\r\n      this.startTime = null;\r\n      if (this.stream) {\r\n        this.stream.getAudioTracks().forEach(track => track.stop());\r\n        this.stream = null;\r\n      }\r\n    }\r\n  }\r\n\r\n}"],"sourceRoot":"webpack:///"}